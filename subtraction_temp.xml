<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.8/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.8/ http://www.mediawiki.org/xml/export-0.8.xsd" version="0.8" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <base>http://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.24wmf7</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Subtraction</title>
    <ns>0</ns>
    <id>74141</id>
    <revision>
      <id>608613041</id>
      <parentid>608405756</parentid>
      <timestamp>2014-05-14T23:02:09Z</timestamp>
      <contributor>
        <ip>179.8.65.167</ip>
      </contributor>
      <text xml:space="preserve" bytes="17930">[[File:Subtraction01.svg|right|thumb|180px|&quot;5&amp;nbsp;&amp;minus;&amp;nbsp;2 = 3&quot; (verbally, &quot;five minus two equals three&quot;)]]
[[File:Verticle Subtraction Example.svg|right|thumb|180px|An example problem]]
[[Image:Subtraction chart.png|thumb|180px|Subtraction of numbers 0–10. Line labels = minuend. X axis = subtrahend. Y axis = difference.]]
[[File:Shop placard showing 20% reduction.JPG|thumb|Placard outside shop in Bordeaux advertising subtraction of 20% from the price of a second perfume]]

'''Subtraction''' is a [[operation (mathematics)|mathematical operation]] that represents the operation of removing objects from a collection. It is signified by the [[minus sign]] (−). For example, in the picture on the right, there are 5 − 2 apples—meaning 5 apples with 2 taken away, which is a total of 3 apples. Therefore, 5 − 2 = 3. Besides counting fruits, subtraction can also represent combining other physical and abstract quantities using different kinds of objects: [[negative number]]s, [[Fraction (mathematics)|fractions]], [[irrational number]]s, [[Euclidean vector|vector]]s, decimals, functions, matrices and more.

Subtraction follows several important patterns. It is [[commutativity|anticommutative]], meaning that changing the order changes the sign of the answer. It is not [[associativity|associative]], meaning that when one subtracts more than two numbers, the order in which subtraction is performed matters. Subtraction of [[0 (number)|0]] does not change a number. Subtraction also obeys predictable rules concerning related operations such as [[addition]] and [[multiplication]]. All of these rules can be [[mathematical proof|proven]], starting with the subtraction of [[integers]] and generalizing up through the [[real number]]s and beyond. General [[binary operations]] that continue these patterns are studied in [[abstract algebra]].

Performing subtraction is one of the simplest numerical tasks. Subtraction of very small numbers is accessible to young children. In [[primary education]], students are taught to subtract numbers in the [[decimal]] system, starting with single digits and progressively tackling more difficult problems. Mechanical aids range from the ancient [[abacus]] to the modern [[computer]].

==Basic subtraction: integers==
[[File:Line Segment jaredwf.svg|left|]]
Imagine a [[line segment]] of [[length]] ''b'' with the left end labeled ''a'' and the right end labeled ''c''. 
Starting from ''a'', it takes ''b'' steps to the right to reach ''c''. This movement to the right is modeled mathematically by [[addition]]:
:''a'' + ''b'' = ''c''.




From ''c'', it takes ''b'' steps to the ''left'' to get back to ''a''. This movement to the left is modeled by subtraction:
:''c'' − ''b'' = ''a''.



[[File:Subtraction line segment.svg|left|]]





Now, a line segment labeled with the numbers [[1 (number)|1]], [[2 (number)|2]], and [[3 (number)|3]]. 
From position 3, it takes no steps to the left to stay at 3, so 3&amp;nbsp;&amp;minus;&amp;nbsp;0 = 3. It takes 2 steps to the left to get to position 1, so 3&amp;nbsp;&amp;minus;&amp;nbsp;2 = 1. This picture is inadequate to describe what would happen after going 3 steps to the left of position 3.
To represent such an operation, the line must be extended.

To subtract arbitrary [[natural number]]s, one begins with a line containing every natural number (0, 1, 2, 3, 4, 5, 6, ...).  
From 3, it takes 3 steps to the left to get to 0, so 3&amp;nbsp;&amp;minus;&amp;nbsp;3 = 0.
But 3&amp;nbsp;&amp;minus;&amp;nbsp;4 is still invalid since it again leaves the line.
The natural numbers are not a useful context for subtraction.

The solution is to consider the [[integer]] [[number line]] (..., &amp;minus;3, &amp;minus;2, &amp;minus;1, 0, 1, 2, 3, ...). From 3, it takes 4 steps to the left to get to &amp;minus;1:
:3&amp;nbsp;&amp;minus;&amp;nbsp;4 = &amp;minus;1.

==Subtraction as addition==
{{Calculation results}}

There are some cases where subtraction as a separate [[operation (mathematics)|operation]] becomes problematic. For example, 3&amp;nbsp;&amp;minus;&amp;nbsp;(&amp;minus;2) (i.e. subtract &amp;minus;2 from 3) is not immediately obvious from either a [[natural number]] view or a number line view, because it is not immediately clear what it means to move &amp;minus;2 steps to the left or to take away &amp;minus;2 apples. One solution is to view subtraction as addition of signed numbers. Extra minus signs simply denote [[additive inverse|additive inversion]]. Then we have 3&amp;nbsp;&amp;minus;&amp;nbsp;(&amp;minus;2)&amp;nbsp;=&amp;nbsp;3&amp;nbsp;+&amp;nbsp;2&amp;nbsp;=&amp;nbsp;5. This also helps to keep the [[ring (mathematics)|ring]] of integers &quot;simple&quot; by avoiding the introduction of &quot;new&quot; operators such as subtraction. Ordinarily a ring only has two operations defined on it; in the case of the integers, these are addition and multiplication. A ring already has the concept of additive inverses, but it does not have any notion of a separate subtraction operation, so the use of signed addition as subtraction allows us to apply the ring axioms to subtraction without needing to prove anything.

==Algorithms for subtraction==
There are various algorithms for subtraction, and they differ in their suitability for various applications. A number of methods are adapted to [[elementary arithmetic|hand calculation]]; for example, when making change, no actual subtraction is performed, but rather the change-maker counts forward. 

For machine calculation, the [[method of complements]] is preferred, whereby the subtraction is replaced by an addition in a modular arithmetic.

==The teaching of subtraction in schools==
{{unclear-section|date=December 2013}}

Methods used to teach subtraction to [[elementary school]] vary from country to country, and within a country, different methods are in fashion at different times. In what is, in the [[United States of America|U.S.]], called [[traditional mathematics]], a specific process is taught to students at the end of the 1st year or during the 2nd year for use with multi-digit whole numbers, and is extended in either the fourth or fifth grade to include decimal representations of fractional numbers. 

Some American schools currently teach a method of subtraction using borrowing and a system of markings called crutches{{Citation needed|date=December 2008}}. Although a method of borrowing had been known and published in textbooks previously, the crutches are apparently the invention of William A. Brownell who used them in a study in November 1937{{Citation needed|date=December 2008}}. This system caught on rapidly, displacing the other methods of subtraction in use in America at that time.

Some European schools employ a method of subtraction called the Austrian method, also known as the additions method. There is no borrowing in this method. There are also crutches (markings to aid memory), which vary by country{{Citation needed|date=December 2008}}.

Both these methods break up the subtraction as a process of one digit subtractions by place value. Starting with a least significant digit, a subtraction of subtrahend:
: ''s''&lt;sub&gt;''j''&lt;/sub&gt; ''s''&lt;sub&gt;''j''&amp;minus;1&lt;/sub&gt; ... ''s''&lt;sub&gt;1&lt;/sub&gt;
from minuend 
: ''m''&lt;sub&gt;''k''&lt;/sub&gt; ''m''&lt;sub&gt;''k''&amp;minus;1&lt;/sub&gt; ... ''m''&lt;sub&gt;1&lt;/sub&gt;,
where each ''s''&lt;sub&gt;''i''&lt;/sub&gt; and ''m''&lt;sub&gt;''i''&lt;/sub&gt; is a digit, proceeds by writing down ''m''&lt;sub&gt;1&lt;/sub&gt;&amp;nbsp;&amp;minus;&amp;nbsp;''s''&lt;sub&gt;1&lt;/sub&gt;, ''m''&lt;sub&gt;2&lt;/sub&gt;&amp;nbsp;&amp;minus;&amp;nbsp;''s''&lt;sub&gt;2&lt;/sub&gt;, and so forth, as long as ''s''&lt;sub&gt;''i''&lt;/sub&gt; does not exceed ''m''&lt;sub&gt;''i''&lt;/sub&gt;. Otherwise, ''m''&lt;sub&gt;''i''&lt;/sub&gt; is increased by 10 and some other digit is modified to correct for this increase. The American method corrects by attempting to decrease the minuend digit ''m''&lt;sub&gt;''i''+1&lt;/sub&gt; by one (or continuing the borrow leftwards until there is a non-zero digit from which to borrow). The European method corrects by increasing the subtrahend digit ''s''&lt;sub&gt;''i''+1&lt;/sub&gt; by one.

'''Example:''' 704&amp;nbsp;&amp;minus;&amp;nbsp;512. The minuend is 704, the subtrahend is 512. The minuend digits are ''m''&lt;sub&gt;3&lt;/sub&gt; = 7, ''m''&lt;sub&gt;2&lt;/sub&gt; = 0
and ''m''&lt;sub&gt;1&lt;/sub&gt; = 4. The subtrahend digits are ''s''&lt;sub&gt;3&lt;/sub&gt; = 5, ''s''&lt;sub&gt;2&lt;/sub&gt; = 1 and ''s''&lt;sub&gt;1&lt;/sub&gt; = 2. Beginning at the one's place, 4 is not less than 2 so the difference 2 is written down in the result's one place. In the ten's place, 0 is less than 1, so the 0 is increased by 10, and the difference with 1, which is 9, is written down in the ten's place. The American method corrects for the increase of ten by reducing the digit in the minuend's hundreds place by one. That is, the 7 is struck through and replaced by a 6. The subtraction then proceeds in the hundreds place, where 6 is not less than 5, so the difference is written down in the result's hundred's place. We are now done, the result is 192.

The Austrian method does not reduce the 7 to 6. Rather it increases the subtrahend hundred's digit by one. A small mark is made near or below this digit (depending on the school). Then the subtraction proceeds by asking what number when increased by 1, and 5 is added to it, makes 7. The answer is 1, and is written down in the result's hundred's place.

There is an additional subtlety in that the student always employs a mental subtraction table in the American method. The Austrian method often encourages the student to mentally use the addition table in reverse. In the example above, rather than adding 1 to 5, getting 6, and subtracting that from 7, the student is asked to consider what number, when increased by 1, and 5 is added to it, makes 7.

== Subtraction by hand ==

=== Austrian method ===

Example:
&lt;gallery&gt;
File:Vertical Subtraction Method B Step 1.JPG|1 + … = 3
File:Vertical Subtraction Method B Step 2.JPG|The difference is written under the line.
File:Vertical Subtraction Method B Step 3.JPG|9 + … = 5&lt;br&gt;The required sum (5) is too small!
File:Vertical Subtraction Method B Step 4.JPG|So, we add 10 to it and put a 1 under the next higher place in the subtrahend.
File:Vertical Subtraction Method B Step 5.JPG|9 + … = 15&lt;br&gt;Now we can find the difference like before.
File:Vertical Subtraction Method B Step 6.JPG|(4 + 1) + … = 7
File:Vertical Subtraction Method B Step 7.JPG|The difference is written under the line.
File:Vertical Subtraction Method B Step 8.JPG|The total difference.
&lt;/gallery&gt;

=== Subtraction from left to right ===

Example:
&lt;gallery&gt;
File:LeftToRight Subtraction Step 1.JPG|7 − 4 = 3&lt;br&gt;This result is only penciled in.
File:LeftToRight Subtraction Step 2.JPG|Because the next digit of the minuend is smaller than the subtrahend, we subtract one from our penciled-in-number and mentally add ten to the next.
File:LeftToRight Subtraction Step 3.JPG|15 − 9 = 6
File:LeftToRight Subtraction Step 4.JPG|Because the next digit in the minuend is not smaller than the subtrahend, We keep this number.
File:LeftToRight Subtraction Step 5.JPG|3 − 1 = 2
&lt;/gallery&gt;

=== American method ===

In this method, each digit of the subtrahend is subtracted from the digit above it starting from right to left. If the top number is too small to subtract the bottom number from it, we add 10 to it; this 10 is 'borrowed' from the top digit to the left, which we subtract 1 from. Then we move on to subtracting the next digit and borrowing as needed, until every digit has been subtracted.
Example:
&lt;gallery&gt;
File:Vertical Subtraction Method A Step 1.JPG|3 − 1 = …
File:Vertical Subtraction Method A Step 2.JPG|We write the difference under the line.
File:Vertical Subtraction Method A Step 3.JPG|5 − 9 = …&lt;br&gt;The minuend (5) is too small!
File:Vertical Subtraction Method A Step 4.JPG|So, we add 10 to it. The 10 is 'borrowed' from the digit on the left, which goes down by 1. 
File:Vertical Subtraction Method A Step 5.JPG|15 − 9 = …&lt;br&gt;Now the subtraction works, and we write the difference under the line.
File:Vertical Subtraction Method A Step 6.JPG|6 − 4 = …
File:Vertical Subtraction Method A Step 7.JPG|We write the difference under the line.
File:Vertical Subtraction Method A Step 8.JPG|The total difference.
&lt;/gallery&gt;

=== Trade first ===
A variant of the American method where all borrowing is done before all subtraction.&lt;ref&gt;[https://sites.google.com/a/oswego308.org/msimester/home/math/algorithms/subtraction The Many Ways of Arithmetic in UCSMP Everyday Mathematics] Subtraction: Trade First&lt;/ref&gt;

Example:

&lt;gallery&gt;
File:Trade First Subtraction Step 1.JPG|1 − 3 =  not possible.&lt;br&gt;We add a 10 to the 1. Because the 10 is 'borrowed' from the nearby 5, the 5 is lowered by 1.
File:Trade First Subtraction Step 2.JPG|4 − 9 = not possible.&lt;br&gt;So we proceed as in step 1.
File:Trade First Subtraction Step 3.JPG|Working from right to left:&lt;br&gt;11 − 3 = 8
File:Trade First Subtraction Step 4.JPG|14 − 9 = 5
File:Trade First Subtraction Step 5.JPG|6 − 4 = 2
&lt;/gallery&gt;

=== Partial differences ===
The partial differences method is different from other vertical subtraction methods because no borrowing or carrying takes place. In their place, one places plus or minus signs depending on whether the minuend is greater or smaller than the subtrahend. The sum of the partial differences is the total difference.&lt;ref&gt;[http://ouronlineschools.org/Schools/NC/Demoschool/4thGrade/Math/PartialDifferences.htm Partial-Differences Subtraction]; [https://sites.google.com/a/oswego308.org/msimester/home/math/algorithms/subtraction The Many Ways of Arithmetic in UCSMP Everyday Mathematics] Subtraction: Partial Differences&lt;/ref&gt;

Example:

&lt;gallery&gt;
File:Partial-Differences Subtraction Step 1.JPG|The smaller number is subtracted from the greater:&lt;br&gt;700 − 400 = 300&lt;br&gt;Because the minuend is greater than the subtrahend, this difference has a plus sign.
File:Partial-Differences Subtraction Step 2.JPG|The smaller number is subtracted from the greater:&lt;br&gt;90 − 50 = 40&lt;br&gt;Because the minuend is smaller than the subtrahend, this difference has a minus sign.
File:Partial-Differences Subtraction Step 3.JPG|The smaller number is subtracted from the greater:&lt;br&gt;3 − 1 = 2&lt;br&gt;Because the minuend is greater than the subtrahend, this difference has a plus sign
File:Partial-Differences Subtraction Step 4.JPG|+ 300 − 40 + 2 = 262
&lt;/gallery&gt;
=== Nonvertical methods ===
==== Counting up ====
Instead of finding the difference digit by digit, one can count up the numbers between the subtahend and the minuend. &lt;ref&gt;[https://sites.google.com/a/oswego308.org/msimester/home/math/algorithms/subtraction The Many Ways of Arithmetic in UCSMP Everyday Mathematics] Subtraction: Counting Up&lt;/ref&gt;

Example:

1234 − 567 = can be found by the following steps:
* 567&amp;nbsp;+&amp;nbsp;'''3'''&amp;nbsp;=&amp;nbsp;570
* 570&amp;nbsp;+&amp;nbsp;'''30'''&amp;nbsp;=&amp;nbsp;600
* 600&amp;nbsp;+&amp;nbsp;'''400'''&amp;nbsp;=&amp;nbsp;1000
* 1000&amp;nbsp;+&amp;nbsp;'''234'''&amp;nbsp;=&amp;nbsp;1234
Add up the value from each step to get the total difference: 3&amp;nbsp;+&amp;nbsp;30&amp;nbsp;+&amp;nbsp;400&amp;nbsp;+&amp;nbsp;234&amp;nbsp;=&amp;nbsp;667.

==== Breaking up the subtraction ====
Another method that is useful for mental arithmetic is to split up the subtraction into small steps.&lt;ref&gt;[https://sites.google.com/a/oswego308.org/msimester/home/math/algorithms/subtraction The Many Ways of Arithmetic in UCSMP Everyday Mathematics] Subtraction: Left to Right Subtraction&lt;/ref&gt;

Example:

1234&amp;nbsp;−&amp;nbsp;567&amp;nbsp;= can be solved in the following way:
* 1234&amp;nbsp;−&amp;nbsp;'''500'''&amp;nbsp;=&amp;nbsp;734
* 734&amp;nbsp;−&amp;nbsp;'''60'''&amp;nbsp;=&amp;nbsp;674
* 674&amp;nbsp;−&amp;nbsp;'''7'''&amp;nbsp;=&amp;nbsp;667

==== Same change ====
The same change method uses the fact that adding or subtracting the same number from the minuend and subtrahend does not change the answer. One adds the amount needed to get zeros in the subtrahend.&lt;ref&gt;[https://sites.google.com/a/oswego308.org/msimester/home/math/algorithms/subtraction The Many Ways of Arithmetic in UCSMP Everyday Mathematics] Subtraction: Same Change Rule&lt;/ref&gt;

Example:

&quot;1234&amp;nbsp;−&amp;nbsp;567&amp;nbsp;=&quot; can be solved as follows:
*1234&amp;nbsp;−&amp;nbsp;567 = 1237&amp;nbsp;−&amp;nbsp;570 = 1267&amp;nbsp;−&amp;nbsp;600 = 667

==Units of measurement==

When subtracting two numbers with units of measurement such as kilograms or pounds, they must have the same unit. In most cases the difference will have the same unit as the original numbers. 

One exception is when subtracting two numbers with [[percentage]] as unit. In this case, the difference will have [[percentage point]]s as unit; the difference is that percentages must be positive, while percentage points may be negative.

==See also==
*[[wikt:decrement|Decrement]]
*[[Elementary arithmetic]]
*[[Method of complements]]
*[[Negative number]]

==Notes and references==
{{Reflist}}
*Browell, W. A. (1939). Learning as reorganization: An experimental study in third-grade arithmetic, Duke University Press.
*[http://math.coe.uga.edu/TME/Issues/v10n2/5ross.pdf Subtraction in the United States: An Historical Perspective, Susan Ross, Mary Pratt-Cotter, ''The Mathematics Educator'', Vol. 8, No. 1 (original publication) and Vol. 10, No. 1 (reprint.)] [[PDF]]

==External links==
{{Wiktionary}}
{{commonscat}}
* {{springer|title=Subtraction|id=p/s091050}}
* Printable Worksheets: [http://www.math-drills.com/subtraction.shtml Subtraction Worksheets], [http://www.kwiznet.com/p/takeQuiz.php?ChapterID=1214&amp;CurriculumID=2&amp;Method=Worksheet&amp;NQ=24&amp;NQ4P=3 One Digit Subtraction], [http://www.kwiznet.com/p/takeQuiz.php?ChapterID=1202&amp;CurriculumID=2&amp;Method=Worksheet&amp;NQ=24&amp;NQ4P=3 Two Digit Subtraction], and [http://www.kwiznet.com/p/takeQuiz.php?ChapterID=1273&amp;CurriculumID=3&amp;Method=Worksheet&amp;NQ=24&amp;NQ4P=3 Four Digit Subtraction]
* [http://www.cut-the-knot.org/Curriculum/Arithmetic/SubtractionGame.shtml Subtraction Game] at [[cut-the-knot]]
* [http://webhome.idirect.com/~totton/abacus/pages.htm#Subtraction1 Subtraction on a Japanese abacus] selected from [http://webhome.idirect.com/~totton/abacus/ Abacus: Mystery of the Bead]

{{Elementary arithmetic}}

[[Category:Elementary arithmetic]]
[[Category:Binary operations]]</text>
      <sha1>rkynl5qcdlx3qlrefkgxu6hg68bnnbz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Ambox</title>
    <ns>10</ns>
    <id>13179742</id>
    <revision>
      <id>578398722</id>
      <parentid>578101879</parentid>
      <timestamp>2013-10-23T12:52:13Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>Undid revision 578101879 by [[Special:Contributions/Mr. Stradivarius|Mr. Stradivarius]] ([[User talk:Mr. Stradivarius|talk]]) problems with module have been fixed - trying again</comment>
      <text xml:space="preserve" bytes="146">{{#invoke:Message box|ambox}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>mbfrv60doj3koropyon4zrq5dhk4lij</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Calculation results</title>
    <ns>10</ns>
    <id>38942844</id>
    <revision>
      <id>609755828</id>
      <parentid>607691951</parentid>
      <timestamp>2014-05-23T02:55:36Z</timestamp>
      <contributor>
        <username>Toby Bartels</username>
        <id>1078</id>
      </contributor>
      <comment>Changes about to be logged to Talk.</comment>
      <text xml:space="preserve" bytes="1084">{|style=&quot;float:right; margin-left:1em;&quot; class=&quot;toccolours&quot;
!colspan=2 style=&quot;background:#efefef;&quot;|Calculation results{{navbar|Calculation results|mini=1|style=float:right}}
|-
!colspan=2|[[Addition]] (+)
|-
|augend + addend =
|[[summation|sum]]
|-
!colspan=2|[[Subtraction]] (−)
|-
|minuend − subtrahend =
|difference
|-
!colspan=2|[[Multiplication]] (×)
|-
|multiplicand × multiplier =
|[[product (mathematics)|product]]
|-
!colspan=2|[[Division (mathematics)|Division]] (÷)
|-
|dividend ÷ divisor =
|[[quotient]]
|-
!colspan=2|[[Modulo operation|Modulation]] (mod)
|-
|dividend mod divisor =
|[[remainder]]
|-
!colspan=2|[[Exponentiation]]
|-
|[[base (exponentiation)|base]]&lt;sup&gt;exponent&lt;/sup&gt; =
|power
|-
!colspan=2|[[nth root|''n''th root]] (√)
|-
|{{math|{{radical|radicand|degree }}}} =
|root
|-
!colspan=2|[[Logarithm]] (log)
|-
|log&lt;sub&gt;[[base (exponentiation)|base]]&lt;/sub&gt;(antilogarithm) =
|logarithm
|}&lt;noinclude&gt;
&lt;br style=&quot;clear:both&quot; /&gt;
==See also==
{{Math templates|boxes}}

[[Category:Mathematics sidebar templates]]
[[Category:Exclude in print]]
&lt;/noinclude&gt;</text>
      <sha1>m6ib9p2qc895i1149f6qqdbs8832w41</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Category handler</title>
    <ns>10</ns>
    <id>25084818</id>
    <revision>
      <id>577959188</id>
      <parentid>577959113</parentid>
      <timestamp>2013-10-20T10:48:53Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Category handler: [[WP:High-risk templates|Highly visible template]]: allow template editors to edit ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <text xml:space="preserve" bytes="148">{{#invoke:Category handler|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories to the /doc subpage, and interwikis to Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>og6fhyj2ssd4fmzpqzuodk12q3cms0z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Citation</title>
    <ns>10</ns>
    <id>3164016</id>
    <revision>
      <id>579832493</id>
      <parentid>548573030</parentid>
      <timestamp>2013-11-02T04:59:06Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Citation: Enable access by template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <text xml:space="preserve" bytes="2236">&lt;includeonly&gt;{{
  #if: {{{inventor-surname|{{{inventor1-surname|{{{inventor-last|{{{inventor1-last|{{{inventor|{{{invent1|{{{invent-1|{{{country-code|{{{3|}}}}}}}}}}}}}}}}}}}}}}}}}}}
&lt;!--
    CITATIONS FOR PATENTS
--&gt;
|{{Citation/patent
 |Surname1 = {{{inventor-surname|{{{inventor1-surname|{{{inventor-last|{{{inventor1-last|{{{inventor|{{{invent-1|{{{invent1|}}}}}}}}}}}}}}}}}}}}}
 |Surname2={{{inventor2-surname|{{{inventor2-last|{{{inventor2|{{{invent2|}}}}}}}}}}}}
 |Surname3={{{inventor3-surname|{{{inventor3-last|{{{inventor3|{{{invent3|}}}}}}}}}}}}
 |Surname4={{{inventor4-surname|{{{inventor4-last|{{{inventor4|{{{invent4|}}}}}}}}}}}}
 |Given1 = {{{inventor-given|{{{inventor1-given|{{{inventor-first|{{{inventor1-first|}}}}}}}}}}}}
 |Given2={{{inventor2-given|{{{inventor2-first|}}}}}}
 |Given3={{{inventor3-given|{{{inventor3-first|}}}}}}
 |Given4={{{inventor4-given|{{{inventor4-first|}}}}}}
 |Inventorlink1={{{inventorlink1|{{{inventorlink|}}}}}}
 |Inventorlink2={{{inventorlink2|}}}
 |Inventorlink3={{{inventorlink3|}}}
 |Inventorlink4={{{inventorlink4|}}}
 |Title={{{title|}}}
 |CountryCode={{{country-code|{{{country|{{{1|}}}}}}}}}
 |PublicationNumber={{{publication-number|{{{patent-number|{{{number|{{{2|}}}}}}}}}}}}
 |Description={{{description|{{{status|{{{3|}}}}}}}}}
 |PublicationDate={{{publication-date|{{{pubdate|}}}}}}
 |IssueDate={{{issue-date|{{{gdate|}}}}}}
 |Year={{{year}}}
 |FilingDate={{{fdate|}}}
 |PriorityDate={{{pridate|}}}
 |Assignee1={{{assign1|}}}
 |Assignee2={{{assign2|}}}
  |Ref={{{ref|harv}}}
  |Sep = {{#ifeq:{{{separator|{{{seperator}}}}}}|;|&amp;#059;|{{{separator|{{{seperator|,}}}}}}}}
  |PS = {{#if:{{{quote|}}}||{{{postscript|}}}|.}}
  |AuthorSep = {{#ifeq:{{{author-separator|}}}|;|&amp;#059;|{{{author-separator|&amp;#059;}}}}}&amp;#32;
}}&lt;!--
    CITATIONS FOR THINGS LIKE BOOKS AND PERIODICALS
--&gt;
|{{#invoke:citation/CS1|citation
|CitationClass=citation
|separator=,
|ref=harv
|postscript=
}}
}}{{#if:{{{accessdaymonth|}}}{{{accessmonthday|}}}{{{accessday|}}}{{{accessmonth|}}}{{{accessyear|}}}{{{day|}}}{{{access-date|}}}{{{dateformat|}}}|[[Category:Pages containing cite templates with deprecated parameters|{{NAMESPACE}} {{PAGENAME}}]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>f5bastipuwbi8aqg45xupxr73g985wy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Citation needed</title>
    <ns>10</ns>
    <id>2048472</id>
    <revision>
      <id>601804852</id>
      <parentid>581832309</parentid>
      <timestamp>2014-03-29T13:47:10Z</timestamp>
      <contributor>
        <username>HJ Mitchell</username>
        <id>9336033</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Citation needed: listed on [[WP:CASC]], and probably needs to stay at full prot; cf. https://en.wikipedia.org/w/index.php?title=Wikipedia:Requests_for_page_protection&amp;diff=601804535&amp;oldid=601804352 ([Edit=Allow only ad</comment>
      <text xml:space="preserve" bytes="535">{{ {{{|safesubst:}}}#invoke:Unsubst||$N=Citation needed |date=__DATE__ |$B=
{{Fix
|name={{{name|Citation needed}}}
|link=Wikipedia:Citation needed
|text=citation needed
|class=Template-Fact
|title={{{reason|This claim needs references to reliable sources.}}}
|date={{{date|}}}
|cat=[[Category:All articles with unsourced statements]]
|cat-date=Category:Articles with unsourced statements
}}{{#if:{{{1|}}}|[[Category:Pages containing citation needed template with deprecated parameters]]}}
}}&lt;noinclude&gt;

{{Documentation}}

&lt;/noinclude&gt;</text>
      <sha1>ei6w2yy6fv1nmi8llw51wubhy4wt706</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Commons</title>
    <ns>10</ns>
    <id>1142901</id>
    <revision>
      <id>579832974</id>
      <parentid>574741619</parentid>
      <timestamp>2013-11-02T05:06:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Commons ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <text xml:space="preserve" bytes="333">{{ sister
| position = {{{position|}}}
| project  = commons
| text     = Wikimedia Commons has {{{alt-term|media related to}}} '''''[[commons:{{{1|Special:Search/{{PAGENAME}}}}}|{{{2|{{{1|{{PAGENAME}}}}}}}}]]'''''. 
}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories to the /doc sub-page and interwikis to Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>5bxrl52fspffd5w8544xfkhxcipgi1v</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Commons category</title>
    <ns>10</ns>
    <id>1275099</id>
    <revision>
      <id>579832965</id>
      <parentid>575426518</parentid>
      <timestamp>2013-11-02T05:06:20Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Commons category ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <text xml:space="preserve" bytes="1396">{{Commons
| position = {{{position|}}}
  &lt;!-- {{#if:x|}} strips whitespace from parameter 1, 
       in case it is fed like this: {{Commons category| Some cat }}. --&gt;
|Category:{{#if:x| {{{1| {{PAGENAME}} }}} }}&lt;!--
--&gt;|{{{2|{{{1|{{PAGENAME}}}}}}}}&lt;!--
--&gt;}}&lt;includeonly&gt;{{#if:{{{1|}}}||[[Category:Commons category template with no category set]]}}&lt;/includeonly&gt;&lt;noinclude&gt;

{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;&lt;includeonly&gt;&lt;!-- Some tracking categories to see if we're ready to switch to Wikidata --&gt;
{{#switch:{{NAMESPACE}}||{{ns:14}}=&lt;!-- Only articles and categories. --&gt;
 {{#if:{{#property:P373}}
 | {{#if:{{{1|}}}
  | {{#ifeq:{{#property:P373}}|{{#invoke:StringReplace|encode wiki page name|{{{1|}}}}}
   | [[Category:Commons category with local link same as on Wikidata]] &lt;!-- We want to end up here --&gt;
   | [[Category:Commons category with local link different than on Wikidata]] &lt;!-- Figure out the best link --&gt;
   }}
  | {{#ifeq:{{#property:P373}}|{{PAGENAME}}
   | [[Category:Commons category with page title same as on Wikidata]] &lt;!-- Ending up here is just fine --&gt;
   | [[Category:Commons category with page title different than on Wikidata]] &lt;!-- Figure out the best link here too --&gt;
   }}
  }}
 | [[Category:Commons category without a link on Wikidata]] &lt;!-- These we still need to import --&gt;
 }}
}}&lt;/includeonly&gt;</text>
      <sha1>pyn81hlsepgdv0iqumin9ov9baf4h8u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Commonscat</title>
    <ns>10</ns>
    <id>16909074</id>
    <redirect title="Template:Commons category" />
    <revision>
      <id>302203131</id>
      <parentid>205311906</parentid>
      <timestamp>2009-07-15T10:37:49Z</timestamp>
      <contributor>
        <username>Rich Farmbrough</username>
        <id>82835</id>
      </contributor>
      <comment>[[WP:AES|←]]Redirected page to [[Template:Commons category]]</comment>
      <text xml:space="preserve" bytes="39">#REDIRECT [[Template:Commons category]]</text>
      <sha1>eck4ul9ci6v627hyx9wdv4ezz0ylzi4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Confusing</title>
    <ns>10</ns>
    <id>1331311</id>
    <revision>
      <id>595338344</id>
      <parentid>582079604</parentid>
      <timestamp>2014-02-13T19:10:41Z</timestamp>
      <contributor>
        <username>It Is Me Here</username>
        <id>2552569</id>
      </contributor>
      <comment>Hatnote</comment>
      <text xml:space="preserve" bytes="816">&lt;noinclude&gt;{{Redirect|Template:Unclear||Template:Clarify}}&lt;/noinclude&gt;
{{ {{{|safesubst:}}}#invoke:Unsubst||$N=Confusing |date=__DATE__ |$B=
{{Ambox
| name  = Confusing
| subst = &lt;includeonly&gt;{{subst:substcheck}}&lt;/includeonly&gt;
| type  = style
| class = ambox-confusing
| small = {{{small| {{#ifeq:{{lc: {{{1|}}} }}|section|left}} }}}
| issue = This {{{1|article}}} '''may be [[Wikipedia:Vagueness|confusing or unclear]] to readers'''. {{#if:{{{reason|}}}|In particular, {{{reason}}}.}}
| fix   = Please help us [[Wikipedia:Please clarify|clarify the {{{1|article}}}]]; suggestions may be found on the [[{{{2|{{TALKPAGENAME}}}}}|talk page]].
| date  = {{{date|}}}
| cat   = Wikipedia articles needing clarification
| all   = All Wikipedia articles needing clarification
}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>dyfuomy8qc12k7g5elcha7wgwnn3qcu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Confusing section</title>
    <ns>10</ns>
    <id>17945407</id>
    <revision>
      <id>582082398</id>
      <parentid>568999181</parentid>
      <timestamp>2013-11-17T18:32:10Z</timestamp>
      <contributor>
        <username>AnomieBOT II</username>
        <id>12471462</id>
      </contributor>
      <minor/>
      <comment>[[Module:Unsubst|Unsubstifying]] template, so {{subst:Confusing section}} results in {{Confusing section|date=...}}</comment>
      <text xml:space="preserve" bytes="287">{{ {{{|safesubst:}}}#invoke:Unsubst||$N=Confusing section |date=__DATE__ |$B=
{{Confusing|section
| small= {{{small|left}}}
| reason = {{{reason|}}}
| date = {{{date|}}}
}}
}}&lt;noinclude&gt;
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>h5udqueh5b5m5whd8mb44akaxpbcthd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Elementary arithmetic</title>
    <ns>10</ns>
    <id>21862618</id>
    <revision>
      <id>582863383</id>
      <parentid>582848543</parentid>
      <timestamp>2013-11-22T20:21:53Z</timestamp>
      <contributor>
        <username>Hyacinth</username>
        <id>17171</id>
      </contributor>
      <comment>/* See also */ {{Math templates|functions}}</comment>
      <text xml:space="preserve" bytes="814">{{Navbox with columns
| name = Elementary arithmetic
| title = [[Elementary arithmetic]]
| colwidth = 25%
| colstyle = text-align: center
| col1 = [[File:Symbol support vote.svg|link=Addition|50px]]&lt;br/&gt;[[Addition]]&lt;br/&gt;&lt;font size=&quot;5&quot;&gt;[[Addition|+]]&lt;/font&gt;
| col2 = [[File:Symbol oppose vote.svg|link=Subtraction|50px]]&lt;br/&gt;[[Subtraction]]&lt;br/&gt;&lt;font size=&quot;5&quot;&gt;[[Subtraction|−]]&lt;/font&gt;
| col3 = [[File:Symbol multiplication vote.svg|link=Multiplication|50px]]&lt;br/&gt;[[Multiplication]]&lt;br/&gt;&lt;font size=&quot;5&quot;&gt;[[Multiplication|×]]&lt;/font&gt;
| col4 = [[File:Symbol divide vote.svg|link=Division (mathematics)|50px]]&lt;br/&gt;[[Division (mathematics)|Division]]&lt;br/&gt;&lt;font size=&quot;5&quot;&gt;[[Division (mathematics)|÷]]&lt;/font&gt;
}}&lt;noinclude&gt;
==See also==
{{Math templates|functions}}

[[Category:Mathematics navigational boxes]]
&lt;/noinclude&gt;</text>
      <sha1>nex5clhuls8c4k9rrq3shjvyqprnsdt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Fix</title>
    <ns>10</ns>
    <id>5632010</id>
    <revision>
      <id>607989926</id>
      <parentid>548824820</parentid>
      <timestamp>2014-05-11T01:03:11Z</timestamp>
      <contributor>
        <username>Waldir</username>
        <id>182472</id>
      </contributor>
      <comment>if the noprint and inline-template classes need to be preserved, according to the docs, then why not enforcing in the code rather than asking people to do it (and relying on them reading the docs attentively enough not to miss that)?</comment>
      <text xml:space="preserve" bytes="1105">{{#switch:{{{subst|¬}}}
 |¬={{category handler
  |template=[[Category:Templates needing substitution checking]]
  |nocat={{{nocat|&lt;noinclude&gt;true&lt;/noinclude&gt;}}}
 }}
 |SUBST=[[Category:Pages with incorrectly substituted templates]]
}}{{Category handler
 |main={{Fix/category
  |cat-date={{{cat-date|}}} 
  |cat={{{cat|}}} 
  |cat-date2={{{cat-date2|}}} 
  |cat2={{{cat2|}}} 
  |cat-date3={{{cat-date3|}}} 
  |cat3={{{cat3|}}} 
  |date={{{date|}}}
 }}
 |template={{#if:{{{name|}}}|{{#ifeq:{{{name}}}|{{ROOTPAGENAME}}||{{#if:{{{date|}}}||[[Category:Templates including undated clean-up tags]]}}}}}} 
 |subpage=no
}}{{#if:{{{text|}}}
 |&lt;sup class=&quot;noprint Inline-Template {{{class|}}}&quot; style=&quot;white-space:nowrap;&quot;&gt;&amp;#91;&lt;i&gt;{{#if:{{{pre-text|}}}
  |{{{pre-text}}}&amp;#32;
 }}[[{{{link|Wikipedia:Cleanup}}}|&lt;span title=&quot;{{{title|{{{link|Wikipedia:Cleanup}}}}}}{{#if:{{{date|}}}|&lt;nowiki/&gt; ({{{date}}})}}&quot;&gt;{{{text|}}}&lt;/span&gt;]]{{#if:{{{post-text|}}}
  |&amp;#32;{{{post-text}}}
 }}&lt;/i&gt;&amp;#93;&lt;/sup&gt;|{{{special|}}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add cats and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>dnlz7xi33mu40b2x5daxnpjkx6c8kb9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Fix/category</title>
    <ns>10</ns>
    <id>34017846</id>
    <revision>
      <id>471928517</id>
      <parentid>471928513</parentid>
      <timestamp>2012-01-17T21:00:05Z</timestamp>
      <contributor>
        <username>TheDJ</username>
        <id>244887</id>
      </contributor>
      <comment>Adding {{pp-template}} ([[WP:TW|TW]])</comment>
      <text xml:space="preserve" bytes="858">&lt;noinclude&gt;{{pp-template|small=yes}}&lt;/noinclude&gt;{{{cat|[[Category:All pages needing cleanup]]}}}{{#if:{{{cat-date|}}}
  |[[{{{cat-date}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}{{#if:{{{cat2|}}}|{{{cat2}}}}}{{#if:{{{cat-date2|}}}
  |[[{{{cat-date2}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date2}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}{{#if:{{{cat3|}}}|{{{cat3}}}}}{{#if:{{{cat-date3|}}}
  |[[{{{cat-date3}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date3}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}</text>
      <sha1>gpikm5p2yggfosi6w5maxtx5my3u9im</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Math</title>
    <ns>10</ns>
    <id>17769239</id>
    <revision>
      <id>589281513</id>
      <parentid>557660140</parentid>
      <timestamp>2014-01-05T12:32:25Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Spaces are stripped by sanitizer</comment>
      <text xml:space="preserve" bytes="185">&lt;span class=&quot;texhtml {{#if:{{{big|}}}{{{size|}}}|texhtml-big}}&quot; {{#if:{{{big|}}}{{{size|}}}|style=&quot;font-size:{{{size|165%}}};&quot;}}&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>nj97zeih5xj5z1dk546rkopwo76k9vl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Navbar</title>
    <ns>10</ns>
    <id>5277509</id>
    <revision>
      <id>584390135</id>
      <parentid>579315044</parentid>
      <timestamp>2013-12-03T17:14:06Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Does not work, now hidden in [[MediaWiki:Print.css]]</comment>
      <text xml:space="preserve" bytes="1103">&lt;includeonly&gt;&lt;div class=&quot;plainlinks hlist navbar {{#if:{{{mini|}}}|mini}}&quot; style=&quot;{{{style|}}}&quot;&gt;&lt;!--

--&gt;{{#if:{{{mini|}}}{{{plain|}}}|&lt;!--nothing--&gt;|&lt;!--else:
--&gt;&lt;span style=&quot;word-spacing:0;{{{fontstyle|}}}&quot;&gt;{{{text|This box:}}} &lt;/span&gt;}}&lt;!--

--&gt;{{#if:{{{brackets|}}}|&lt;span style=&quot;margin-right:-0.125em;{{{fontstyle|}}}&quot;&gt;&amp;#91;&lt;/span&gt;}}&lt;!--

--&gt;&lt;ul&gt;&lt;!--
--&gt;&lt;li class=&quot;nv-view&quot;&gt;[[{{transclude|{{{1}}}}}|&lt;span title=&quot;View this template&quot; &lt;!--
--&gt;style=&quot;{{{fontstyle|}}}&quot;&gt;{{#if:{{{mini|}}}|v|view}}&lt;/span&gt;]]&lt;/li&gt;&lt;!--

--&gt;&lt;li class=&quot;nv-talk&quot;&gt;[[{{TALKPAGENAME:{{transclude|{{{1}}}}}}}|&lt;span title=&quot;Discuss this template&quot; &lt;!--
--&gt;style=&quot;{{{fontstyle|}}}&quot;&gt;{{#if:{{{mini|}}}|t|talk}}&lt;/span&gt;]]&lt;/li&gt;&lt;!--

--&gt;{{#if:{{{noedit|}}}|&lt;!--nothing--&gt;|&lt;!--else:
--&gt;&lt;li class=&quot;nv-edit&quot;&gt;[{{fullurl:{{transclude|{{{1}}}}}|action=edit}} &lt;span title=&quot;Edit this template&quot; &lt;!--
--&gt;style=&quot;{{{fontstyle|}}}&quot;&gt;{{#if:{{{mini|}}}|e|edit}}&lt;/span&gt;]&lt;/li&gt;}}&lt;!--
--&gt;&lt;/ul&gt;&lt;!--

--&gt;{{#if:{{{brackets|}}}|&lt;span style=&quot;margin-left:-0.125em;{{{fontstyle|}}}&quot;&gt;&amp;#93;&lt;/span&gt;}}&lt;!--

--&gt;&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;

{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>o0nu6r3h7z4ib71y018sgmw0vpebte1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Navbox</title>
    <ns>10</ns>
    <id>995954</id>
    <revision>
      <id>579335568</id>
      <parentid>547011190</parentid>
      <timestamp>2013-10-29T19:54:41Z</timestamp>
      <contributor>
        <username>Mark Arsten</username>
        <id>15020596</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Navbox: Allowing Protected Template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <text xml:space="preserve" bytes="128">{{#invoke: Navbox | navbox }}&lt;noinclude&gt;{{documentation}}&lt;!-- Add categories and interwikis to the /doc sub-page --&gt;&lt;/noinclude&gt;</text>
      <sha1>lxoimlqslukeym1vcyobh3pyhtcmwci</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Navbox with columns</title>
    <ns>10</ns>
    <id>12881788</id>
    <revision>
      <id>579318644</id>
      <parentid>547323051</parentid>
      <timestamp>2013-10-29T18:09:56Z</timestamp>
      <contributor>
        <username>Mark Arsten</username>
        <id>15020596</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Navbox with columns: Allowing Protected Template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <text xml:space="preserve" bytes="16257">&lt;!--

Please do not edit without discussion first as this is a &quot;VERY complex&quot; template.

--&gt;{{Navbox
|name = {{{name|}}}
|navbar = {{{navbar|}}}
|state = {{{state|}}}
|border = {{{border|{{{1|}}}}}}

|title = {{{title|}}}
|above = {{{above|}}}
|image = {{{image|}}}
|imageleft = {{{imageleft|}}}

|bodyclass = {{{bodyclass|}}}
|titleclass = {{{titleclass|}}}
|aboveclass = {{{aboveclass|}}}
|belowclass = {{{belowclass|}}}
|groupclass = {{{groupclass|}}}
|listclass = {{{listclass|}}}

|style = {{{style|}}}{{{bodystyle|}}}
|basestyle = {{{basestyle|}}}
|titlestyle = {{{titlestyle|}}}
|abovestyle = {{{abovestyle|}}}
|belowstyle = {{{belowstyle|}}}
|imagestyle = {{{imagestyle|}}}
|imageleftstyle = {{{imageleftstyle|}}}
|oddstyle = {{{oddstyle|}}}
|evenstyle = {{{evenstyle|}}}
|{{#if:{{{evenodd|}}}|evenodd|void}} = {{{evenodd|}}}
|list1padding = 0px;

|list1 = &lt;!--
 --&gt;&lt;table cellspacing=&quot;0&quot; class=&quot;navbox-columns-table&quot; style=&quot;text-align:left;&lt;!--
 --&gt;{{#if:{{{col1header|}}}{{{fullwidth|}}}|width:100%;&lt;!--
 --&gt;|width:auto; margin-left:auto; margin-right:auto;}}{{{coltablestyle|}}}&quot;&gt;&lt;!--


--- Header row ---

--&gt;{{#if:{{{col1header|}}}|&lt;tr&gt;&lt;!--

--&gt;&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col1headercolspan|1}}} style=&quot;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col1headerstyle|}}}&quot;&gt;{{{col1header}}}&lt;/td&gt;&lt;!--

--&gt;{{#if:{{{col2header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col2headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col2headerstyle|}}}&quot;&gt;{{{col2header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col3header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col3headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col3headerstyle|}}}&quot;&gt;{{{col3header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col4header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col4headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col4headerstyle|}}}&quot;&gt;{{{col4header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col5header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col5headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col5headerstyle|}}}&quot;&gt;{{{col5header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col6header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col6headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col6headerstyle|}}}&quot;&gt;{{{col6header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col7header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col7headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col7headerstyle|}}}&quot;&gt;{{{col7header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col8header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col8headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col8headerstyle|}}}&quot;&gt;{{{col8header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col9header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col9headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col9headerstyle|}}}&quot;&gt;{{{col9header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col10header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col10headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col10headerstyle|}}}&quot;&gt;{{{col10header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col11header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col11headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col11headerstyle|}}}&quot;&gt;{{{col11header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col12header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col12headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col12headerstyle|}}}&quot;&gt;{{{col12header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col13header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col13headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col13headerstyle|}}}&quot;&gt;{{{col13header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col14header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col14headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col14headerstyle|}}}&quot;&gt;{{{col14header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col15header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col15headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col15headerstyle|}}}&quot;&gt;{{{col15header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col16header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col16headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col16headerstyle|}}}&quot;&gt;{{{col16header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col17header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col17headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col17headerstyle|}}}&quot;&gt;{{{col17header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col18header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col18headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col18headerstyle|}}}&quot;&gt;{{{col18header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col19header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;colspan={{{col19headercolspan|1}}} style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col19headerstyle|}}}&quot;&gt;{{{col19header}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col20header|}}}|&lt;td class=&quot;navbox-abovebelow&quot; &lt;!--
 --&gt;style=&quot;border-left:2px solid #fdfdfd;&lt;!--
 --&gt;font-weight:bold;{{{colheaderstyle|}}}{{{col20headerstyle|}}}&quot;&gt;{{{col20header}}}&lt;/td&gt;}}&lt;!--

--&gt;&lt;/tr&gt;}}&lt;!--


--- Main columns---

--&gt;{{#if:{{{col1|}}}|{{#if:{{{col1header|}}}|&lt;tr style=&quot;height:2px;&quot;&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;}}&lt;!--

--&gt;&lt;tr style=&quot;vertical-align:top;&quot;&gt;&lt;!--
--&gt;{{#if:{{{col1header|}}}{{{col1footer|}}}{{{fullwidth|}}}|&lt;!--
 --&gt;|{{#switch:{{{padding|}}}|off|0|0em|0px|0%|0;|0em;|0px;|0%;=&lt;!--
 --&gt;|#default=&lt;td style=&quot;width:{{{padding|5em}}};&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;}}}}&lt;!--

--&gt;&lt;td style=&quot;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col1style|}}};width:{{{col1width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col1}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col2|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col2style|}}};width:{{{col2width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col2}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col3|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col3style|}}};width:{{{col3width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col3}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col4|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col4style|}}};width:{{{col4width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col4}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col5|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col5style|}}};width:{{{col5width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col5}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col6|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col6style|}}};width:{{{col6width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col6}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col7|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col7style|}}};width:{{{col7width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col7}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col8|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col8style|}}};width:{{{col8width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col8}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col9|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col9style|}}};width:{{{col9width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col9}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col10|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col10style|}}};width:{{{col10width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col10}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col11|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col11style|}}};width:{{{col11width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col11}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col12|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col12style|}}};width:{{{col12width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col12}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col13|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col13style|}}};width:{{{col13width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col13}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col14|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col14style|}}};width:{{{col14width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col14}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col15|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col15style|}}};width:{{{col15width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col15}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col16|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col16style|}}};width:{{{col16width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col16}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col17|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col17style|}}};width:{{{col17width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col17}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col18|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col18style|}}};width:{{{col18width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col18}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col19|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{oddcolstyle|}}};{{{col19style|}}};width:{{{col19width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col19}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col20|}}}|&lt;td style=&quot;border-left:2px solid #fdfdfd;padding:0px;&lt;!--
--&gt;{{{colstyle|}}};{{{evencolstyle|}}};{{{col20style|}}};width:{{{col20width|{{{colwidth|10em}}}}}};&quot;&gt;&lt;div&gt;
{{{col20}}}
&lt;/div&gt;&lt;/td&gt;}}&lt;!--



--- Footer row ---

--&gt;{{#if:{{{col1footer|}}}|&lt;!--
--&gt;{{#if:{{{col1|}}}{{{col1header|}}}|&lt;tr style=&quot;height:2px&quot;&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;}}&lt;tr&gt;&lt;!--

--&gt;&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col1footercolspan|1}}} style=&quot;&lt;!--
 --&gt;font-weight:bold;{{{colfooterstyle|}}};{{{col1footerstyle|}}}&quot;&gt;{{{col1footer}}}&lt;/td&gt;&lt;!--

--&gt;{{#if:{{{col2footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col2footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col2footerstyle|}}}&quot;&gt;{{{col2footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col3footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col3footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col3footerstyle|}}}&quot;&gt;{{{col3footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col4footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col4footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col4footerstyle|}}}&quot;&gt;{{{col4footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col5footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col5footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col5footerstyle|}}}&quot;&gt;{{{col5footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col6footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col6footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col6footerstyle|}}}&quot;&gt;{{{col6footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col7footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col7footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col7footerstyle|}}}&quot;&gt;{{{col7footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col8footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col8footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col8footerstyle|}}}&quot;&gt;{{{col8footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col9footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col9footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col9footerstyle|}}}&quot;&gt;{{{col9footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col10footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col10footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col10footerstyle|}}}&quot;&gt;{{{col10footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col11footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col11footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col11footerstyle|}}}&quot;&gt;{{{col11footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col12footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col12footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col12footerstyle|}}}&quot;&gt;{{{col12footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col13footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col13footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col13footerstyle|}}}&quot;&gt;{{{col13footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col14footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col14footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col14footerstyle|}}}&quot;&gt;{{{col14footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col15footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col15footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col15footerstyle|}}}&quot;&gt;{{{col15footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col16footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col16footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col16footerstyle|}}}&quot;&gt;{{{col16footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col17footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col17footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col17footerstyle|}}}&quot;&gt;{{{col17footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col18footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col18footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col18footerstyle|}}}&quot;&gt;{{{col18footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col19footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; colspan={{{col19footercolspan|1}}} style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col19footerstyle|}}}&quot;&gt;{{{col19footer}}}&lt;/td&gt;}}&lt;!--

--&gt;{{#if:{{{col20footer|}}}|&lt;td class=&quot;navbox-abovebelow&quot; style=&quot;&lt;!--
 --&gt;border-left:2px solid #fdfdfd;font-weight:bold;{{{colfooterstyle|}}};{{{col20footerstyle|}}}&quot;&gt;{{{col20footer}}}&lt;/td&gt;}}&lt;!--

--&gt;&lt;/tr&gt;}}&lt;!--

--&gt;&lt;/tr&gt;&lt;/table&gt;


&lt;!--  Allow a few additional groups/lists after columns  --&gt;
|liststyle = {{{liststyle|}}}
|list1style = background:transparent;color:inherit;
|list3style = {{{list1style|}}}
|list4style = {{{list2style|}}}
|list5style = {{{list3style|}}}
|list6style = {{{list3style|}}}
|list7style = {{{list5style|}}}
|list8style = {{{list6style|}}}

|list3 = {{{list1|}}}
|list4 = {{{list2|}}}
|list5 = {{{list3|}}}
|list6 = {{{list4|}}}
|list7 = {{{list5|}}}
|list8 = {{{list6|}}}

|groupstyle = {{{groupstyle|}}}
|group3style = {{{group1style|}}}
|group4style = {{{group2style|}}}
|group5style = {{{group3style|}}}
|group6style = {{{group4style|}}}
|group7style = {{{group5style|}}}
|group8style = {{{group6style|}}}

|group3 = {{{group1|}}}
|group4 = {{{group2|}}}
|group5 = {{{group3|}}}
|group6 = {{{group4|}}}
|group7 = {{{group5|}}}
|group8 = {{{group6|}}}

|below = {{{below|}}}

|tracking = no

}}&lt;noinclude&gt;
{{documentation}}

&lt;!---Please add metadata to the &lt;includeonly&gt; section at the bottom of the /doc subpage---&gt;
&lt;/noinclude&gt;</text>
      <sha1>m5xnvlsal2etk2vjj9nd0e970x6bhwj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Radic</title>
    <ns>10</ns>
    <id>19474631</id>
    <revision>
      <id>465814975</id>
      <parentid>459337910</parentid>
      <timestamp>2011-12-14T13:53:31Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Use one &lt;sup&gt;</comment>
      <text xml:space="preserve" bytes="324">&lt;span class=&quot;nowrap&quot;&gt;{{#if:{{{2|}}}|&lt;sup style=&quot;margin-right: -0.5em; vertical-align: 0.8em;&quot;&gt;{{{2|}}}&lt;/sup&gt;}}&amp;radic;&lt;span style=&quot;border-top:1px solid; padding:0 0.1em;&quot;&gt;{{{1}}}&lt;/span&gt;&lt;/span&gt;&lt;noinclude&gt;

{{Documentation}}
&lt;!-- PLEASE ADD THIS TEMPLATE'S CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS --&gt;
&lt;/noinclude&gt;</text>
      <sha1>g053trm6d487sif0j43m0latuq06bpg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Radical</title>
    <ns>10</ns>
    <id>20543702</id>
    <redirect title="Template:Radic" />
    <revision>
      <id>258159455</id>
      <parentid>255855828</parentid>
      <timestamp>2008-12-15T17:53:41Z</timestamp>
      <contributor>
        <username>Alksentrs</username>
        <id>5041971</id>
      </contributor>
      <comment>[[WP:AES|←]]Redirected page to [[Template:Radic]]</comment>
      <text xml:space="preserve" bytes="28">#REDIRECT [[Template:Radic]]</text>
      <sha1>7rhip2v1acf20l77w91boywewxywmtu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Reflist</title>
    <ns>10</ns>
    <id>7585648</id>
    <revision>
      <id>609575459</id>
      <parentid>599693107</parentid>
      <timestamp>2014-05-21T20:39:37Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Remove category. Tally at ± 250,000.</comment>
      <text xml:space="preserve" bytes="817">&lt;div class=&quot;reflist &lt;!--
 --&gt;{{#if: {{{1|}}}
    | columns {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | references-column-width 
      | references-column-count references-column-count-{{#if:1|{{{1}}}}} }}
    | {{#if: {{{colwidth|}}}
      | references-column-width }} }}&quot; style=&quot;&lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | {{column-width|{{#if:1|{{{1}}}}}}}
      | {{column-count|{{#if:1|{{{1}}}}}}} }}
    | {{#if: {{{colwidth|}}}
      | {{column-width|{{{colwidth}}}}} }} }} list-style-type: &lt;!--
 --&gt;{{{liststyle|{{#switch: {{{group|}}}
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group}}}
    | #default = decimal}}}}};&quot;&gt;
{{#tag:references|{{{refs|}}}|group={{{group|}}}}}&lt;/div&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>4gkyehj7b4opv62ycz6r0hb716dhgog</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Side box</title>
    <ns>10</ns>
    <id>20504849</id>
    <revision>
      <id>611333719</id>
      <parentid>569850066</parentid>
      <timestamp>2014-06-03T04:58:23Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>convert to [[Module:Side box]]</comment>
      <text xml:space="preserve" bytes="142">{{#invoke:Side box|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>s1zpy5c500y28mjgve7gykq14088u4e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Sister</title>
    <ns>10</ns>
    <id>20505184</id>
    <revision>
      <id>600197765</id>
      <parentid>597811593</parentid>
      <timestamp>2014-03-18T19:02:50Z</timestamp>
      <contributor>
        <username>Technical 13</username>
        <id>14450599</id>
      </contributor>
      <comment>Per edit request on talk page.</comment>
      <text xml:space="preserve" bytes="1358">{{Side box
| position = {{{position|}}}
| image    = 
  {{#switch: {{{image|}}}
  | none =    &lt;!-- &quot;image=none&quot;, do nothing --&gt;
  |      =    &lt;!-- No image fed, select an image --&gt;
    [[Image:{{#switch: {{lc: {{{project|}}} }}
    | commons                = Commons-logo.svg
    | meta|metawiki|m        = Wikimedia Community Logo.svg
    | wikibooks|wbk|wb|b     = Wikibooks-logo-en-noslogan.svg
    | wikidata|data          = Wikidata-logo.svg
    | wikiquote|quote|wqt|q  = Wikiquote-logo.svg
    | wikipedia|wp|w         = Wikipedia-logo-v2.svg
    | wikisource|source|ws|s = Wikisource-logo.svg
    | wiktionary|wkt|wdy|d   = Wiktionary-logo-en.svg
    | wikinews|news|wnw|n    = Wikinews-logo.svg
    | wikispecies|species    = Wikispecies-logo.svg
    | wikiversity|wvy|v      = Wikiversity-logo.svg
    | wikivoyage|voyage|voy  = Wikivoyage-Logo-v3-icon.svg
    | mediawiki|mw           = Mediawiki.png
    | outreachwiki|outreach  = Wikimedia Outreach.png
    | incubator              = Incubator-notext.svg
    | #default               = Wikimedia-logo.svg
    }}|40x40px|link=|alt=
    ]]
  | #default = {{{image|}}}
  }}
| text       = {{{text}}}
| below      = {{{below|}}}
| imageright = {{{imageright|}}}
| class      = plainlinks
}}&lt;noinclude&gt;{{Documentation}}&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;&lt;/noinclude&gt;</text>
      <sha1>j9g1vzq75i6cqwvfecv95lq1eauvf7x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Springer</title>
    <ns>10</ns>
    <id>33015169</id>
    <redirect title="Template:SpringerEOM" />
    <revision>
      <id>581756595</id>
      <parentid>581755628</parentid>
      <timestamp>2013-11-15T11:28:37Z</timestamp>
      <contributor>
        <username>Fred Bauder</username>
        <id>5190</id>
      </contributor>
      <minor/>
      <comment>[[Help:Reverting|Reverted]] edits by [[Special:Contributions/Fred Bauder|Fred Bauder]] ([[User talk:Fred Bauder|talk]]) to last version by AGK</comment>
      <text xml:space="preserve" bytes="34">#REDIRECT [[Template:SpringerEOM]]</text>
      <sha1>452727htmozoipttd6e4a84fz7o2s6d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:SpringerEOM</title>
    <ns>10</ns>
    <id>4369123</id>
    <revision>
      <id>532266628</id>
      <parentid>507997032</parentid>
      <timestamp>2013-01-09T23:09:57Z</timestamp>
      <contributor>
        <username>Taweetham</username>
        <id>9483991</id>
      </contributor>
      <comment>- [[ja:Template:SpringerEOM]]</comment>
      <text xml:space="preserve" bytes="829">{{Citation
 | last={{{last|{{{last1|{{{author|{{{author1|{{{authors|}}}}}}}}}}}}}}}
 | first={{{first|{{{first1|}}}}}}
 | author-link={{{author-link|{{{authorlink|{{{author1-link|{{{authorlink1|{{{author1link|}}}}}}}}}}}}}}}
 | last2={{{last2|{{{author2|}}}}}}
 | first2={{{first2|}}} 
 | author2-link={{{author2-link|{{{authorlink2|{{{author2link|}}}}}}}}}
 | year={{#if:{{{year|}}}|{{{year}}}|2001}}
 | contribution={{{title|{{{article|{{{id|{{PAGENAME}}}}}}}}}}}
 | contribution-url=http://www.encyclopediaofmath.org/index.php?title={{{id|{{{urlname|Main_Page}}}}}}
 | editor-last=Hazewinkel
 | editor-first=Michiel
 | title=[[Encyclopedia of Mathematics]]
 | publisher=[[Springer Science+Business Media|Springer]]
 | isbn=978-1-55608-010-4
}}&lt;noinclude&gt;{{Documentation}}
[[Category:Mathematics source templates]]
&lt;/noinclude&gt;</text>
      <sha1>fu8e3d7r6tsipm5deeou720u2ozmijv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Transclude</title>
    <ns>10</ns>
    <id>21843384</id>
    <revision>
      <id>275377931</id>
      <parentid>275377779</parentid>
      <timestamp>2009-03-06T12:09:04Z</timestamp>
      <contributor>
        <username>Happy-melon</username>
        <id>994084</id>
      </contributor>
      <minor/>
      <comment>Protected Template:Transclude: [[WP:HRT|Highly visible template]] ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve" bytes="400">{{#switch: {{NAMESPACE: {{{1}}} }}
 |#default = {{FULLPAGENAME: {{{1}}} }} &lt;!-- eg &quot;User:Foo&quot; --&gt;
 |{{ns:0}} = 
    {{#ifeq: {{NAMESPACE: {{{1}}} }} | {{NAMESPACE: Template{{{1}}} }}
      | Template:{{{1}}}            &lt;!-- no leading colon, eg &quot;Foo&quot; --&gt;
      | {{PAGENAME: {{{1}}} }}      &lt;!-- leading colon, eg &quot;:Foo&quot;, so we want the article --&gt;
    }}
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ob9m2b913drxlie5tgekieudupfrl9n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Unclear-section</title>
    <ns>10</ns>
    <id>24700382</id>
    <redirect title="Template:Confusing section" />
    <revision>
      <id>435904019</id>
      <parentid>320155456</parentid>
      <timestamp>2011-06-24T01:36:34Z</timestamp>
      <contributor>
        <username>Rich Farmbrough</username>
        <id>82835</id>
      </contributor>
      <comment>[[WP:AES|←]]Redirected page to [[Template:Confusing section]]</comment>
      <text xml:space="preserve" bytes="40">#REDIRECT [[Template:Confusing section]]</text>
      <sha1>53aao7pqgi52s79keiiyju0xcppds2m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Wiktionary</title>
    <ns>10</ns>
    <id>960068</id>
    <revision>
      <id>577888235</id>
      <parentid>505122081</parentid>
      <timestamp>2013-10-19T20:40:12Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Wiktionary: allow template editors to modify ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <text xml:space="preserve" bytes="613">{{sister
|position={{{position|}}}
|project=wiktionary
|text=Look up '''''[[wiktionary:{{{1|Special:Search/{{lc:{{SUBPAGENAME}}}}}}}|{{{1|{{lc:{{SUBPAGENAME}}}}}}}]]'''''{{#if:{{{2|}}}
  |{{#if:{{{3|}}}
   |,
   |&amp;nbsp;or
  }} '''''[[wiktionary:{{{2}}}|{{{2}}}]]'''''
 }}{{#if:{{{3|}}}
  |{{#if:{{{4|}}}
   |,
   |, or
  }} '''''[[wiktionary:{{{3}}}|{{{3}}}]]'''''
 }}{{#if:{{{4|}}}
  |{{#if:{{{5|}}}
   |,
   |, or
  }} '''''[[wiktionary:{{{4}}}|{{{4}}}]]'''''
 }}{{#if:{{{5|}}}
  |, or '''''[[wiktionary:{{{5}}}|{{{5}}}]]'''''
 }} in Wiktionary, the free dictionary.
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>3xwkwu8dmh63nfy9xikge4h38islb8l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Module:Arguments</title>
    <ns>828</ns>
    <id>41298065</id>
    <revision>
      <id>611826022</id>
      <parentid>604718421</parentid>
      <timestamp>2014-06-06T14:24:47Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>add a &quot;wrappers&quot; option and fix bug when frame:getParent() returns nil, per protected edit request by [[User:Jackmcbarn]]</comment>
      <text xml:space="preserve" bytes="8451">-- This module provides easy processing of arguments passed to Scribunto from
-- #invoke. It is intended for use by other Lua modules, and should not be
-- called from #invoke directly.

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType

local arguments = {}

-- Generate four different tidyVal functions, so that we don't have to check the
-- options every time we call it.

local function tidyValDefault(key, val)
	if type(val) == 'string' then
		val = val:match('^%s*(.-)%s*$')
		if val == '' then
			return nil
		else
			return val
		end
	else
		return val
	end
end

local function tidyValTrimOnly(key, val)
	if type(val) == 'string' then
		return val:match('^%s*(.-)%s*$')
	else
		return val
	end
end

local function tidyValRemoveBlanksOnly(key, val)
	if type(val) == 'string' then
		if val:find('%S') then
			return val
		else
			return nil
		end
	else
		return val
	end
end

local function tidyValNoChange(key, val)
	return val
end

function arguments.getArgs(frame, options)
	checkType('getArgs', 1, frame, 'table', true)
	checkType('getArgs', 2, options, 'table', true)
	frame = frame or {}
	options = options or {}

	--[[
	-- Get the argument tables. If we were passed a valid frame object, get the
	-- frame arguments (fargs) and the parent frame arguments (pargs), depending
	-- on the options set and on the parent frame's availability. If we weren't
	-- passed a valid frame object, we are being called from another Lua module
	-- or from the debug console, so assume that we were passed a table of args
	-- directly, and assign it to a new variable (luaArgs).
	--]]
	local fargs, pargs, luaArgs
	if type(frame.args) == 'table' and type(frame.getParent) == 'function' then
		if options.wrappers then
			--[[
			-- The wrappers option makes Module:Arguments look up arguments in
			-- either the frame argument table or the parent argument table, but
			-- not both. This means that users can use either the #invoke syntax
			-- or a wrapper template without the loss of performance associated
			-- with looking arguments up in both the frame and the parent frame.
			-- Module:Arguments will look up arguments in the parent frame
			-- if it finds the parent frame's title in options.wrapper;
			-- otherwise it will look up arguments in the frame object passed
			-- to getArgs.
			--]]
			local parent = frame:getParent()
			if not parent then
				fargs = frame.args
			else
				local title = parent:getTitle():gsub('/sandbox$', '')
				local found = false
				if type(options.wrappers) == 'table' then
					for _,v in pairs(options.wrappers) do
						if v == title then
							found = true
							break
						end
					end
				elseif options.wrappers == title then
					found = true
				end
				if found then
					pargs = parent.args
				else
					fargs = frame.args
				end
			end
		else
			-- options.wrapper isn't set, so check the other options.
			if not options.parentOnly then
				fargs = frame.args
			end
			if not options.frameOnly then
				local parent = frame:getParent()
				pargs = parent and parent.args or nil
			end
			if options.parentFirst then
				fargs, pargs = pargs, fargs
			end
		end
	else
		luaArgs = frame
	end
	
	-- Set the order of precedence of the argument tables. If the variables are
	-- nil, nothing will be added to the table, which is how we avoid clashes
	-- between the frame/parent args and the Lua args.	
	local argTables = {fargs}
	argTables[#argTables + 1] = pargs
	argTables[#argTables + 1] = luaArgs

	--[[
	-- Generate the tidyVal function. If it has been specified by the user, we
	-- use that; if not, we choose one of four functions depending on the
	-- options chosen. This is so that we don't have to call the options table
	-- every time the function is called.
	--]]
	local tidyVal = options.valueFunc
	if tidyVal then
		if type(tidyVal) ~= 'function' then
			error(
				&quot;bad value assigned to option 'valueFunc'&quot;
					.. '(function expected, got '
					.. type(tidyVal)
					.. ')',
				2
			)
		end
	elseif options.trim ~= false then
		if options.removeBlanks ~= false then
			tidyVal = tidyValDefault
		else
			tidyVal = tidyValTrimOnly
		end
	else
		if options.removeBlanks ~= false then
			tidyVal = tidyValRemoveBlanksOnly
		else
			tidyVal = tidyValNoChange
		end
	end

	--[[
	-- Set up the args, metaArgs and nilArgs tables. args will be the one
	-- accessed from functions, and metaArgs will hold the actual arguments. Nil
	-- arguments are memoized in nilArgs, and the metatable connects all of them
	-- together.
	--]]
	local args, metaArgs, nilArgs, metatable = {}, {}, {}, {}
	setmetatable(args, metatable)

	local function mergeArgs(iterator, tables)
		--[[
		-- Accepts multiple tables as input and merges their keys and values
		-- into one table using the specified iterator. If a value is already
		-- present it is not overwritten; tables listed earlier have precedence.
		-- We are also memoizing nil values, but those values can be
		-- overwritten.
		--]]
		for _, t in ipairs(tables) do
			for key, val in iterator(t) do
				if metaArgs[key] == nil then
					local tidiedVal = tidyVal(key, val)
					if tidiedVal == nil then
						nilArgs[key] = true
					else
						metaArgs[key] = tidiedVal
					end
				end
			end
		end
	end

	--[[
	-- Define metatable behaviour. Arguments are memoized in the metaArgs table,
	-- and are only fetched from the argument tables once. Fetching arguments
	-- from the argument tables is the most resource-intensive step in this
	-- module, so we try and avoid it where possible. For this reason, nil
	-- arguments are also memoized, in the nilArgs table. Also, we keep a record
	-- in the metatable of when pairs and ipairs have been called, so we do not
	-- run pairs and ipairs on the argument tables more than once. We also do
	-- not run ipairs on fargs and pargs if pairs has already been run, as all
	-- the arguments will already have been copied over.
	--]]

	metatable.__index = function (t, key)
		--[[
		-- Fetches an argument when the args table is indexed. First we check
		-- to see if the value is memoized, and if not we try and fetch it from
		-- the argument tables. When we check memoization, we need to check
		-- metaArgs before nilArgs, as both can be non-nil at the same time.
		-- If the argument is not present in metaArgs, we also check whether
		-- pairs has been run yet. If pairs has already been run, we return nil.
		-- This is because all the arguments will have already been copied into
		-- metaArgs by the mergeArgs function, meaning that any other arguments
		-- must be nil.
		--]]
		local val = metaArgs[key]
		if val ~= nil then
			return val
		elseif metatable.donePairs or nilArgs[key] then
			return nil
		end
		for _, argTable in ipairs(argTables) do
			local argTableVal = tidyVal(key, argTable[key])
			if argTableVal == nil then
				nilArgs[key] = true
			else
				metaArgs[key] = argTableVal
				return argTableVal
			end
		end
		return nil
	end

	metatable.__newindex = function (t, key, val)
		-- This function is called when a module tries to add a new value to the
		-- args table, or tries to change an existing value.
		if options.readOnly then
			error(
				'could not write to argument table key &quot;'
					.. tostring(key)
					.. '&quot;; the table is read-only',
				2
			)
		elseif options.noOverwrite and args[key] ~= nil then
			error(
				'could not write to argument table key &quot;'
					.. tostring(key)
					.. '&quot;; overwriting existing arguments is not permitted',
				2
			)
		elseif val == nil then
			--[[
			-- If the argument is to be overwritten with nil, we need to erase
			-- the value in metaArgs, so that __index, __pairs and __ipairs do
			-- not use a previous existing value, if present; and we also need
			-- to memoize the nil in nilArgs, so that the value isn't looked
			-- up in the argument tables if it is accessed again.
			--]]
			metaArgs[key] = nil
			nilArgs[key] = true
		else
			metaArgs[key] = val
		end
	end

	metatable.__pairs = function ()
		-- Called when pairs is run on the args table.
		if not metatable.donePairs then
			mergeArgs(pairs, argTables)
			metatable.donePairs = true
			metatable.doneIpairs = true
		end
		return pairs(metaArgs)
	end

	metatable.__ipairs = function ()
		-- Called when ipairs is run on the args table.
		if not metatable.doneIpairs then
			mergeArgs(ipairs, argTables)
			metatable.doneIpairs = true
		end
		return ipairs(metaArgs)
	end

	return args
end

return arguments</text>
      <sha1>30w8m8aul6mthv759io7vhd4e3tq5t8</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Category handler</title>
    <ns>828</ns>
    <id>39772274</id>
    <revision>
      <id>577959141</id>
      <parentid>577958700</parentid>
      <timestamp>2013-10-20T10:48:14Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler: [[Wikipedia:Lua/Modules|High-risk Lua module]] ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <text xml:space="preserve" bytes="13065">----------------------------------------------------------------------------------------------------------
--                                                                                                      --
--                                          CATEGORY HANDLER                                            --
--                                                                                                      --
--      This module implements the {{category handler}} template in Lua, with a few improvements: all   --
--      namespaces and all namespace aliases are supported, and namespace names are detected            --
--      automatically for the local wiki. This module requires [[Module:Namespace detect]] and          --
--      [[Module:Yesno]] to be available on the local wiki. It can be configured for different wikis    --
--      by altering the values in the &quot;cfg&quot; table.                                                      --
--                                                                                                      --
----------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------
--                                          Configuration data                                          --
--                      Language-specific parameter names and values can be set here.                   --
----------------------------------------------------------------------------------------------------------

local cfg = {}

-- The following config values set the names of parameters that suppress categorisation. They are used
-- with Module:Yesno, and work as follows:
--
-- cfg.nocat:
-- Result of yesno(args[cfg.nocat])         Effect
-- true                                     Categorisation is suppressed
-- false                                    Categorisation is allowed, and the blacklist check is skipped
-- nil                                      Categorisation is allowed
--
-- cfg.categories:
-- Result of yesno(args[cfg.categories])    Effect
-- true                                     Categorisation is allowed, and the blacklist check is skipped
-- false                                    Categorisation is suppressed
-- nil                                      Categorisation is allowed
cfg.nocat = 'nocat'    
cfg.categories = 'categories'

-- The parameter name for the legacy &quot;category2&quot; parameter. This skips the blacklist if set to the
-- cfg.category2Yes value, and suppresses categorisation if present but equal to anything other than
-- cfg.category2Yes or cfg.category2Negative.
cfg.category2 = 'category2'
cfg.category2Yes = 'yes'
cfg.category2Negative = '¬'

-- cfg.subpage is the parameter name to specify how to behave on subpages. cfg.subpageNo is the value to
-- specify to not categorise on subpages; cfg.only is the value to specify to only categorise on subpages.
cfg.subpage = 'subpage'
cfg.subpageNo = 'no'
cfg.subpageOnly = 'only'

-- The parameter for data to return in all namespaces.
cfg.all = 'all'

-- The parameter name for data to return if no data is specified for the namespace that is detected. This
-- must be the same as the cfg.other parameter in [[Module:Namespace detect]].
cfg.other = 'other'

-- The parameter name used to specify a page other than the current page; used for testing and
-- demonstration. This must be the same as the cfg.page parameter in [[Module:Namespace detect]].
cfg.page = 'page'

-- The categorisation blacklist. Pages that match Lua patterns in this list will not be categorised.
-- (However, see the explanation of cfg.nocat, cfg.categories and cfg.category2 for some exceptions.)
-- If the namespace name has a space in, it must be written with an underscore, e.g. &quot;Wikipedia_talk&quot;.
-- Other parts of the title can have either underscores or spaces.
cfg.blacklist = {
    '^Main Page$', -- don't categorise the main page.
    
    -- Don't categorise the following pages or their subpages.
    '^Wikipedia:Cascade%-protected items$',
    '^Wikipedia:Cascade%-protected items/.*$',
    '^User:UBX$', -- The userbox &quot;template&quot; space.
    '^User:UBX/.*$',
    '^User_talk:UBX$',
    '^User_talk:UBX/.*$',
    
    -- Don't categorise subpages of these pages, but allow
    -- categorisation of the base page.
    '^Wikipedia:Template messages/.+$',
    
    '/[aA]rchive' -- Don't categorise archives.
}

-- This is a table of namespaces to categorise by default. They should be in the format of parameter
-- names accepted by [[Module:Namespace detect]].
cfg.defaultNamespaces = {
    'main',
    'file',
    'help',
    'category'
}

----------------------------------------------------------------------------------------------------------
--                                          End configuration data                                      --
----------------------------------------------------------------------------------------------------------

-- Get dependent modules
local nsDetect = require('Module:Namespace detect')
local yesno = require('Module:Yesno')

----------------------------------------------------------------------------------------------------------
--                                          Local functions                                             --
--      The following are internal functions, which we do not want to be accessible from other modules. --
----------------------------------------------------------------------------------------------------------

-- Find whether we need to return a category or not.
local function needsCategory(pageObject, args)
    -- Don't categorise if the relevant options are set.
    if yesno(args[cfg.nocat])
        or yesno(args[cfg.categories]) == false
        or (
            args[cfg.category2] 
            and args[cfg.category2] ~= cfg.category2Yes 
            and args[cfg.category2] ~= cfg.category2Negative
        )
    then
        return false
    end
    -- If there is no pageObject available, then that either means that we are over
    -- the expensive function limit or that the title specified was invalid. Invalid
    -- titles will probably only be a problem during testing, so we choose the best
    -- fallback for being over the expensive function limit. The fallback behaviour
    -- of the old template was to assume the page was not a subpage, so we will do
    -- the same here.
    if args[cfg.subpage] == cfg.subpageNo and pageObject and pageObject.isSubpage then
        return false
    end
    if args[cfg.subpage] == cfg.subpageOnly 
        and (not pageObject or (pageObject and not pageObject.isSubpage))
    then
        return false
    end
    return true
end

-- Find whether we need to check the blacklist or not.
local function needsBlacklistCheck(args)
    if yesno(args[cfg.nocat]) == false
        or yesno(args[cfg.categories]) == true
        or args[cfg.category2] == cfg.category2Yes
    then
        return false
    else
        return true
    end
end

-- Find whether any namespace parameters have been specified.
-- Mappings is the table of parameter mappings taken from
-- [[Module:Namespace detect]].
local function nsParamsExist(mappings, args)
    if args[cfg.all] or args[cfg.other] then
        return true
    end
    for ns, params in pairs(mappings) do
        for i, param in ipairs(params) do
            if args[param] then
                return true
            end
        end
    end
    return false
end

----------------------------------------------------------------------------------------------------------
--                                          Global functions                                            --
--      The following functions are global, because we want them to be accessible from #invoke and      --
--      from other Lua modules.                                                                         --
----------------------------------------------------------------------------------------------------------

local p = {}

-- Find if a string matches the blacklist. Returns the match if one is found, or nil otherwise.
-- Input should be a page title with a namespace prefix, e.g. &quot;Wikipedia talk:Articles for deletion&quot;.
function p.matchesBlacklist(page)
    if type(page) ~= 'string' then return end
    for i, pattern in ipairs(cfg.blacklist) do
        local match = mw.ustring.match(page, pattern)
        if match then
            return match
        end
    end
end

-- The main structure of the module. Checks whether we need to categorise,
-- and then passes the relevant arguments to [[Module:Namespace detect]].
function p._main(args)
    -- Get the page object and argument mappings from
    -- [[Module:Namespace detect]], to save us from having to rewrite the
    -- code.
    local pageObject = nsDetect.getPageObject(args[cfg.page])
    local mappings = nsDetect.getParamMappings()
    
    if not needsCategory(pageObject, args) then return end
    
    local ret = ''
    -- Check blacklist if necessary.
    if not needsBlacklistCheck(args) or not p.matchesBlacklist(pageObject.prefixedText) then
        if not nsParamsExist(mappings, args) then
            -- No namespace parameters exist; basic usage. Pass args[1] to
            -- [[Module:Namespace detect]] using the default namespace
            -- parameters, and return the result.
            local ndargs = {}
            for _, ndarg in ipairs(cfg.defaultNamespaces) do
                ndargs[ndarg] = args[1]
            end
            ndargs.page = args.page
            ndargs.demospace = args.demospace
            local ndresult = nsDetect._main(ndargs)
            if ndresult then
                ret = ret .. ndresult
            end
        else
            -- Namespace parameters exist; advanced usage.
            -- If the all parameter is specified, return it.
            local all = args.all
            if type(all) == 'string' then
                ret = ret .. all
            end
            
            -- Get the arguments to pass to [[Module:Namespace detect]].
            local ndargs = {}
            for ns, params in pairs(mappings) do
                for _, param in ipairs(params) do
                    ndargs[param] = args[param] or args[cfg.other] or nil
                end
            end
            ndargs.other = args.other
            ndargs.page = args.page
            ndargs.demospace = args.demospace
            
            local data = nsDetect._main(ndargs)
            
            -- Work out what to return based on the result of the namespace detect call.
            local datanum = tonumber(data)
            if type(datanum) == 'number' then
                -- &quot;data&quot; is a number, so return that positional parameter.
                -- Remove non-positive integer values, as only positive integers
                -- from 1-10 were used with the old template.
                if datanum &gt; 0 and math.floor(datanum) == datanum then
                    local dataArg = args[datanum]
                    if type(dataArg) == 'string' then
                        ret = ret .. dataArg
                    end
                end
            else
                -- &quot;data&quot; is not a number, so return it as it is.
                if type(data) == 'string' then
                    ret = ret .. data
                end
            end
        end
    end
    return ret
end

function p.main(frame)
    -- If called via #invoke, use the args passed into the invoking
    -- template, or the args passed to #invoke if any exist. Otherwise
    -- assume args are being passed directly in.
    local origArgs
    if frame == mw.getCurrentFrame() then
        origArgs = frame:getParent().args
        for k, v in pairs(frame.args) do
            origArgs = frame.args
            break
        end
    else
        origArgs = frame
    end

    -- Trim whitespace and remove blank arguments for the following args:
    -- 1, 2, 3 etc., &quot;nocat&quot;, &quot;categories&quot;, &quot;subpage&quot;, and &quot;page&quot;.
    local args = {}
    for k, v in pairs(origArgs) do
        if type(v) == 'string' then
            v = mw.text.trim(v) -- Trim whitespace.
        end
        if type(k) == 'number'
            or k == cfg.nocat
            or k == cfg.categories
            or k == cfg.subpage
            or k == cfg.page
        then
            if v ~= '' then
                args[k] = v
            end
        else
            args[k] = v
        end
    end
    
    -- Lower-case &quot;nocat&quot;, &quot;categories&quot;, &quot;category2&quot;, and &quot;subpage&quot;. These
    -- parameters are put in lower case whenever they appear in the old
    -- template, so we can just do it once here and save ourselves some work.
    local lowercase = {cfg.nocat, cfg.categories, cfg.category2, cfg.subpage}
    for _, v in ipairs(lowercase) do
        local argVal = args[v]
        if type(argVal) == 'string' then
            args[v] = mw.ustring.lower(argVal)
        end
    end
    
    return p._main(args)
end

return p</text>
      <sha1>i2ez8nejriv7clde6mvnuwl3ypo3qj6</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1</title>
    <ns>828</ns>
    <id>38573037</id>
    <revision>
      <id>601950945</id>
      <parentid>595792281</parentid>
      <timestamp>2014-03-30T12:26:52Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Synch from sandbox;</comment>
      <text xml:space="preserve" bytes="83070">local z = {
    error_categories = {};
    error_ids = {};
    message_tail = {};
}

-- Include translation message hooks, ID and error handling configuration settings.
--local cfg = mw.loadData( 'Module:Citation/CS1/Configuration/sandbox' );

-- Contains a list of all recognized parameters
--local whitelist = mw.loadData( 'Module:Citation/CS1/Whitelist/sandbox' );

--local dates = require('Module:Citation/CS1/Date_validation/sandbox').dates		-- location of date validation code

-- Whether variable is set or not
function is_set( var )
    return not (var == nil or var == '');
end

-- First set variable or nil if none
function first_set(...)
    local list = {...};
    for _, var in pairs(list) do
        if is_set( var ) then
            return var;
        end
    end
end

-- Whether needle is in haystack
function inArray( needle, haystack )
    if needle == nil then
        return false;
    end
    for n,v in ipairs( haystack ) do
        if v == needle then
            return n;
        end
    end
    return false;
end

--[[
Categorize and emit an error message when the citation contains one or more deprecated parameters.  Because deprecated parameters (currently |day=, |month=,
|coauthor=, and |coauthors=) aren't related to each other and because these parameters may be concatenated into the variables used by |date= and |author#= (and aliases)
details of which parameter caused the error message are not provided.  Only one error message is emitted regarless of the number of deprecated parameters in the citation.
]]
function deprecated_parameter()
	if true ~= Page_in_deprecated_cat then	-- if we haven't been here before then set a 
		Page_in_deprecated_cat=true;		-- sticky flag so that if there are more than one deprecated parameter the category is added only once
--		table.insert( z.message_tail, { seterror( 'deprecated_params', {error_message}, true ) } );		-- add error message
		table.insert( z.message_tail, { seterror( 'deprecated_params', {}, true ) } );		-- add error message
	end
end

-- Populates numbered arguments in a message string using an argument table.
function substitute( msg, args )
--	return args and tostring( mw.message.newRawMessage( msg, args ) ) or msg;
	return args and mw.message.newRawMessage( msg, args ):plain() or msg;
end

--[[
Apply kerning to open the space between the quote mark provided by the Module and a leading or trailing quote mark contained in a |title= or |chapter= parameter's value.
This function will positive kern  either single or double quotes:
	&quot;'Unkerned title with leading and trailing single quote marks'&quot;
	&quot; 'Kerned title with leading and trailing single quote marks' &quot; (in real life the kerning isn't as wide as this example)
]]
function kern_quotes (str)
	local left='&lt;span style=&quot;padding-left:0.2em;&quot;&gt;%1&lt;/span&gt;';		-- spacing to use when title contains leading single or double quote mark
	local right='&lt;span style=&quot;padding-right:0.2em;&quot;&gt;%1&lt;/span&gt;';		-- spacing to use when title contains trailing single or double quote mark
	
	if  str:match (&quot;^[\&quot;\'][^\']&quot;) then
		str = string.gsub( str, &quot;^[\&quot;\']&quot;, left, 1 );				-- replace (captured) leading single or double quote with left-side &lt;span&gt;
	end
	if str:match (&quot;[^\'][\&quot;\']$&quot;) then
		str = string.gsub( str, &quot;[\&quot;\']$&quot;, right, 1 );			-- replace (captured) trailing single or double quote with right-side &lt;span&gt;
	end
	return str;
end

-- Wraps a string using a message_list configuration taking one argument
function wrap( key, str, lower )
    if not is_set( str ) then
        return &quot;&quot;;
    elseif inArray( key, { 'italic-title', 'trans-italic-title' } ) then
        str = safeforitalics( str );
    end
    if lower == true then
        return substitute( cfg.messages[key]:lower(), {str} );
    else
        return substitute( cfg.messages[key], {str} );
    end        
end

--[[
Argument wrapper.  This function provides support for argument 
mapping defined in the configuration file so that multiple names
can be transparently aliased to single internal variable.
]]
function argument_wrapper( args )
    local origin = {};
    
    return setmetatable({
        ORIGIN = function( self, k )
            local dummy = self[k]; --force the variable to be loaded.
            return origin[k];
        end
    },
    {
        __index = function ( tbl, k )
            if origin[k] ~= nil then
                return nil;
            end
            
            local args, list, v = args, cfg.aliases[k];
            
            if type( list ) == 'table' then
                v, origin[k] = selectone( args, list, 'redundant_parameters' );
                if origin[k] == nil then
                    origin[k] = ''; -- Empty string, not nil
                end
            elseif list ~= nil then
                v, origin[k] = args[list], list;
            else
                -- maybe let through instead of raising an error?
                -- v, origin[k] = args[k], k;
                error( cfg.messages['unknown_argument_map'] );
            end
            
            -- Empty strings, not nil;
            if v == nil then
                v = cfg.defaults[k] or '';
                origin[k] = '';
            end
            
            tbl = rawset( tbl, k, v );
            return v;
        end,
    });
end

--[[
Looks for a parameter's name in the whitelist.

Parameters in the whitelist can have three values:
	true - active, supported parameters
	false - deprecated, supported parameters
	nil - unsupported parameters
]]
function validate( name )
	local name = tostring( name );
	local state = whitelist.basic_arguments[ name ];
	
	-- Normal arguments
	if true == state then return true; end		-- valid actively supported parameter
	if false == state then
		deprecated_parameter ();				-- parameter is deprecated but still supported
		return true;
	end
	
	-- Arguments with numbers in them
	name = name:gsub( &quot;%d+&quot;, &quot;#&quot; );				-- replace digit(s) with # (last25 becomes last#
	state = whitelist.numbered_arguments[ name ];
	if true == state then return true; end		-- valid actively supported parameter
	if false == state then
		deprecated_parameter ();				-- parameter is deprecated but still supported
		return true;
	end
	
	return false;								-- Not supported because not found or name is set to nil
end

-- Formats a comment for error trapping
function errorcomment( content, hidden )
    return wrap( hidden and 'hidden-error' or 'visible-error', content );
end

--[[
Sets an error condition and returns the appropriate error message.  The actual placement
of the error message in the output is the responsibility of the calling function.
]]
function seterror( error_id, arguments, raw, prefix, suffix )
    local error_state = cfg.error_conditions[ error_id ];
    
    prefix = prefix or &quot;&quot;;
    suffix = suffix or &quot;&quot;;
    
    if error_state == nil then
        error( cfg.messages['undefined_error'] );
    elseif is_set( error_state.category ) then
        table.insert( z.error_categories, error_state.category );
    end
    
    local message = substitute( error_state.message, arguments );
    
    message = message .. &quot; ([[&quot; .. cfg.messages['help page link'] .. 
        &quot;#&quot; .. error_state.anchor .. &quot;|&quot; ..
        cfg.messages['help page label'] .. &quot;]])&quot;;
    
    z.error_ids[ error_id ] = true;
    if inArray( error_id, { 'bare_url_missing_title', 'trans_missing_title' } )
            and z.error_ids['citation_missing_title'] then
        return '', false;
    end
    
    message = table.concat({ prefix, message, suffix });
    
    if raw == true then
        return message, error_state.hidden;
    end        
        
    return errorcomment( message, error_state.hidden );
end

-- Formats a wiki style external link
function externallinkid(options)
    local url_string = options.id;
    if options.encode == true or options.encode == nil then
        url_string = mw.uri.encode( url_string );
    end
    return mw.ustring.format( '[[%s|%s]]%s[%s%s%s %s]',
        options.link, options.label, options.separator or &quot;&amp;nbsp;&quot;,
        options.prefix, url_string, options.suffix or &quot;&quot;,
        mw.text.nowiki(options.id)
    );
end

-- Formats a wiki style internal link
function internallinkid(options)
    return mw.ustring.format( '[[%s|%s]]%s[[%s%s%s|%s]]',
        options.link, options.label, options.separator or &quot;&amp;nbsp;&quot;,
        options.prefix, options.id, options.suffix or &quot;&quot;,
        mw.text.nowiki(options.id)
    );
end

-- Format an external link with error checking
function externallink( URL, label, source )
    local error_str = &quot;&quot;;
    if not is_set( label ) then
        label = URL;
        if is_set( source ) then
            error_str = seterror( 'bare_url_missing_title', { wrap( 'parameter', source ) }, false, &quot; &quot; );
        else
            error( cfg.messages[&quot;bare_url_no_origin&quot;] );
        end            
    end
    if not checkurl( URL ) then
        error_str = seterror( 'bad_url', {}, false, &quot; &quot; ) .. error_str;
    end
    return table.concat({ &quot;[&quot;, URL, &quot; &quot;, safeforurl( label ), &quot;]&quot;, error_str });
end

-- Formats a link to Amazon
function amazon(id, domain)
    if not is_set(domain) then 
        domain = &quot;com&quot;
    elseif ( &quot;jp&quot; == domain or &quot;uk&quot; == domain ) then
        domain = &quot;co.&quot; .. domain
    end
    local handler = cfg.id_handlers['ASIN'];
    return externallinkid({link = handler.link,
        label=handler.label , prefix=&quot;//www.amazon.&quot;..domain..&quot;/dp/&quot;,id=id,
        encode=handler.encode, separator = handler.separator})
end

--[[
Format LCCN link and do simple error checking.  LCCN is a character string 8-12 characters long. The length of the LCCN dictates the character type of the first 1-3 characters; the
rightmost eight are always digits. http://info-uri.info/registry/OAIHandler?verb=GetRecord&amp;metadataPrefix=reg&amp;identifier=info:lccn/

length = 8 then all digits
length = 9 then lccn[1] is alpha
length = 10 then lccn[1] and lccn[2] are both alpha or both digits
length = 11 then lccn[1] is alpha, lccn[2] and lccn[3] are both alpha or both digits
length = 12 then lccn[1] and lccn[2] are both alpha

]]
function lccn(id)
	local handler = cfg.id_handlers['LCCN'];
	local err_cat =  '';								-- presume that LCCN is valid

	local len = id:len();								-- get the length of the lccn

	if 8 == len then
		if id:match(&quot;[^%d]&quot;) then						-- if LCCN has anything but digits (nil if only digits)
			err_cat = ' ' .. seterror( 'bad_lccn' );	-- set an error message
		end
	elseif 9 == len then								-- LCCN should be adddddddd
		if nil == id:match(&quot;%a%d%d%d%d%d%d%d%d&quot;) then			-- does it match our pattern?
			err_cat = ' ' .. seterror( 'bad_lccn' );	-- set an error message
		end
	elseif 10 == len then								-- LCCN should be aadddddddd or dddddddddd
		if id:match(&quot;[^%d]&quot;) then							-- if LCCN has anything but digits (nil if only digits) ...
			if nil == id:match(&quot;^%a%a%d%d%d%d%d%d%d%d&quot;) then	-- ... see if it matches our pattern
				err_cat = ' ' .. seterror( 'bad_lccn' );	-- no match, set an error message
			end
		end
	elseif 11 == len then								-- LCCN should be aaadddddddd or adddddddddd
		if not (id:match(&quot;^%a%a%a%d%d%d%d%d%d%d%d&quot;) or id:match(&quot;^%a%d%d%d%d%d%d%d%d%d%d&quot;)) then	-- see if it matches one of our patterns
			err_cat = ' ' .. seterror( 'bad_lccn' );	-- no match, set an error message
		end
	elseif 12 == len then								-- LCCN should be aadddddddddd
		if not id:match(&quot;^%a%a%d%d%d%d%d%d%d%d%d%d&quot;) then	-- see if it matches our pattern
			err_cat = ' ' .. seterror( 'bad_lccn' );	-- no match, set an error message
		end
	else
		err_cat = ' ' .. seterror( 'bad_lccn' );		-- wrong length, set an error message
	end

	return externallinkid({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end

--[[
Format PMID and do simple error checking.  PMIDs are sequential numbers beginning at 1 and counting up.  This code checks the PMID to see that it
contains only digits and is less than test_limit; the value in local variable test_limit will need to be updated periodically as more PMIDs are issued.
]]
function pmid(id)
	local test_limit = 30000000;						-- update this value as PMIDs approach
	local handler = cfg.id_handlers['PMID'];
	local err_cat =  '';								-- presume that PMID is valid
	
	if id:match(&quot;[^%d]&quot;) then							-- if PMID has anything but digits
		err_cat = ' ' .. seterror( 'bad_pmid' );		-- set an error message
	else												-- PMID is only digits
		local id_num = tonumber(id);					-- convert id to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then		-- if PMID is outside test limit boundaries
			err_cat = ' ' .. seterror( 'bad_pmid' );	-- set an error message
		end
	end
	
	return externallinkid({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end

--[[
Determines if a PMC identifier's online version is embargoed. Compares the date in |embargo= against today's date.  If embargo date is
in the future, returns true; otherwse, returns false because the embargo has expired or |embargo= not set in this cite.
]]
function is_embargoed(embargo)
	if is_set(embargo) then
		local lang = mw.getContentLanguage();
		local good1, embargo_date, good2, todays_date;
		good1, embargo_date = pcall( lang.formatDate, lang, 'U', embargo );
		good2, todays_date = pcall( lang.formatDate, lang, 'U' );
	
		if good1 and good2 and tonumber( embargo_date ) &gt;= tonumber( todays_date ) then	--is embargo date is in the future?
			return true;	-- still embargoed
		end
	end
	return false;			-- embargo expired or |embargo= not set
end

--[[
Format a PMC, do simple error checking, and check for embargoed articles.

The embargo parameter takes a date for a value. If the embargo date is in the future
the PMC identifier will not be linked to the article.  If the embargo specifies a date in the past, or if it is empty or omitted, then
the PMC identifier is linked to the article through the link at cfg.id_handlers['PMC'].prefix.

PMCs are sequential numbers beginning at 1 and counting up.  This code checks the PMC to see that it contains only digits and is less
than test_limit; the value in local variable test_limit will need to be updated periodically as more PMCs are issued.
]]
function pmc(id, embargo)
	local test_limit = 5000000;							-- update this value as PMCs approach
	local handler = cfg.id_handlers['PMC'];
	local err_cat =  '';								-- presume that PMC is valid
    
	local text;

	if id:match(&quot;[^%d]&quot;) then							-- if PMC has anything but digits
		err_cat = ' ' .. seterror( 'bad_pmc' );			-- set an error message
	else												-- PMC is only digits
		local id_num = tonumber(id);					-- convert id to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then		-- if PMC is outside test limit boundaries
			err_cat = ' ' .. seterror( 'bad_pmc' );		-- set an error message
		end
	end
	
	if is_embargoed(embargo) then
		text=&quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]:&quot; .. handler.separator .. id .. err_cat;	--still embargoed so no external link
	else
		text = externallinkid({link = handler.link, label = handler.label,			--no embargo date, ok to link to article
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
	end
	return text;
end

-- Formats a DOI and checks for DOI errors.

-- DOI names contain two parts: prefix and suffix separated by a forward slash.
--  Prefix: directory indicator '10.' followed by a registrant code
--  Suffix: character string of any length chosen by the registrant

-- This function checks a DOI name for: prefix/suffix.  If the doi name contains spaces or endashes,
-- or, if it ends with a period or a comma, this function will emit a bad_doi error message.

-- DOI names are case-insensitive and can incorporate any printable Unicode characters so the test for spaces, endash,
-- and terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely if ever used in doi names.

function doi(id, inactive)
    local cat = &quot;&quot;
    local handler = cfg.id_handlers['DOI'];
    
    local text;
	if is_set(inactive) then
		local inactive_year = inactive:match(&quot;%d%d%d%d&quot;) or '';		-- try to get the year portion from the inactive date
		text = &quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]:&quot; .. id;
		if is_set(inactive_year) then
			table.insert( z.error_categories, &quot;Pages with DOIs inactive since &quot; .. inactive_year );
		else
			table.insert( z.error_categories, &quot;Pages with inactive DOIs&quot; );	-- when inactive doesn't contain a recognizable year
		end
		inactive = &quot; (&quot; .. cfg.messages['inactive'] .. &quot; &quot; .. inactive .. &quot;)&quot; 
	else 
		text = externallinkid({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
		inactive = &quot;&quot; 
	end

	if nil == id:match(&quot;^10%.[^%s–]-/[^%s–]-[^%.,]$&quot;) then	-- doi must begin with '10.', must contain a fwd slash, must not contain spaces or endashes, and must not end with period or comma
		cat = ' ' .. seterror( 'bad_doi' );
	end
	return text .. inactive .. cat 
end

-- Formats an OpenLibrary link, and checks for associated errors.
function openlibrary(id)
    local code = id:sub(-1,-1)
    local handler = cfg.id_handlers['OL'];
    if ( code == &quot;A&quot; ) then
        return externallinkid({link=handler.link, label=handler.label,
            prefix=&quot;http://openlibrary.org/authors/OL&quot;,id=id, separator=handler.separator,
            encode = handler.encode})
    elseif ( code == &quot;M&quot; ) then
        return externallinkid({link=handler.link, label=handler.label,
            prefix=&quot;http://openlibrary.org/books/OL&quot;,id=id, separator=handler.separator,
            encode = handler.encode})
    elseif ( code == &quot;W&quot; ) then
        return externallinkid({link=handler.link, label=handler.label,
            prefix= &quot;http://openlibrary.org/works/OL&quot;,id=id, separator=handler.separator,
            encode = handler.encode})
    else
        return externallinkid({link=handler.link, label=handler.label,
            prefix= &quot;http://openlibrary.org/OL&quot;,id=id, separator=handler.separator,
            encode = handler.encode}) .. 
            ' ' .. seterror( 'bad_ol' );
    end
end

--[[
Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but has separated the two groups of four
digits with a space.  When that condition occurred, the resulting link looked like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length and makes sure that the checkdigit agrees
with the calculated value.  Incorrect length (8 digits), characters other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn
error message.  The issn is always displayed with a hyphen, even if the issn was given as a single group of 8 digits.
]]
function issn(id)
	local issn_copy = id;		-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local handler = cfg.id_handlers['ISSN'];
	local text;
	local valid_issn = true;

	id=id:gsub( &quot;[%s-–]&quot;, &quot;&quot; );									-- strip spaces, hyphens, and ndashes from the issn

	if 8 ~= id:len() or nil == id:match( &quot;^%d*X?$&quot; ) then		-- validate the issn: 8 didgits long, containing only 0-9 or X in the last position
		valid_issn=false;										-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);						-- validate issn
	end

	if true == valid_issn then
		id = string.sub( id, 1, 4 ) .. &quot;-&quot; .. string.sub( id, 5 );	-- if valid, display correctly formatted version
	else
		id = issn_copy;											-- if not valid, use the show the invalid issn with error message
	end
	
	text = externallinkid({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if false == valid_issn then
		text = text .. ' ' .. seterror( 'bad_issn' )			-- add an error message if the issn is invalid
	end 
	
	return text
end

--[[
This function sets default title types (equivalent to the citation including |type=&lt;default value&gt;) for those citations that have defaults.
Also handles the special case where it is desireable to omit the title type from the rendered citation (|type=none).
]]
function set_titletype(cite_class, title_type)
	if is_set(title_type) then
		if &quot;none&quot; == title_type then
			title_type = &quot;&quot;;					-- if |type=none then type parameter not displayed
		end
		return title_type;						-- if |type= has been set to any other value use that value
	end

	if &quot;AV media notes&quot; == cite_class or &quot;DVD notes&quot; == cite_class then		-- if this citation is cite AV media notes or cite DVD notes
		return &quot;Media notes&quot;;					-- display AV media notes / DVD media notes annotation

	elseif &quot;podcast&quot; == cite_class then			-- if this citation is cite podcast
		return &quot;Podcast&quot;;						-- display podcast annotation

	elseif &quot;pressrelease&quot; == cite_class then	-- if this citation is cite press release
		return &quot;Press release&quot;;					-- display press release annotation

	elseif &quot;techreport&quot; == cite_class then		-- if this citation is cite techreport
		return &quot;Technical report&quot;;				-- display techreport annotation
	
	elseif &quot;thesis&quot; == cite_class then			-- if this citation is cite thesis (degree option handled after this function returns)
			return &quot;Thesis&quot;;					-- display simple thesis annotation (without |degree= modification)
	end
end

--[[
Determines whether a URL string is valid

At present the only check is whether the string appears to 
be prefixed with a URI scheme.  It is not determined whether 
the URI scheme is valid or whether the URL is otherwise well 
formed.
]]
function checkurl( url_str )
    -- Protocol-relative or URL scheme
    return url_str:sub(1,2) == &quot;//&quot; or url_str:match( &quot;^[^/]*:&quot; ) ~= nil;
end

-- Removes irrelevant text and dashes from ISBN number
-- Similar to that used for Special:BookSources
function cleanisbn( isbn_str )
    return isbn_str:gsub( &quot;[^-0-9X]&quot;, &quot;&quot; );
end

-- Extract page numbers from external wikilinks in any of the |page=, |pages=, or |at= parameters for use in COinS.
function get_coins_pages (pages)
	if not is_set (pages) then return pages; end			-- if no page numbers then we're done
	
    while true do
		pattern = pages:match(&quot;%[([%w/:\.]+%s+)[%w%d].*%]&quot;);	-- pattern is the opening bracket, the url and following space(s): &quot;[url &quot;
		if nil == pattern then break; end					-- no more urls
		pages = pages:gsub(pattern, &quot;&quot;);					-- remove as many instances of pattern as possible
	end
	pages = pages:gsub(&quot;[%[%]]&quot;, &quot;&quot;);						-- remove the brackets
	pages = pages:gsub(&quot;–&quot;, &quot;-&quot; );							-- replace endashes with hyphens
	pages = pages:gsub(&quot;&amp;%w+;&quot;, &quot;-&quot; );						-- and replace html entities (&amp;ndash; etc) with hyphens; do we need to replace numerical entities like &amp;#32; and the like?
	return pages;
end

--[[
ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit. ISBN-13 is checked in checkisbn().
If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length and stripped of dashes,
spaces and other non-isxn characters.
]]
function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of bytes
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( &quot;X&quot; ) then		-- if checkdigit is X
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end

-- Determines whether an ISBN string is valid
function checkisbn( isbn_str )
	if nil ~= isbn_str:match(&quot;[^%s-0-9X]&quot;) then return false; end		-- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
	isbn_str = isbn_str:gsub( &quot;-&quot;, &quot;&quot; ):gsub( &quot; &quot;, &quot;&quot; );	-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return false;
	end

	if len == 10 then
		if isbn_str:match( &quot;^%d*X?$&quot; ) == nil then return false; end
		return is_valid_isxn(isbn_str, 10);
	else
		local temp = 0;
		if isbn_str:match( &quot;^97[89]%d*$&quot; ) == nil then return false; end	-- isbn13 begins with 978 or 979
		isbn_str = { isbn_str:byte(1, len) };
		for i, v in ipairs( isbn_str ) do
			temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );
		end
		return temp % 10 == 0;
	end
end

-- Gets the display text for a wikilink like [[A|B]] or [[B]] gives B
function removewikilink( str )
    return (str:gsub( &quot;%[%[([^%[%]]*)%]%]&quot;, function(l)
        return l:gsub( &quot;^[^|]*|(.*)$&quot;, &quot;%1&quot; ):gsub(&quot;^%s*(.-)%s*$&quot;, &quot;%1&quot;);
    end));
end

-- Escape sequences for content that will be used for URL descriptions
function safeforurl( str )
    if str:match( &quot;%[%[.-%]%]&quot; ) ~= nil then 
        table.insert( z.message_tail, { seterror( 'wikilink_in_url', {}, true ) } );
    end
    
    return str:gsub( '[%[%]\n]', {    
        ['['] = '&amp;#91;',
        [']'] = '&amp;#93;',
        ['\n'] = ' ' } );
end

-- Converts a hyphen to a dash
function hyphentodash( str )
    if not is_set(str) or str:match( &quot;[%[%]{}&lt;&gt;]&quot; ) ~= nil then
        return str;
    end    
    return str:gsub( '-', '–' );
end

-- Protects a string that will be wrapped in wiki italic markup '' ... ''
function safeforitalics( str )
    --[[ Note: We can not use &lt;i&gt; for italics, as the expected behavior for
    italics specified by ''...'' in the title is that they will be inverted
    (i.e. unitalicized) in the resulting references.  In addition, &lt;i&gt; and ''
    tend to interact poorly under Mediawiki's HTML tidy. ]]
    
    if not is_set(str) then
        return str;
    else
        if str:sub(1,1) == &quot;'&quot; then str = &quot;&lt;span /&gt;&quot; .. str; end
        if str:sub(-1,-1) == &quot;'&quot; then str = str .. &quot;&lt;span /&gt;&quot;; end
        
        -- Remove newlines as they break italics.
        return str:gsub( '\n', ' ' );
    end
end

--[[
Joins a sequence of strings together while checking for duplicate separation
characters.
]]
function safejoin( tbl, duplicate_char )
    --[[
    Note: we use string functions here, rather than ustring functions.
    
    This has considerably faster performance and should work correctly as 
    long as the duplicate_char is strict ASCII.  The strings
    in tbl may be ASCII or UTF8.
    ]]
    
    local str = '';
    local comp = '';
    local end_chr = '';
    local trim;
    for _, value in ipairs( tbl ) do
        if value == nil then value = ''; end
        
        if str == '' then
            str = value;
        elseif value ~= '' then
            if value:sub(1,1) == '&lt;' then
                -- Special case of values enclosed in spans and other markup.
                comp = value:gsub( &quot;%b&lt;&gt;&quot;, &quot;&quot; );
            else
                comp = value;
            end
            
            if comp:sub(1,1) == duplicate_char then
                trim = false;
                end_chr = str:sub(-1,-1);
                -- str = str .. &quot;&lt;HERE(enchr=&quot; .. end_chr.. &quot;)&quot;
                if end_chr == duplicate_char then
                    str = str:sub(1,-2);
                elseif end_chr == &quot;'&quot; then
                    if str:sub(-3,-1) == duplicate_char .. &quot;''&quot; then
                        str = str:sub(1, -4) .. &quot;''&quot;;
                    elseif str:sub(-5,-1) == duplicate_char .. &quot;]]''&quot; then
                        trim = true;
                    elseif str:sub(-4,-1) == duplicate_char .. &quot;]''&quot; then
                        trim = true;
                    end
                elseif end_chr == &quot;]&quot; then
                    if str:sub(-3,-1) == duplicate_char .. &quot;]]&quot; then
                        trim = true;
                    elseif str:sub(-2,-1) == duplicate_char .. &quot;]&quot; then
                        trim = true;
                    end
                elseif end_chr == &quot; &quot; then
                    if str:sub(-2,-1) == duplicate_char .. &quot; &quot; then
                        str = str:sub(1,-3);
                    end
                end

                if trim then
                    if value ~= comp then 
                        local dup2 = duplicate_char;
                        if dup2:match( &quot;%A&quot; ) then dup2 = &quot;%&quot; .. dup2; end
                        
                        value = value:gsub( &quot;(%b&lt;&gt;)&quot; .. dup2, &quot;%1&quot;, 1 )
                    else
                        value = value:sub( 2, -1 );
                    end
                end
            end
            str = str .. value;
        end
    end
    return str;
end  

-- Attempts to convert names to initials.
function reducetoinitials(first)
    local initials = {}
    for word in string.gmatch(first, &quot;%S+&quot;) do
        table.insert(initials, string.sub(word,1,1)) -- Vancouver format does not include full stops.
    end
    return table.concat(initials) -- Vancouver format does not include spaces.
end

-- Formats a list of people (e.g. authors / editors) 
function listpeople(control, people)
    local sep = control.sep;
    local namesep = control.namesep
    local format = control.format
    local maximum = control.maximum
    local lastauthoramp = control.lastauthoramp;
    local text = {}
    local etal = false;
    
    if sep:sub(-1,-1) ~= &quot; &quot; then sep = sep .. &quot; &quot; end
    if maximum ~= nil and maximum &lt; 1 then return &quot;&quot;, 0; end
    
    for i,person in ipairs(people) do
        if is_set(person.last) then
            local mask = person.mask
            local one
            local sep_one = sep;
            if maximum ~= nil and i &gt; maximum then
                etal = true;
                break;
            elseif (mask ~= nil) then
                local n = tonumber(mask)
                if (n ~= nil) then
                    one = string.rep(&quot;&amp;mdash;&quot;,n)
                else
                    one = mask;
                    sep_one = &quot; &quot;;
                end
            else
                one = person.last
                local first = person.first
                if is_set(first) then 
                    if ( &quot;vanc&quot; == format ) then first = reducetoinitials(first) end
                    one = one .. namesep .. first 
                end
                if is_set(person.link) then one = &quot;[[&quot; .. person.link .. &quot;|&quot; .. one .. &quot;]]&quot; end
                if is_set(person.link) and nil ~= person.link:find(&quot;//&quot;) then one = one .. &quot; &quot; .. seterror( 'bad_authorlink' ) end	-- check for url in author link;
            end
            table.insert( text, one )
            table.insert( text, sep_one )
        end
    end

    local count = #text / 2;
    if count &gt; 0 then 
        if count &gt; 1 and is_set(lastauthoramp) and not etal then
            text[#text-2] = &quot; &amp; &quot;;
        end
        text[#text] = nil; 
    end
    
    local result = table.concat(text) -- construct list
    if etal then 
        local etal_text = cfg.messages['et al'];
        result = result .. &quot; &quot; .. etal_text;
    end
    
    -- if necessary wrap result in &lt;span&gt; tag to format in Small Caps
    if ( &quot;scap&quot; == format ) then result = 
        '&lt;span class=&quot;smallcaps&quot; style=&quot;font-variant:small-caps&quot;&gt;' .. result .. '&lt;/span&gt;';
    end 
    return result, count
end

-- Generates a CITEREF anchor ID.
function anchorid( options )
    return &quot;CITEREF&quot; .. table.concat( options );
end

-- Gets name list from the input arguments
function extractnames(args, list_name)
    local names = {};
    local i = 1;
    local last;
    
    while true do
        last = selectone( args, cfg.aliases[list_name .. '-Last'], 'redundant_parameters', i );
        if not is_set(last) then
            -- just in case someone passed in an empty parameter
            break;
        end
        names[i] = {
            last = last,
            first = selectone( args, cfg.aliases[list_name .. '-First'], 'redundant_parameters', i ),
            link = selectone( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i ),
            mask = selectone( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i )
        };
        i = i + 1;
    end
    return names;
end

-- Populates ID table from arguments using configuration settings
function extractids( args )
    local id_list = {};
    for k, v in pairs( cfg.id_handlers ) do    
        v = selectone( args, v.parameters, 'redundant_parameters' );
        if is_set(v) then id_list[k] = v; end
    end
    return id_list;
end

-- Takes a table of IDs and turns it into a table of formatted ID outputs.
function buildidlist( id_list, options )
    local new_list, handler = {};
    
    function fallback(k) return { __index = function(t,i) return cfg.id_handlers[k][i] end } end;
    
    for k, v in pairs( id_list ) do
        -- fallback to read-only cfg
        handler = setmetatable( { ['id'] = v }, fallback(k) );
        
        if handler.mode == 'external' then
            table.insert( new_list, {handler.label, externallinkid( handler ) } );
        elseif handler.mode == 'internal' then
            table.insert( new_list, {handler.label, internallinkid( handler ) } );
        elseif handler.mode ~= 'manual' then
            error( cfg.messages['unknown_ID_mode'] );
        elseif k == 'DOI' then
            table.insert( new_list, {handler.label, doi( v, options.DoiBroken ) } );
        elseif k == 'ASIN' then
            table.insert( new_list, {handler.label, amazon( v, options.ASINTLD ) } ); 
        elseif k == 'LCCN' then
            table.insert( new_list, {handler.label, lccn( v ) } );
        elseif k == 'OL' then
            table.insert( new_list, {handler.label, openlibrary( v ) } );
        elseif k == 'PMC' then
            table.insert( new_list, {handler.label, pmc( v, options.Embargo ) } );
        elseif k == 'PMID' then
            table.insert( new_list, {handler.label, pmid( v ) } );
        elseif k == 'ISSN' then
        	table.insert( new_list, {handler.label, issn( v ) } );
        elseif k == 'ISBN' then
            local ISBN = internallinkid( handler );
            if not checkisbn( v ) and not is_set(options.IgnoreISBN) then
                ISBN = ISBN .. seterror( 'bad_isbn', {}, false, &quot; &quot;, &quot;&quot; );
            end
            table.insert( new_list, {handler.label, ISBN } );                
        else
            error( cfg.messages['unknown_manual_ID'] );
        end
    end
    
    function comp( a, b )	-- used in following table.sort()
        return a[1] &lt; b[1];
    end
    
    table.sort( new_list, comp );
    for k, v in ipairs( new_list ) do
        new_list[k] = v[2];
    end
    
    return new_list;
end
  
-- Chooses one matching parameter from a list of parameters to consider
-- Generates an error if more than one match is present.
function selectone( args, possible, error_condition, index )
    local value = nil;
    local selected = '';
    local error_list = {};
    
    if index ~= nil then index = tostring(index); end
    
    -- Handle special case of &quot;#&quot; replaced by empty string
    if index == '1' then
        for _, v in ipairs( possible ) do
            v = v:gsub( &quot;#&quot;, &quot;&quot; );
            if is_set(args[v]) then
                if value ~= nil and selected ~= v then
                    table.insert( error_list, v );
                else
                    value = args[v];
                    selected = v;
                end
            end
        end        
    end
    
    for _, v in ipairs( possible ) do
        if index ~= nil then
            v = v:gsub( &quot;#&quot;, index );
        end
        if is_set(args[v]) then
            if value ~= nil and selected ~=  v then
                table.insert( error_list, v );
            else
                value = args[v];
                selected = v;
            end
        end
    end
    
    if #error_list &gt; 0 then
        local error_str = &quot;&quot;;
        for _, k in ipairs( error_list ) do
            if error_str ~= &quot;&quot; then error_str = error_str .. cfg.messages['parameter-separator'] end
            error_str = error_str .. wrap( 'parameter', k );
        end
        if #error_list &gt; 1 then
            error_str = error_str .. cfg.messages['parameter-final-separator'];
        else
            error_str = error_str .. cfg.messages['parameter-pair-separator'];
        end
        error_str = error_str .. wrap( 'parameter', selected );
        table.insert( z.message_tail, { seterror( error_condition, {error_str}, true ) } );
    end
    
    return value, selected;
end

-- COinS metadata (see &lt;http://ocoins.info/&gt;) allows automated tools to parse
-- the citation information.
function COinS(data)
    if 'table' ~= type(data) or nil == next(data) then
        return '';
    end
    
    local ctx_ver = &quot;Z39.88-2004&quot;;
    
    -- treat table strictly as an array with only set values.
    local OCinSoutput = setmetatable( {}, {
        __newindex = function(self, key, value)
            if is_set(value) then
                rawset( self, #self+1, table.concat{ key, '=', mw.uri.encode( removewikilink( value ) ) } );
            end
        end
    });
    
    if is_set(data.Chapter) then
        OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:book&quot;;
        OCinSoutput[&quot;rft.genre&quot;] = &quot;bookitem&quot;;
        OCinSoutput[&quot;rft.btitle&quot;] = data.Chapter;
        OCinSoutput[&quot;rft.atitle&quot;] = data.Title;
    elseif is_set(data.Periodical) then
        OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:journal&quot;;
        OCinSoutput[&quot;rft.genre&quot;] = &quot;article&quot;;
        OCinSoutput[&quot;rft.jtitle&quot;] = data.Periodical;
        OCinSoutput[&quot;rft.atitle&quot;] = data.Title;
    else
        OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:book&quot;;
        OCinSoutput[&quot;rft.genre&quot;] = &quot;book&quot;
        OCinSoutput[&quot;rft.btitle&quot;] = data.Title;
    end
    
    OCinSoutput[&quot;rft.place&quot;] = data.PublicationPlace;
    OCinSoutput[&quot;rft.date&quot;] = data.Date;
    OCinSoutput[&quot;rft.series&quot;] = data.Series;
    OCinSoutput[&quot;rft.volume&quot;] = data.Volume;
    OCinSoutput[&quot;rft.issue&quot;] = data.Issue;
    OCinSoutput[&quot;rft.pages&quot;] = data.Pages;
    OCinSoutput[&quot;rft.edition&quot;] = data.Edition;
    OCinSoutput[&quot;rft.pub&quot;] = data.PublisherName;
    
    for k, v in pairs( data.ID_list ) do
        local id, value = cfg.id_handlers[k].COinS;
        if k == 'ISBN' then value = cleanisbn( v ); else value = v; end
        if string.sub( id or &quot;&quot;, 1, 4 ) == 'info' then
            OCinSoutput[&quot;rft_id&quot;] = table.concat{ id, &quot;/&quot;, v };
        else
            OCinSoutput[ id ] = value;
        end
    end
    
    local last, first;
    for k, v in ipairs( data.Authors ) do
        last, first = v.last, v.first;
        if k == 1 then
            if is_set(last) then
                OCinSoutput[&quot;rft.aulast&quot;] = last;
            end
            if is_set(first) then 
                OCinSoutput[&quot;rft.aufirst&quot;] = first;
            end
        end
        if is_set(last) and is_set(first) then
            OCinSoutput[&quot;rft.au&quot;] = table.concat{ last, &quot;, &quot;, first };
        elseif is_set(last) then
            OCinSoutput[&quot;rft.au&quot;] = last;
        end
    end
    
    OCinSoutput.rft_id = data.URL;
    OCinSoutput.rfr_id = table.concat{ &quot;info:sid/&quot;, mw.site.server:match( &quot;[^/]*$&quot; ), &quot;:&quot;, data.RawPage };
    OCinSoutput = setmetatable( OCinSoutput, nil );
    
    -- sort with version string always first, and combine.
    table.sort( OCinSoutput );
    table.insert( OCinSoutput, 1, &quot;ctx_ver=&quot; .. ctx_ver );  -- such as &quot;Z39.88-2004&quot;
    return table.concat(OCinSoutput, &quot;&amp;&quot;);
end

--[[
This is the main function doing the majority of the citation
formatting.
]]
function citation0( config, args)
    --[[ 
    Load Input Parameters
    The argment_wrapper facillitates the mapping of multiple
    aliases to single internal variable.
    ]]
    local A = argument_wrapper( args );

    local i 
    local PPrefix = A['PPrefix']
    local PPPrefix = A['PPPrefix']
    if is_set( A['NoPP'] ) then PPPrefix = &quot;&quot; PPrefix = &quot;&quot; end
    
    -- Pick out the relevant fields from the arguments.  Different citation templates
    -- define different field names for the same underlying things.    
    local Authors = A['Authors'];
    local a = extractnames( args, 'AuthorList' );

    local Coauthors = A['Coauthors'];
    local Others = A['Others'];
    local Editors = A['Editors'];
    local e = extractnames( args, 'EditorList' );

    local Year = A['Year'];
    local PublicationDate = A['PublicationDate'];
    local OrigYear = A['OrigYear'];
    local Date = A['Date'];
    local LayDate = A['LayDate'];
    ------------------------------------------------- Get title data
    local Title = A['Title'];
    local BookTitle = A['BookTitle'];
    local Conference = A['Conference'];
    local TransTitle = A['TransTitle'];
    local TitleNote = A['TitleNote'];
    local TitleLink = A['TitleLink'];
    local Chapter = A['Chapter'];
    local ChapterLink = A['ChapterLink'];
    local TransChapter = A['TransChapter'];
    local TitleType = A['TitleType'];
    local Degree = A['Degree'];
    local Docket = A['Docket'];
    local ArchiveURL = A['ArchiveURL'];
    local URL = A['URL']
    local URLorigin = A:ORIGIN('URL');
    local ChapterURL = A['ChapterURL'];
    local ChapterURLorigin = A:ORIGIN('ChapterURL');
    local ConferenceURL = A['ConferenceURL'];
    local ConferenceURLorigin = A:ORIGIN('ConferenceURL');
    local Periodical = A['Periodical'];

	local Series = A['Series'];
    local Volume = A['Volume'];
    local Issue = A['Issue'];
    local Position = '';
    local Page = A['Page'];
    local Pages = hyphentodash( A['Pages'] );	
    local At = A['At'];

    local Edition = A['Edition'];
    local PublicationPlace = A['PublicationPlace']
    local Place = A['Place'];
    
    local PublisherName = A['PublisherName'];
    local RegistrationRequired = A['RegistrationRequired'];
    local SubscriptionRequired = A['SubscriptionRequired'];
    local Via = A['Via'];
    local AccessDate = A['AccessDate'];
    local ArchiveDate = A['ArchiveDate'];
    local Agency = A['Agency'];
    local DeadURL = A['DeadURL']
    local Language = A['Language'];
    local Format = A['Format'];
    local Ref = A['Ref'];
	local DoiBroken = A['DoiBroken'];
	local ID = A['ID'];
    local ASINTLD = A['ASINTLD'];
    local IgnoreISBN = A['IgnoreISBN'];
    local Embargo = A['Embargo'];

    local ID_list = extractids( args );
    
    local Quote = A['Quote'];
    local PostScript = A['PostScript'];

    local LayURL = A['LayURL'];
    local LaySource = A['LaySource'];
    local Transcript = A['Transcript'];
    local TranscriptURL = A['TranscriptURL'] 
    local TranscriptURLorigin = A:ORIGIN('TranscriptURL');
    local sepc = A['Separator'];

    local LastAuthorAmp = A['LastAuthorAmp'];
    local no_tracking_cats = A['NoTracking'];

--these are used by cite interview
	local Callsign = A['Callsign'];
	local City = A['City'];
	local Cointerviewers = A['Cointerviewers'];			-- deprecated
	local Interviewer = A['Interviewer'];				-- deprecated
	local Program = A['Program'];

--local variables that are not cs1 parameters
    local page_type;									-- is this needed?  Doesn't appear to be used anywhere;
    local use_lowercase = ( sepc ~= '.' );
    local this_page = mw.title.getCurrentTitle();		--Also used for COinS and for language
	local anchor_year;									-- used in the CITEREF identifier
	local COinS_date;									-- used in the COinS metadata

-- Set postscript default.
	if not is_set (PostScript) then						-- if |postscript= has not been set (Postscript is nil which is the default for {{citation}}) and
		if (config.CitationClass ~= &quot;citation&quot;) then	-- this template is not a citation template
			PostScript = '.';							-- must be a cite xxx template so set postscript to default (period)
		end
	else
		if PostScript:lower() == 'none' then			-- if |postscript=none then
			PostScript = '';							-- no postscript
		end
	end

--check this page to see if it is in one of the namespaces that cs1 is not supposed to add to the error categories.
	if not is_set(no_tracking_cats) then				-- ignore if we are already not going to categorize this page
		for k, v in pairs( cfg.uncategorized_namespaces ) do	-- otherwise, spin through the list of namespaces we don't include in error categories
			if this_page.nsText == v then				-- if we find one
				no_tracking_cats = &quot;true&quot;;				-- set no_trackin_cats
				break;									-- and we're done
            end
        end
    end

-- check for extra |page=, |pages= or |at= parameters. 
    if is_set(Page) then
        if is_set(Pages) or is_set(At) then
            Page = Page .. &quot; &quot; .. seterror('extra_pages');	-- add error message
            Pages = '';										-- unset the others
            At = '';
        end
    elseif is_set(Pages) then
        if is_set(At) then
            Pages = Pages .. &quot; &quot; .. seterror('extra_pages');	-- add error messages
            At = '';											-- unset
        end
    end    

-- both |publication-place= and |place= (|location=) allowed if different
    if not is_set(PublicationPlace) and is_set(Place) then
        PublicationPlace = Place;							-- promote |place= (|location=) to |publication-place
    end
    
    if PublicationPlace == Place then Place = ''; end		-- don't need both if they are the same
    
--[[
Parameter remapping for cite encyclopedia:
When the citation has these parameters:
	|encyclopedia and |title then map |title to |article and |encyclopedia to |title
	|encyclopedia and |article then map |encyclopedia to |title
	|encyclopedia then map |encyclopedia to |title

	|trans_title maps to |trans_chapter when |title is re-mapped

All other combinations of |encyclopedia, |title, and |article are not modified
]]
	if ( config.CitationClass == &quot;encyclopaedia&quot; ) then
		if is_set(Periodical) then					-- Periodical is set when |encyclopedia is set
			if is_set(Title) then
				if not is_set(Chapter) then
					Chapter = Title;				-- |encyclopedia and |title are set so map |title to |article and |encyclopedia to |title
					TransChapter = TransTitle;
					Title = Periodical;
					Periodical = '';				-- redundant so unset
					TransTitle = '';				-- redundant so unset
				end
			else									-- |title not set
				Title = Periodical;					-- |encyclopedia set and |article set or not set so map |encyclopedia to |title
				Periodical = '';					-- redundant so unset
			end
		end
	end

--special cases for citation.
	if (config.CitationClass == &quot;citation&quot;) then		-- for citation templates
		if not is_set (Ref) then						-- if |ref= is not set
			Ref = &quot;harv&quot;;								-- set default |ref=harv
		end
		if not is_set (sepc) then						-- if |separator= is not set
			sepc = ',';									-- set citation separator to its default (comma)
		end
	else												-- not a citation template
		if not is_set (sepc) then						-- if |separator= has not been set
			sepc = '.';									-- set cite xxx separator to its default (period)
		end
	end

-- check for specital case where |separator=none
	if 'none' == sepc:lower() then						-- if |separator=none
		sepc = '';										-- then set it to a empty string
	end

-- Special case for cite techreport.
	if (config.CitationClass == &quot;techreport&quot;) then	-- special case for cite techreport
		if is_set(Issue) then						-- cite techreport uses 'number', which other citations aliase to 'issue'
			if not is_set(ID) then					-- can we use ID for the &quot;number&quot;?
				ID = Issue;							-- yes, use it
				Issue = &quot;&quot;;							-- unset Issue so that &quot;number&quot; isn't duplicated in the rendered citation or COinS metadata
			else									-- can't use ID so emit error message
				ID = ID .. &quot; &quot; .. seterror('redundant_parameters', '&lt;code&gt;&amp;#124;id=&lt;/code&gt; and &lt;code&gt;&amp;#124;number=&lt;/code&gt;');
			end
		end	
	end

-- special case for cite interview
	if (config.CitationClass == &quot;interview&quot;) then
		if is_set(Program) then
			ID = ' ' .. Program;
		end
		if is_set(Callsign) then
			if is_set(ID) then
				ID = ID .. sepc .. ' ' .. Callsign;
			else
				ID = ' ' .. Callsign;
			end
		end
		if is_set(City) then
			if is_set(ID) then
				ID = ID .. sepc .. ' ' .. City;
			else
				ID = ' ' .. City;
			end
		end

		if is_set(Interviewer) then
			if is_set(TitleType) then
				Others = ' ' .. TitleType .. ' with ' .. Interviewer;
				TitleType = '';
			else
				Others = ' ' .. 'Interview with ' .. Interviewer;
			end
			if is_set(Cointerviewers) then
				Others = Others .. sepc .. ' ' .. Cointerviewers;
			end
		else
			Others = '(Interview)';
		end
	end

--Account for the oddity that is {{cite journal}} with |pmc= set and |url= not set
	if config.CitationClass == &quot;journal&quot; and not is_set(URL) and is_set(ID_list['PMC']) then
		if not is_embargoed(Embargo) then
			URL=cfg.id_handlers['PMC'].prefix .. ID_list['PMC'];	-- set url to be the same as the PMC external link if not embargoed
			URLorigin = cfg.id_handlers['PMC'].parameters[1];		-- set URLorigin to parameter name for use in error message if citation is missing a |title=
		end
	end

-- Account for the oddity that is {{cite conference}}, before generation of COinS data.
--TODO: if this is only for {{cite conference}}, shouldn't we be checking? (if config.CitationClass=='conference' then ...)
	if is_set(BookTitle) then
		Chapter = Title;
		ChapterLink = TitleLink;
		TransChapter = TransTitle;
		Title = BookTitle;
		TitleLink = '';
		TransTitle = '';
	end

-- Account for the oddity that is {{cite episode}}, before generation of COinS data.
--[[	-- {{cite episode}} is not currently supported by this module
	if config.CitationClass == &quot;episode&quot; then
		local AirDate = A['AirDate'];
		local SeriesLink = A['SeriesLink'];
		local Season = A['Season'];
		local SeriesNumber = A['SeriesNumber'];
		local Network = A['Network'];
		local Station = A['Station'];
		local s, n = {}, {};
		local Sep = (first_set(A[&quot;SeriesSeparator&quot;], A[&quot;Separator&quot;]) or &quot;&quot;) .. &quot; &quot;;
		
		if is_set(Issue) then table.insert(s, cfg.messages[&quot;episode&quot;] .. &quot; &quot; .. Issue); Issue = ''; end
		if is_set(Season) then table.insert(s, cfg.messages[&quot;season&quot;] .. &quot; &quot; .. Season); end
		if is_set(SeriesNumber) then table.insert(s, cfg.messages[&quot;series&quot;] .. &quot; &quot; .. SeriesNumber); end
		if is_set(Network) then table.insert(n, Network); end
		if is_set(Station) then table.insert(n, Station); end
		
		Date = Date or AirDate;
		Chapter = Title;
		ChapterLink = TitleLink;
		TransChapter = TransTitle;
		Title = Series;
		TitleLink = SeriesLink;
		TransTitle = '';
		
		Series = table.concat(s, Sep);
		ID = table.concat(n, Sep);
	end
-- end of {{cite episode}} stuff]]

-- legacy: promote concatenation of |day=, |month=, and |year= to Date if Date not set; or, promote PublicationDate to Date if neither Date nor Year are set.
	if not is_set(Date) then
		Date = Year;						-- promote Year to Date
		Year = nil;							-- make nil so Year as empty string isn't used for CITEREF
		if is_set(Date) then
			local Month = A['Month'];
			if is_set(Month) then
				Date = Month .. &quot; &quot; .. Date;
				local Day = A['Day']
				if is_set(Day) then Date = Day .. &quot; &quot; .. Date end
			end
		elseif is_set(PublicationDate) then	-- use PublicationDate when |date= and |year= are not set
			Date = PublicationDate;			-- promonte PublicationDate to Date
			PublicationDate = '';			-- unset, no longer needed
		end
	end

	if PublicationDate == Date then PublicationDate = ''; end	-- if PublicationDate is same as Date, don't display in rendered citation


--[[
Go test all of the date-holding parameters for valid MOS:DATE format and make sure that dates are real dates. This must be done before we do COinS because here is where
we get the date used in the metadata.

Date validation supporting code is in Module:Citation/CS1/Date_validation
]]
	anchor_year, COinS_date, error_message = dates({['accessdate']=AccessDate, ['airdate']=AirDate, ['archivedate']=ArchiveDate, ['date']=Date, ['doi_brokendate']=DoiBroken,
		['embargo']=Embargo, ['laydate']=LayDate, ['publicationdate']=PublicationDate, ['year']=Year});
	if is_set(error_message) then
		table.insert( z.message_tail, { seterror( 'bad_date', {error_message}, true ) } );	-- add this error message
	end

-- At this point fields may be nil if they weren't specified in the template use.  We can use that fact.

    -- COinS metadata (see &lt;http://ocoins.info/&gt;) for
    -- automated parsing of citation information.
    local OCinSoutput = COinS{
        ['Periodical'] = Periodical,
        ['Chapter'] = Chapter,
        ['Title'] = Title,
        ['PublicationPlace'] = PublicationPlace,
        ['Date'] = first_set(COinS_date, Date),		-- COinS_date has correctly formatted date if Date is valid; any reason to keep Date here?  Should we be including invalid dates in metadata?
        ['Series'] = Series,
        ['Volume'] = Volume,
        ['Issue'] = Issue,
        ['Pages'] = get_coins_pages (first_set(Page, Pages, At)),	-- pages stripped of external links
        ['Edition'] = Edition,
        ['PublisherName'] = PublisherName,
        ['URL'] = first_set( URL, ChapterURL ),
        ['Authors'] = a,
        ['ID_list'] = ID_list,
        ['RawPage'] = this_page.prefixedText,
    };

    if is_set(Periodical) and not is_set(Chapter) and is_set(Title) then
        Chapter = Title;
        ChapterLink = TitleLink;
        TransChapter = TransTitle;
        Title = '';
        TitleLink = '';
        TransTitle = '';
    end

    -- Now perform various field substitutions.
    -- We also add leading spaces and surrounding markup and punctuation to the
    -- various parts of the citation, but only when they are non-nil.
    if not is_set(Authors) then
        local Maximum = tonumber( A['DisplayAuthors'] );
        
        -- Preserve old-style implicit et al.
        if not is_set(Maximum) and #a == 9 then 
            Maximum = 8;
            table.insert( z.message_tail, { seterror('implict_etal_author', {}, true ) } );
        elseif not is_set(Maximum) then
            Maximum = #a + 1;
        end
            
        local control = { 
            sep = A[&quot;AuthorSeparator&quot;] .. &quot; &quot;,
            namesep = (first_set(A[&quot;AuthorNameSeparator&quot;], A[&quot;NameSeparator&quot;]) or &quot;&quot;) .. &quot; &quot;,
            format = A[&quot;AuthorFormat&quot;],
            maximum = Maximum,
            lastauthoramp = LastAuthorAmp
        };
        
        -- If the coauthor field is also used, prevent ampersand and et al. formatting.
        if is_set(Coauthors) then
            control.lastauthoramp = nil;
            control.maximum = #a + 1;
        end
        
        Authors = listpeople(control, a) 
    end

	if not is_set(Authors) and is_set(Coauthors) then	-- coauthors aren't displayed if one of authors=, authorn=, or lastn= isn't specified
		table.insert( z.message_tail, { seterror('coauthors_missing_author', {}, true) } );	-- emit error message
	end

    local EditorCount
    if not is_set(Editors) then
        local Maximum = tonumber( A['DisplayEditors'] );
        -- Preserve old-style implicit et al.
        if not is_set(Maximum) and #e == 4 then 
            Maximum = 3;
            table.insert( z.message_tail, { seterror('implict_etal_editor', {}, true) } );
        elseif not is_set(Maximum) then
            Maximum = #e + 1;
        end

        local control = { 
            sep = A[&quot;EditorSeparator&quot;] .. &quot; &quot;,
            namesep = (first_set(A[&quot;EditorNameSeparator&quot;], A[&quot;NameSeparator&quot;]) or &quot;&quot;) .. &quot; &quot;,
            format = A['EditorFormat'],
            maximum = Maximum,
            lastauthoramp = LastAuthorAmp
        };

        Editors, EditorCount = listpeople(control, e);
    else
        EditorCount = 1;
    end

    local Cartography = &quot;&quot;;
    local Scale = &quot;&quot;;
    if config.CitationClass == &quot;map&quot; then
        if not is_set( Authors ) and is_set( PublisherName ) then
            Authors = PublisherName;
            PublisherName = &quot;&quot;;
        end
        Cartography = A['Cartography'];
        if is_set( Cartography ) then
            Cartography = sepc .. &quot; &quot; .. wrap( 'cartography', Cartography, use_lowercase );
        end        
        Scale = A['Scale'];
        if is_set( Scale ) then
            Scale = sepc .. &quot; &quot; .. Scale;
        end        
    end
    
    if  not is_set(URL) and
        not is_set(ChapterURL) and
        not is_set(ArchiveURL) and
        not is_set(ConferenceURL) and
        not is_set(TranscriptURL) then
        
        -- Test if cite web or cite podcast |url= is missing or empty 
		if inArray(config.CitationClass, {&quot;web&quot;,&quot;podcast&quot;}) then	
			table.insert( z.message_tail, { seterror( 'cite_web_url', {}, true ) } );
		end
        
        -- Test if accessdate is given without giving a URL
        if is_set(AccessDate) then
            table.insert( z.message_tail, { seterror( 'accessdate_missing_url', {}, true ) } );
            AccessDate = '';
        end
        
        -- Test if format is given without giving a URL
        if is_set(Format) then
            Format = Format .. seterror( 'format_missing_url' );
        end
    end
    
    -- Test if citation has no title
    if  not is_set(Chapter) and
        not is_set(Title) and
        not is_set(Periodical) and
        not is_set(Conference) and
        not is_set(TransTitle) and
        not is_set(TransChapter) then
        table.insert( z.message_tail, { seterror( 'citation_missing_title', {}, true ) } );
    end
    
    Format = is_set(Format) and &quot; (&quot; .. Format .. &quot;)&quot; or &quot;&quot;;
    
    local OriginalURL = URL
    DeadURL = DeadURL:lower();
    if is_set( ArchiveURL ) then
        if ( DeadURL ~= &quot;no&quot; ) then
            URL = ArchiveURL
            URLorigin = A:ORIGIN('ArchiveURL')
        end
    end
    
    -- Format chapter / article title
    if is_set(Chapter) and is_set(ChapterLink) then 
        Chapter = &quot;[[&quot; .. ChapterLink .. &quot;|&quot; .. Chapter .. &quot;]]&quot;;
    end
    if is_set(Periodical) and is_set(Title) then
        Chapter = wrap( 'italic-title', Chapter );
        TransChapter = wrap( 'trans-italic-title', TransChapter );
    else
		Chapter = kern_quotes (Chapter);				-- if necessary, separate chapter title's leading and trailing quote marks from Module provided quote marks
        Chapter = wrap( 'quoted-title', Chapter );
        TransChapter = wrap( 'trans-quoted-title', TransChapter );
    end
    
    local TransError = &quot;&quot;
    if is_set(TransChapter) then
        if not is_set(Chapter) then
            TransError = &quot; &quot; .. seterror( 'trans_missing_chapter' );
        else
            TransChapter = &quot; &quot; .. TransChapter;
        end
    end
    
    Chapter = Chapter .. TransChapter;
    
    if is_set(Chapter) then
        if not is_set(ChapterLink) then
            if is_set(ChapterURL) then
                Chapter = externallink( ChapterURL, Chapter ) .. TransError;
                if not is_set(URL) then
                    Chapter = Chapter .. Format;
                    Format = &quot;&quot;;
                end
            elseif is_set(URL) then 
                Chapter = externallink( URL, Chapter ) .. TransError .. Format;
                URL = &quot;&quot;;
                Format = &quot;&quot;;
            else
                Chapter = Chapter .. TransError;
            end            
        elseif is_set(ChapterURL) then
            Chapter = Chapter .. &quot; &quot; .. externallink( ChapterURL, nil, ChapterURLorigin ) .. 
                TransError;
        else
            Chapter = Chapter .. TransError;
        end
        Chapter = Chapter .. sepc .. &quot; &quot; -- with end-space
    elseif is_set(ChapterURL) then
        Chapter = &quot; &quot; .. externallink( ChapterURL, nil, ChapterURLorigin ) .. sepc .. &quot; &quot;;
    end        
    
    -- Format main title.
    if is_set(TitleLink) and is_set(Title) then
        Title = &quot;[[&quot; .. TitleLink .. &quot;|&quot; .. Title .. &quot;]]&quot;
    end
    
    if is_set(Periodical) then
		Title = kern_quotes (Title);				-- if necessary, separate title's leading and trailing quote marks from Module provided quote marks
        Title = wrap( 'quoted-title', Title );
        TransTitle = wrap( 'trans-quoted-title', TransTitle );
    elseif inArray(config.CitationClass, {&quot;web&quot;,&quot;news&quot;,&quot;pressrelease&quot;,&quot;conference&quot;,&quot;podcast&quot;}) and
            not is_set(Chapter) then
		Title = kern_quotes (Title);				-- if necessary, separate title's leading and trailing quote marks from Module provided quote marks
        Title = wrap( 'quoted-title', Title );
        TransTitle = wrap( 'trans-quoted-title', TransTitle );
    else
        Title = wrap( 'italic-title', Title );
        TransTitle = wrap( 'trans-italic-title', TransTitle );
    end
    
    TransError = &quot;&quot;;
    if is_set(TransTitle) then
        if not is_set(Title) then
            TransError = &quot; &quot; .. seterror( 'trans_missing_title' );
        else
            TransTitle = &quot; &quot; .. TransTitle;
        end
    end
    
    Title = Title .. TransTitle;
    
    if is_set(Title) then
        if not is_set(TitleLink) and is_set(URL) then 
            Title = externallink( URL, Title ) .. TransError .. Format       
            URL = &quot;&quot;;
            Format = &quot;&quot;;
        else
            Title = Title .. TransError;
        end
    end
    
    if is_set(Place) then
        Place = &quot; &quot; .. wrap( 'written', Place, use_lowercase ) .. sepc .. &quot; &quot;;
    end
    
    if is_set(Conference) then
        if is_set(ConferenceURL) then
            Conference = externallink( ConferenceURL, Conference );
        end
        Conference = sepc .. &quot; &quot; .. Conference
    elseif is_set(ConferenceURL) then
        Conference = sepc .. &quot; &quot; .. externallink( ConferenceURL, nil, ConferenceURLorigin );
    end
    
    if not is_set(Position) then
        local Minutes = A['Minutes'];
        if is_set(Minutes) then
            Position = &quot; &quot; .. Minutes .. &quot; &quot; .. cfg.messages['minutes'];
        else
            local Time = A['Time'];
            if is_set(Time) then
                local TimeCaption = A['TimeCaption']
                if not is_set(TimeCaption) then
                    TimeCaption = cfg.messages['event'];
                    if sepc ~= '.' then
                        TimeCaption = TimeCaption:lower();
                    end
                end
                Position = &quot; &quot; .. TimeCaption .. &quot; &quot; .. Time;
            end
        end
    else
        Position = &quot; &quot; .. Position;
        At = '';
    end
    
    if not is_set(Page) then
        if is_set(Pages) then
            if is_set(Periodical) and
                not inArray(config.CitationClass, {&quot;encyclopaedia&quot;,&quot;web&quot;,&quot;book&quot;,&quot;news&quot;,&quot;podcast&quot;}) then
                Pages = &quot;: &quot; .. Pages;
            elseif tonumber(Pages) ~= nil then
                Pages = sepc ..&quot; &quot; .. PPrefix .. Pages;
            else
                Pages = sepc ..&quot; &quot; .. PPPrefix .. Pages;
            end
        end
    else
        if is_set(Periodical) and
            not inArray(config.CitationClass, {&quot;encyclopaedia&quot;,&quot;web&quot;,&quot;book&quot;,&quot;news&quot;,&quot;podcast&quot;}) then
            Page = &quot;: &quot; .. Page;
        else
            Page = sepc ..&quot; &quot; .. PPrefix .. Page;
        end
    end
    
    At = is_set(At) and (sepc .. &quot; &quot; .. At) or &quot;&quot;;
    Position = is_set(Position) and (sepc .. &quot; &quot; .. Position) or &quot;&quot;;
    if config.CitationClass == 'map' then
        local Section = A['Section'];
        local Inset = A['Inset'];
        if first_set( Pages, Page, At ) ~= nil or sepc ~= '.' then
            if is_set( Section ) then
                Section = &quot;, &quot; .. wrap( 'section', Section, true );
            end
            if is_set( Inset ) then
                Inset = &quot;, &quot; .. wrap( 'inset', Inset, true );
            end
        else
            if is_set( Section ) then
                Section = sepc .. &quot; &quot; .. wrap( 'section', Section, use_lowercase );
                if is_set( Inset ) then
                    Inset = &quot;, &quot; .. wrap( 'inset', Inset, true );
                end
            elseif is_set( Inset ) then
                Inset = sepc .. &quot; &quot; .. wrap( 'inset', Inset, use_lowercase );
            end            
        end            
        At = At .. Section .. Inset;        
    end    

	--[[Look in the list of iso639-1 language codes to see if the value provided in the language parameter matches one of them.  If a match is found, 
	use that value; if not, then use the value that was provided with the language parameter.
	
	Categories are assigned in a manner similar to the {{xx icon}} templates - categorizes only mainspace citations and only when the language code is not 'en' (English).
	]]
	if is_set (Language) then
--		local name = mw.language.fetchLanguageName( Language:lower(), &quot;en&quot; );	-- experiment: this seems to return correct ISO 639-1 language names
		local name = cfg.iso639_1[Language:lower()];		-- get the language name if Language parameter has a valid iso 639-1 code
		if nil == name then
			Language=&quot; &quot; .. wrap( 'language', Language );	-- no match, use parameter's value
		else
			if 0 == this_page.namespace and 'en' ~= Language:lower() then	--found a match; is this page main / article space and English not the language?
				Language=&quot; &quot; .. wrap( 'language', name .. '[[Category:Articles with ' .. name .. '-language external links]]' );	-- in main space and not English: categorize
			else
				Language=&quot; &quot; .. wrap( 'language', name );	--not in mainspace or language is English so don't categorize
			end
		end
	else
		Language=&quot;&quot;;	-- language not specified so make sure this is an empty string;
	end

	Others = is_set(Others) and (sepc .. &quot; &quot; .. Others) or &quot;&quot;;

-- handle type parameter for those CS1 citations that have default values

	if inArray(config.CitationClass, {&quot;AV media notes&quot;, &quot;DVD notes&quot;, &quot;podcast&quot;, &quot;pressrelease&quot;, &quot;techreport&quot;, &quot;thesis&quot;}) then
		TitleType = set_titletype (config.CitationClass, TitleType);
		if is_set(Degree) and &quot;Thesis&quot; == TitleType then	-- special case for cite thesis
			TitleType = Degree .. &quot; thesis&quot;;
		end
	end

	if is_set(TitleType) then					-- if type parameter is specified
		TitleType = &quot; (&quot; .. TitleType .. &quot;)&quot;;	-- display it in parentheses
	end

	TitleNote = is_set(TitleNote) and (sepc .. &quot; &quot; .. TitleNote) or &quot;&quot;;
    Edition = is_set(Edition) and (&quot; &quot; .. wrap( 'edition', Edition )) or &quot;&quot;;
    Issue = is_set(Issue) and (&quot; (&quot; .. Issue .. &quot;)&quot;) or &quot;&quot;;
    Series = is_set(Series) and (sepc .. &quot; &quot; .. Series) or &quot;&quot;;
    OrigYear = is_set(OrigYear) and (&quot; [&quot; .. OrigYear .. &quot;]&quot;) or &quot;&quot;;
    Agency = is_set(Agency) and (sepc .. &quot; &quot; .. Agency) or &quot;&quot;;

    if is_set(Volume) then
        if ( mw.ustring.len(Volume) &gt; 4 )
          then Volume = sepc ..&quot; &quot; .. Volume;
          else Volume = &quot; &lt;b&gt;&quot; .. hyphentodash(Volume) .. &quot;&lt;/b&gt;&quot;;
        end
    end

--[[ This code commented out while discussion continues until after week of 2014-03-23 live module update;
    if is_set(Volume) then
        if ( mw.ustring.len(Volume) &gt; 4 )
          then Volume = sepc .. &quot; &quot; .. Volume;
          else
              Volume = &quot; &lt;b&gt;&quot; .. hyphentodash(Volume) .. &quot;&lt;/b&gt;&quot;;
              if is_set(Series) then Volume = sepc .. Volume;
              end
        end
    end
]]    
    ------------------------------------ totally unrelated data
    --[[ Loosely mimic {{subscription required}} template; Via parameter identifies a delivery source that is not the publisher; these sources often, but not always, exist
    behind a registration or paywall.  So here, we've chosen to decouple via from subscription (via has never been part of the registration required template).
    
    Subscription implies paywall; Registration does not.  If both are used in a citation, the subscription required link note is displayed. There are no error messages for this condition.
    ]]
    if is_set(Via) then
        Via = &quot; &quot; .. wrap( 'via', Via );
    end

	if is_set(SubscriptionRequired) then
        SubscriptionRequired = sepc .. &quot; &quot; .. cfg.messages['subscription']; --here when 'via' parameter not used but 'subscription' is
    elseif is_set(RegistrationRequired) then
        SubscriptionRequired = sepc .. &quot; &quot; .. cfg.messages['registration']; --here when 'via' and 'subscription' parameters not used but 'registration' is
    end

    if is_set(AccessDate) then
        local retrv_text = &quot; &quot; .. cfg.messages['retrieved']
        if (sepc ~= &quot;.&quot;) then retrv_text = retrv_text:lower() end
        AccessDate = '&lt;span class=&quot;reference-accessdate&quot;&gt;' .. sepc
            .. substitute( retrv_text, {AccessDate} ) .. '&lt;/span&gt;'
    end
    
    if is_set(ID) then ID = sepc ..&quot; &quot;.. ID; end
   	if &quot;thesis&quot; == config.CitationClass and is_set(Docket) then
		ID = sepc ..&quot; Docket &quot;.. Docket .. ID;
	end

    
    ID_list = buildidlist( ID_list, {DoiBroken = DoiBroken, ASINTLD = ASINTLD, IgnoreISBN = IgnoreISBN, Embargo=Embargo} );

    if is_set(URL) then
        URL = &quot; &quot; .. externallink( URL, nil, URLorigin );
    end

    if is_set(Quote) then
        if Quote:sub(1,1) == '&quot;' and Quote:sub(-1,-1) == '&quot;' then
            Quote = Quote:sub(2,-2);
        end
        Quote = sepc ..&quot; &quot; .. wrap( 'quoted-text', Quote ); 
        PostScript = &quot;&quot;;							-- CS1 does not supply terminal punctuation when |quote= is set
    end
    
    local Archived
    if is_set(ArchiveURL) then
        if not is_set(ArchiveDate) then
            ArchiveDate = seterror('archive_missing_date');
        end
        if &quot;no&quot; == DeadURL then
            local arch_text = cfg.messages['archived'];
            if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
            Archived = sepc .. &quot; &quot; .. substitute( cfg.messages['archived-not-dead'],
                { externallink( ArchiveURL, arch_text ), ArchiveDate } );
            if not is_set(OriginalURL) then
                Archived = Archived .. &quot; &quot; .. seterror('archive_missing_url');                               
            end
        elseif is_set(OriginalURL) then
            local arch_text = cfg.messages['archived-dead'];
            if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
            Archived = sepc .. &quot; &quot; .. substitute( arch_text,
                { externallink( OriginalURL, cfg.messages['original'] ), ArchiveDate } );
        else
            local arch_text = cfg.messages['archived-missing'];
            if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
            Archived = sepc .. &quot; &quot; .. substitute( arch_text, 
                { seterror('archive_missing_url'), ArchiveDate } );
        end
    else
        Archived = &quot;&quot;
    end
    
    local Lay
    if is_set(LayURL) then
        if is_set(LayDate) then LayDate = &quot; (&quot; .. LayDate .. &quot;)&quot; end
        if is_set(LaySource) then 
            LaySource = &quot; &amp;ndash; ''&quot; .. safeforitalics(LaySource) .. &quot;''&quot;;
        else
            LaySource = &quot;&quot;;
        end
        if sepc == '.' then
            Lay = sepc .. &quot; &quot; .. externallink( LayURL, cfg.messages['lay summary'] ) .. LaySource .. LayDate
        else
            Lay = sepc .. &quot; &quot; .. externallink( LayURL, cfg.messages['lay summary']:lower() ) .. LaySource .. LayDate
        end            
    else
        Lay = &quot;&quot;;
    end
    
    if is_set(Transcript) then
        if is_set(TranscriptURL) then Transcript = externallink( TranscriptURL, Transcript ); end
    elseif is_set(TranscriptURL) then
        Transcript = externallink( TranscriptURL, nil, TranscriptURLorigin );
    end
    
    local Publisher;
    if is_set(Periodical) and
        not inArray(config.CitationClass, {&quot;encyclopaedia&quot;,&quot;web&quot;,&quot;pressrelease&quot;,&quot;podcast&quot;}) then
        if is_set(PublisherName) then
            if is_set(PublicationPlace) then
                Publisher = PublicationPlace .. &quot;: &quot; .. PublisherName;
            else
                Publisher = PublisherName;  
            end
        elseif is_set(PublicationPlace) then
            Publisher= PublicationPlace;
        else 
            Publisher = &quot;&quot;;
        end
        if is_set(PublicationDate) then
            if is_set(Publisher) then
                Publisher = Publisher .. &quot;, &quot; .. wrap( 'published', PublicationDate );
            else
                Publisher = PublicationDate;
            end
        end
        if is_set(Publisher) then
            Publisher = &quot; (&quot; .. Publisher .. &quot;)&quot;;
        end
    else
        if is_set(PublicationDate) then
            PublicationDate = &quot; (&quot; .. wrap( 'published', PublicationDate ) .. &quot;)&quot;;
        end
        if is_set(PublisherName) then
            if is_set(PublicationPlace) then
                Publisher = sepc .. &quot; &quot; .. PublicationPlace .. &quot;: &quot; .. PublisherName .. PublicationDate;
            else
                Publisher = sepc .. &quot; &quot; .. PublisherName .. PublicationDate;  
            end            
        elseif is_set(PublicationPlace) then 
            Publisher= sepc .. &quot; &quot; .. PublicationPlace .. PublicationDate;
        else 
            Publisher = PublicationDate;
        end
    end
    
    -- Several of the above rely upon detecting this as nil, so do it last.
    if is_set(Periodical) then
        if is_set(Title) or is_set(TitleNote) then 
            Periodical = sepc .. &quot; &quot; .. wrap( 'italic-title', Periodical ) 
        else 
            Periodical = wrap( 'italic-title', Periodical )
        end
    end

--[[
Handle the oddity that is cite speech.  This code overrides whatever may be the value assigned to TitleNote (through |department=) and forces it to be &quot; (Speech)&quot; so that
the annotation directly follows the |title= parameter value in the citation rather than the |event= parameter value (if provided).
]]
	if &quot;speech&quot; == config.CitationClass then				-- cite speech only
		TitleNote = &quot; (Speech)&quot;;							-- annotate the citation
		if is_set (Periodical) then							-- if Periodical, perhaps because of an included |website= or |journal= parameter 
			if is_set (Conference) then						-- and if |event= is set
				Conference = Conference .. sepc .. &quot; &quot;;		-- then add appropriate punctuation to the end of the Conference variable before rendering
			end
		end
	end

    -- Piece all bits together at last.  Here, all should be non-nil.
    -- We build things this way because it is more efficient in LUA
    -- not to keep reassigning to the same string variable over and over.

    local tcommon
    if inArray(config.CitationClass, {&quot;journal&quot;,&quot;citation&quot;}) and is_set(Periodical) then
        if is_set(Others) then Others = Others .. sepc .. &quot; &quot; end
        tcommon = safejoin( {Others, Title, TitleNote, Conference, Periodical, Format, TitleType, Scale, Series, 
            Language, Cartography, Edition, Publisher, Agency, Volume, Issue}, sepc );
    else 
        tcommon = safejoin( {Title, TitleNote, Conference, Periodical, Format, TitleType, Scale, Series, Language, 
            Volume, Issue, Others, Cartography, Edition, Publisher, Agency}, sepc );
    end
    
    if #ID_list &gt; 0 then
        ID_list = safejoin( { sepc .. &quot; &quot;,  table.concat( ID_list, sepc .. &quot; &quot; ), ID }, sepc );
    else
        ID_list = ID;
    end
    
    local idcommon = safejoin( { ID_list, URL, Archived, AccessDate, Via, SubscriptionRequired, Lay, Quote }, sepc );
    local text;
    local pgtext = Position .. Page .. Pages .. At;
    
    if is_set(Authors) then
        if is_set(Coauthors) then
            Authors = Authors .. A['AuthorSeparator'] .. &quot; &quot; .. Coauthors
        end
        if is_set(Date) then
            Date = &quot; (&quot;..Date..&quot;)&quot; .. OrigYear .. sepc .. &quot; &quot;
        elseif string.sub(Authors,-1,-1) == sepc then
            Authors = Authors .. &quot; &quot;
        else
            Authors = Authors .. sepc .. &quot; &quot;
        end
        if is_set(Editors) then
            local in_text = &quot; &quot;;
            local post_text = &quot;&quot;;
            if is_set(Chapter) then
                in_text = in_text .. cfg.messages['in'] .. &quot; &quot;
            else
                if EditorCount &lt;= 1 then
                    post_text = &quot;, &quot; .. cfg.messages['editor'];
                else
                    post_text = &quot;, &quot; .. cfg.messages['editors'];
                end
            end 
            if (sepc ~= '.') then in_text = in_text:lower() end
            Editors = in_text .. Editors .. post_text;
            if (string.sub(Editors,-1,-1) == sepc)
                then Editors = Editors .. &quot; &quot;
                else Editors = Editors .. sepc .. &quot; &quot;
            end
        end
        text = safejoin( {Authors, Date, Chapter, Place, Editors, tcommon }, sepc );
        text = safejoin( {text, pgtext, idcommon}, sepc );
    elseif is_set(Editors) then
        if is_set(Date) then
            if EditorCount &lt;= 1 then
                Editors = Editors .. &quot;, &quot; .. cfg.messages['editor'];
            else
                Editors = Editors .. &quot;, &quot; .. cfg.messages['editors'];
            end
            Date = &quot; (&quot; .. Date ..&quot;)&quot; .. OrigYear .. sepc .. &quot; &quot;
        else
            if EditorCount &lt;= 1 then
                Editors = Editors .. &quot; (&quot; .. cfg.messages['editor'] .. &quot;)&quot; .. sepc .. &quot; &quot;
            else
                Editors = Editors .. &quot; (&quot; .. cfg.messages['editors'] .. &quot;)&quot; .. sepc .. &quot; &quot;
            end
        end
        text = safejoin( {Editors, Date, Chapter, Place, tcommon}, sepc );
        text = safejoin( {text, pgtext, idcommon}, sepc );
    else
        if is_set(Date) then
            if ( string.sub(tcommon,-1,-1) ~= sepc )
              then Date = sepc ..&quot; &quot; .. Date .. OrigYear
              else Date = &quot; &quot; .. Date .. OrigYear
            end
        end
        if config.CitationClass==&quot;journal&quot; and is_set(Periodical) then
            text = safejoin( {Chapter, Place, tcommon}, sepc );
            text = safejoin( {text, pgtext, Date, idcommon}, sepc );
        else
            text = safejoin( {Chapter, Place, tcommon, Date}, sepc );
            text = safejoin( {text, pgtext, idcommon}, sepc );
        end
    end
    
	if is_set(PostScript) and PostScript ~= sepc then
		text = safejoin( {text, sepc}, sepc );  --Deals with italics, spaces, etc.
		text = text:sub(1,-sepc:len()-1);
--		text = text:sub(1,-2);	--Remove final separator (assumes that sepc is only one character)
	end    
    
    text = safejoin( {text, PostScript}, sepc );

    -- Now enclose the whole thing in a &lt;span/&gt; element
    local options = {};
    
    if is_set(config.CitationClass) and config.CitationClass ~= &quot;citation&quot; then
        options.class = &quot;citation &quot; .. config.CitationClass;
    else
        options.class = &quot;citation&quot;;
    end
    
    if is_set(Ref) and Ref:lower() ~= &quot;none&quot; then
        local id = Ref
        if ( &quot;harv&quot; == Ref ) then
            local names = {} --table of last names &amp; year
            if #a &gt; 0 then
                for i,v in ipairs(a) do 
                    names[i] = v.last 
                    if i == 4 then break end
                end
            elseif #e &gt; 0 then
                for i,v in ipairs(e) do 
                    names[i] = v.last 
                    if i == 4 then break end                
                end
            end
			names[ #names + 1 ] = first_set(Year, anchor_year);	-- Year first for legacy citations
            id = anchorid(names)
        end
        options.id = id;
    end
    
    if string.len(text:gsub(&quot;&lt;span[^&gt;/]*&gt;.-&lt;/span&gt;&quot;, &quot;&quot;):gsub(&quot;%b&lt;&gt;&quot;,&quot;&quot;)) &lt;= 2 then
        z.error_categories = {};
        text = seterror('empty_citation');
        z.message_tail = {};
    end
    
    if is_set(options.id) then 
        text = '&lt;span id=&quot;' .. mw.uri.anchorEncode(options.id) ..'&quot; class=&quot;' .. mw.text.nowiki(options.class) .. '&quot;&gt;' .. text .. &quot;&lt;/span&gt;&quot;;
    else
        text = '&lt;span class=&quot;' .. mw.text.nowiki(options.class) .. '&quot;&gt;' .. text .. &quot;&lt;/span&gt;&quot;;
    end        

    local empty_span = '&lt;span style=&quot;display:none;&quot;&gt;&amp;nbsp;&lt;/span&gt;';
    
    -- Note: Using display: none on then COinS span breaks some clients.
    local OCinS = '&lt;span title=&quot;' .. OCinSoutput .. '&quot; class=&quot;Z3988&quot;&gt;' .. empty_span .. '&lt;/span&gt;';
    text = text .. OCinS;
    
    if #z.message_tail ~= 0 then
        text = text .. &quot; &quot;;
        for i,v in ipairs( z.message_tail ) do
            if is_set(v[1]) then
                if i == #z.message_tail then
                    text = text .. errorcomment( v[1], v[2] );
                else
                    text = text .. errorcomment( v[1] .. &quot;; &quot;, v[2] );
                end
            end
        end
    end
    
    no_tracking_cats = no_tracking_cats:lower();
    if inArray(no_tracking_cats, {&quot;&quot;, &quot;no&quot;, &quot;false&quot;, &quot;n&quot;}) then
        for _, v in ipairs( z.error_categories ) do
            text = text .. '[[Category:' .. v ..']]';
        end
    end
    
    return text
end

-- This is used by templates such as {{cite book}} to create the actual citation text.
function z.citation(frame)
    local pframe = frame:getParent()
    
    if nil ~= string.find( frame:getTitle(), 'sandbox', 1, true ) then				-- did the {{#invoke:}} use sandbox version?
    	cfg = mw.loadData( 'Module:Citation/CS1/Configuration/sandbox' );	-- load sandbox versions of Configuration and Whitelist and ...
    	whitelist = mw.loadData( 'Module:Citation/CS1/Whitelist/sandbox' );
    	dates = require('Module:Citation/CS1/Date_validation/sandbox').dates	-- ... sandbox version of date validation code
    else																	-- otherwise
    	cfg = mw.loadData( 'Module:Citation/CS1/Configuration' );			-- load live versions of Configuration and Whitelist and ...
    	whitelist = mw.loadData( 'Module:Citation/CS1/Whitelist' );
    	dates = require('Module:Citation/CS1/Date_validation').dates		-- ... live version of date validation code
	end
	
    local args = {};
    local suggestions = {};
    local error_text, error_state;

    local config = {};
    for k, v in pairs( frame.args ) do
        config[k] = v;
        args[k] = v;       
    end    

    for k, v in pairs( pframe.args ) do
        if v ~= '' then
            if not validate( k ) then            
                error_text = &quot;&quot;;
                if type( k ) ~= 'string' then
                    -- Exclude empty numbered parameters
                    if v:match(&quot;%S+&quot;) ~= nil then
                        error_text, error_state = seterror( 'text_ignored', {v}, true );
                    end
                elseif validate( k:lower() ) then 
                    error_text, error_state = seterror( 'parameter_ignored_suggest', {k, k:lower()}, true );
                else
                    if #suggestions == 0 then
                        suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions' );
                    end
                    if suggestions[ k:lower() ] ~= nil then
                        error_text, error_state = seterror( 'parameter_ignored_suggest', {k, suggestions[ k:lower() ]}, true );
                    else
                        error_text, error_state = seterror( 'parameter_ignored', {k}, true );
                    end
                end                  
                if error_text ~= '' then
                    table.insert( z.message_tail, {error_text, error_state} );
                end                
            end
            args[k] = v;
        elseif args[k] ~= nil or (k == 'postscript') then
            args[k] = v;
        end        
    end    
    
    return citation0( config, args)
end

return z</text>
      <sha1>lo6xwe0knz7xynvby9rsvvyhw76rrl2</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Configuration</title>
    <ns>828</ns>
    <id>39043527</id>
    <revision>
      <id>601950765</id>
      <parentid>595599649</parentid>
      <timestamp>2014-03-30T12:24:37Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Synch from sandbox;</comment>
      <text xml:space="preserve" bytes="26296">citation_config = {};

--[[
List of namespaces that should not be included in citation
error categories.  Same as setting notracking = true by default

Note: Namespace names should use underscores instead of spaces.
]]
citation_config.uncategorized_namespaces = { 'User', 'Talk', 'User_talk', 'Wikipedia_talk', 'File_talk', 'Template_talk',
	'Help_talk', 'Category_talk', 'Portal_talk', 'Book_talk', 'Draft', 'Draft_talk', 'Education_Program_talk', 
	'Module_talk', 'MediaWiki_talk' };

--[[
Translation table

The following contains fixed text that may be output as part of a citation.
This is separated from the main body to aid in future translations of this
module.
]]
citation_config.messages = {
  ['published'] = 'published $1',
  ['lay summary'] = 'Lay summary',
  ['retrieved'] = 'Retrieved $1',
  ['inactive'] = 'inactive',
  ['archived-dead'] = 'Archived from $1 on $2',
  ['archived-not-dead'] = '$1 from the original on $2',
  ['archived-missing'] = 'Archived from the original$1 on $2',
  ['archived'] = 'Archived',
  ['original'] = 'the original',
  ['editor'] = 'ed.',
  ['editors'] = 'eds.', 
  ['edition'] = '($1 ed.)', 
  ['episode'] = 'episode',
  ['season'] = 'season', 
  ['series'] = 'series',
  ['cartography'] = 'Cartography by $1',
  ['section'] = 'Section $1',
  ['inset'] = '$1 inset',
  ['written'] = 'Written at $1',
  ['in'] = 'In',
  ['et al'] = 'et al.', 
  
  ['subscription'] = '&lt;span style=&quot;font-size:0.95em; font-size:90%; color:#555&quot;&gt;(subscription required (&lt;span title=&quot;Sources are not required to be available online. Online sources do not have to be freely available. The site may require a paid subscription.&quot; style=&quot;border-bottom:1px dotted;cursor:help&quot;&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
  	'[[Category:Pages containing links to subscription-only content]]', 

  ['registration']='&lt;span style=&quot;font-size:0.95em; font-size:90%; color:#555&quot;&gt;(registration required (&lt;span title=&quot;Sources are not required to be available online. Online sources do not have to be freely available. The site may require registration.&quot; style=&quot;border-bottom:1px dotted;cursor:help&quot;&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
  	'[[Category:Pages with login required references or sources]]',
  
  ['language'] = '(in $1)', 
  ['via'] = &quot; &amp;ndash; via $1&quot;,
  ['event'] = 'Event occurs at',
  ['minutes'] = 'minutes in', 

  ['quoted-title'] = '&quot;$1&quot;',
  ['italic-title'] = &quot;''$1''&quot;,
  ['trans-quoted-title'] = &quot;&amp;#91;$1&amp;#93;&quot;,
  ['trans-italic-title'] = &quot;&amp;#91;''$1''&amp;#93;&quot;,
  ['quoted-text'] = '&quot;$1&quot;',

  ['parameter'] = '&lt;code&gt;&amp;#124;$1=&lt;/code&gt;',
  ['parameter-separator'] = ', ',
  ['parameter-final-separator'] = ', and ',
  ['parameter-pair-separator'] = ' and ',

  -- Error output
  ['hidden-error'] = '&lt;span style=&quot;display:none;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;$1&lt;/span&gt;',
  ['visible-error'] = '&lt;span style=&quot;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;$1&lt;/span&gt;',
  
  -- Determines the location of the help page
  ['help page link'] = 'Help:CS1 errors',
  ['help page label'] = 'help',
  
  -- Internal errors (should only occur if configuration is bad)
  ['undefined_error'] = 'Called with an undefined error condition',
  ['unknown_manual_ID'] = 'Unrecognized manual ID mode',
  ['unknown_ID_mode'] = 'Unrecognized ID mode',
  ['unknown_argument_map'] = 'Argument map not defined for this variable',
  ['bare_url_no_origin'] = 'Bare url found but origin indicator is nil or empty',
}

-- Aliases table for commonly passed parameters
citation_config.aliases = {
    ['AccessDate'] = 'accessdate',
    ['Agency'] = 'agency',
    ['AirDate'] = 'airdate',
    ['ArchiveDate'] = {'archive-date', 'archivedate' },
    ['ArchiveURL'] = {'archive-url', 'archiveurl' },
    ['ASINTLD'] = {'ASIN-TLD', 'asin-tld'},
    ['At'] = 'at',
    ['Authors'] = {'authors', 'people', 'host'},
    ['AuthorFormat'] = {&quot;author-format&quot;, &quot;authorformat&quot; },
    ['AuthorSeparator'] = 'author-separator',
    ['AuthorNameSeparator'] = 'author-name-separator',
    ['BookTitle'] = 'booktitle',
	['Callsign'] = 'callsign',							-- cite interview
    ['Cartography'] = 'cartography',
    ['Chapter'] = {'chapter', 'contribution', 'entry', 'article', 'section', 'notestitle'},		-- notestitle is deprecated used by old cite AV media notes; remove after 1 October 2014;
    ['ChapterLink'] = 'chapterlink',
    ['ChapterURL'] = {'chapter-url', 'chapterurl', 'contribution-url', 'contributionurl', 'sectionurl' },
	['City'] = 'city',									-- cite interview
    ['Coauthors'] = {'coauthors', 'coauthor' },
    ['Cointerviewers'] = 'cointerviewers',				-- cite interview
    ['Conference'] = {'conference', 'event' },
    ['ConferenceURL'] = {'conference-url', 'conferenceurl', 'eventurl' },
    ['Date'] = 'date',
    ['Day'] = 'day',
    ['DeadURL'] = 'deadurl',
    ['Degree'] = 'degree',
    ['DisplayAuthors'] = {&quot;display-authors&quot;, &quot;displayauthors&quot;},
    ['DisplayEditors'] = {&quot;display-editors&quot;, &quot;displayeditors&quot;},
    ['Docket'] = 'docket',
    ['DoiBroken'] = {'doi_inactivedate', 'doi_brokendate', 'DoiBroken'},
    ['Edition'] = 'edition',
    ['Editors'] = 'editors',
    ['EditorFormat'] = {&quot;editor-format&quot;, &quot;editorformat&quot; },
    ['EditorSeparator'] = 'editor-separator',
    ['EditorNameSeparator'] = 'editor-name-separator',
    ['Embargo'] = {'Embargo', 'embargo'},
    ['Format'] = 'format',
    ['ID'] = {'id', 'ID', 'publisherid'},				-- publisherid is deprecated; used by old cite AV media notes and old cite DVD notes; remove after 1 October 2014;
    ['IgnoreISBN'] = {'ignore-isbn-error', 'ignoreisbnerror'},
    ['Inset'] = 'inset',
    ['Interviewer'] = 'interviewer',					-- cite interview
    ['Issue'] = {'issue', 'number'},
    ['Language'] = {'language', 'in'},
    ['LastAuthorAmp'] = 'lastauthoramp',
    ['LayDate'] = 'laydate',
    ['LaySource'] = 'laysource',
    ['LayURL'] = {'layurl', 'laysummary'},
    ['Minutes'] = 'minutes',
    ['Month'] = 'month',
    ['NameSeparator'] = 'name-separator',
    ['Network'] = 'network',
    ['NoPP'] = 'nopp',
    ['NoTracking'] = {&quot;template doc demo&quot;, 'nocat', 
        'notracking', &quot;no-tracking&quot;},
    ['OrigYear'] = {'origyear', 'titleyear'},			-- titleyear is deprecated; used in old cite DVD notes; remove after 1 October 2014
    ['Others'] = {'others', 'artist', 'director'},		-- artist and director are deprecated; used in old cite AV media notes and old cite DVD notes; remove after 1 October 2014
    ['Page'] = {'p', 'page'},
    ['Pages'] = {'pp', 'pages'},
    ['Periodical'] = {'journal', 'newspaper', 'magazine', 'work',
        'website',  'periodical', 'encyclopedia', 'encyclopaedia', 'dictionary'},
    ['Place'] = {'place', 'location'},
    ['PPrefix'] = 'PPrefix',
    ['PPPrefix'] = 'PPPrefix',
	['Program'] = 'program',							-- cite interview
    ['PostScript'] = 'postscript',
    ['PublicationDate'] = {'publicationdate', 'publication-date' },
    ['PublicationPlace'] = {'publication-place', 'publicationplace' },
    ['PublisherName'] = {'publisher', 'distributor', 'institution'},
    ['Quote'] = {'quote', 'quotation'},
    ['Ref'] = {'ref', 'Ref'},
    ['RegistrationRequired'] = 'registration',
    ['Scale'] = 'scale',
    ['Section'] = 'section',
    ['Season'] = 'season',
    ['Separator'] = 'separator',
    ['Series'] = {'series', 'version'},
    ['SeriesSeparator'] = 'series-separator',
    ['SeriesLink'] = 'serieslink',
    ['SeriesNumber'] = {'seriesnumber', 'seriesno'},
    ['Station'] = 'station',
    ['SubscriptionRequired'] = 'subscription',
    ['Time'] = 'time',
    ['TimeCaption'] = 'timecaption',
    ['Title'] = 'title',
    ['TitleLink'] = {'titlelink', 'episodelink', 'albumlink' },		-- albumlink is deprecated; used by old cite AV media notes; remove after 1 October 2014
    ['TitleNote'] = 'department',
    ['TitleType'] = {'type', 'medium'},
    ['TransChapter'] = {'trans-chapter', 'trans_chapter' },
    ['Transcript'] = 'transcript',
    ['TranscriptURL'] = {'transcript-url', 'transcripturl'},
    ['TransTitle'] = {'trans-title', 'trans_title' },
    ['URL'] = {'url', 'URL'},
    ['Via'] = 'via',
    ['Volume'] = 'volume',
    ['Year'] = 'year',

    ['AuthorList-First'] = {&quot;author#-first&quot;, &quot;author-first#&quot;,
        &quot;first#&quot;, &quot;given#&quot;},
    ['AuthorList-Last'] = {&quot;author#-last&quot;, &quot;author-last#&quot;, 
        &quot;last#&quot;, &quot;surname#&quot;, &quot;Author#&quot;, &quot;author#&quot;, &quot;authors#&quot;, &quot;subject#&quot;},
    ['AuthorList-Link'] = {&quot;author#-link&quot;, &quot;author-link#&quot;, 
        &quot;author#link&quot;, &quot;authorlink#&quot;, &quot;subjectlink#&quot;},
    ['AuthorList-Mask'] = {&quot;author#-mask&quot;, &quot;author-mask#&quot;, 
        &quot;author#mask&quot;, &quot;authormask#&quot;},
    
    ['EditorList-First'] = {&quot;editor#-first&quot;, 
        &quot;editor-first#&quot;, &quot;EditorGiven#&quot;},
    ['EditorList-Last'] = {&quot;editor#-last&quot;, &quot;editor-last#&quot;,
        &quot;EditorSurname#&quot;, &quot;Editor#&quot;, &quot;editor#&quot;, &quot;editors#&quot;},
    ['EditorList-Link'] = {&quot;editor#-link&quot;, &quot;editor-link#&quot;, 
        &quot;editor#link&quot;, &quot;editorlink#&quot;},
    ['EditorList-Mask'] = {&quot;editor#-mask&quot;, &quot;editor-mask#&quot;, 
        &quot;editor#mask&quot;, &quot;editormask#&quot;},
    
}

-- Default parameter values
citation_config.defaults = {
    ['DeadURL'] = 'yes',
    ['AuthorSeparator'] = ';',
    ['EditorSeparator'] = ';',
    ['NameSeparator'] = ',',
    ['PPrefix'] = &quot;p.&amp;nbsp;&quot;,
    ['PPPrefix'] = &quot;pp.&amp;nbsp;&quot;,    
}

--[[
Error condition table

The following contains a list of IDs for various error conditions defined in the 
code.  For each ID, we specify a text message to display, an error category to
include, and whether the error message should be wrapped as a hidden comment.

Anchor changes require identical changes to matching anchor in Help:CS1 errors
]]

citation_config.error_conditions = {
	accessdate_missing_url = {
		message = '&lt;code&gt;&amp;#124;accessdate=&lt;/code&gt; requires &lt;code&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'accessdate_missing_url',
		category = 'Pages using citations with accessdate and no URL',
		hidden = true },
	archive_missing_date = {
		message = '&lt;code&gt;&amp;#124;archiveurl=&lt;/code&gt; requires &lt;code&gt;&amp;#124;archivedate=&lt;/code&gt;',
		anchor = 'archive_missing_date',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_missing_url = {
		message = '&lt;code&gt;&amp;#124;archiveurl=&lt;/code&gt; requires &lt;code&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'archive_missing_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	bad_authorlink = {
		message = 'Check &lt;code&gt;&amp;#124;authorlink=&lt;/code&gt; value',
		anchor = 'bad_authorlink',
		category = 'CS1 errors: authorlink',
		hidden = false },
	bad_date = {
		message = 'Check date values in: &lt;code&gt;$1&lt;/code&gt;',
		anchor = 'bad_date',
		category = 'CS1 errors: dates',
		hidden = true },
	bad_doi = {
		message = 'Check &lt;code&gt;&amp;#124;doi=&lt;/code&gt; value',
		anchor = 'bad_doi',
		category = 'Pages with DOI errors',
		hidden = false },
	bad_isbn = {
		message = 'Check &lt;code&gt;&amp;#124;isbn=&lt;/code&gt; value',
		anchor = 'bad_isbn',
		category = 'Pages with ISBN errors',
		hidden = false },
	bad_issn = {
		message = 'Check &lt;code&gt;&amp;#124;issn=&lt;/code&gt; value',
		anchor = 'bad_issn',
		category = 'CS1 errors: ISSN',
		hidden = false },
	bad_lccn = {
		message = 'Check &lt;code&gt;&amp;#124;lccn=&lt;/code&gt; value',
		anchor = 'bad_lccn',
		category = 'CS1 errors: LCCN',
		hidden = false },
	bad_ol = {
		message = 'Check &lt;code&gt;&amp;#124;ol=&lt;/code&gt; value',
		anchor = 'bad_ol',
		category = 'Pages with OL errors',
		hidden = false },
	bad_pmc = {
		message = 'Check &lt;code&gt;&amp;#124;pmc=&lt;/code&gt; value',
		anchor = 'bad_pmc',
		category = 'CS1 errors: PMC',
		hidden = false },
	bad_pmid = {
		message = 'Check &lt;code&gt;&amp;#124;pmid=&lt;/code&gt; value',
		anchor = 'bad_pmid',
		category = 'CS1 errors: PMID',
		hidden = false },
	bad_url = {
		message = 'Check &lt;code&gt;&amp;#124;url=&lt;/code&gt; scheme',
		anchor = 'bad_url',
		category = 'Pages with URL errors',
		hidden = false },
	bare_url_missing_title = {
		message = '$1 missing title',
		anchor = 'bare_url_missing_title',
		category = 'Pages with citations having bare URLs',
		hidden = false },
	citation_missing_title = {
		message = 'Missing or empty &lt;code&gt;&amp;#124;title=&lt;/code&gt;',
		anchor = 'citation_missing_title',
		category = 'Pages with citations lacking titles',
		hidden = false },
	cite_web_url = {											-- this error applies to cite web and to cite podcast
		message = 'Missing or empty &lt;code&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'cite_web_url',
		category = 'Pages using web citations with no URL',
		hidden = true },
	coauthors_missing_author = {
		message = '&lt;code&gt;&amp;#124;coauthors=&lt;/code&gt; requires &lt;code&gt;&amp;#124;author=&lt;/code&gt;',
		anchor = 'coauthors_missing_author',
		category = 'CS1 errors: coauthors without author',
		hidden = false },
	deprecated_params = {
		message = 'Cite uses deprecated parameters',
		anchor = 'deprecated_params',
		category = 'Pages containing cite templates with deprecated parameters',
		hidden = true },
	empty_citation = {
		message = 'Empty citation',
		anchor = 'empty_citation',
		category = 'Pages with empty citations',
		hidden = false },
	extra_pages = {
		message = 'Extra &lt;code&gt;&amp;#124;pages=&lt;/code&gt; or &lt;code&gt;&amp;#124;at=&lt;/code&gt;',
		anchor = 'extra_pages',
		category = 'Pages with citations using conflicting page specifications',
		hidden = false },
	format_missing_url = {
		message = '&lt;code&gt;&amp;#124;format=&lt;/code&gt; requires &lt;code&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'format_missing_url',
		category = 'Pages using citations with format and no URL',
		hidden = true },
	implict_etal_author = {
		message = '&lt;code&gt;&amp;#124;displayauthors=&lt;/code&gt; suggested',
		anchor = 'displayauthors',
		category = 'Pages using citations with old-style implicit et al.',
		hidden = true },
	implict_etal_editor = {
		message = '&lt;code&gt;&amp;#124;displayeditors=&lt;/code&gt; suggested',
		anchor = 'displayeditors',
		category = 'Pages using citations with old-style implicit et al. in editors',
		hidden = true },
	parameter_ignored = {
		message = 'Unknown parameter &lt;code&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'parameter_ignored',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	parameter_ignored_suggest = {
		message = 'Unknown parameter &lt;code&gt;&amp;#124;$1=&lt;/code&gt; ignored (&lt;code&gt;&amp;#124;$2=&lt;/code&gt; suggested)',
		anchor = 'parameter_ignored_suggest',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	redundant_parameters = {
		message = 'More than one of $1 specified',
		anchor = 'redundant_parameters',
		category = 'Pages with citations having redundant parameters',
		hidden = false },
	text_ignored = {
		message = 'Text &quot;$1&quot; ignored',
		anchor = 'text_ignored',
		category = 'Pages with citations using unnamed parameters',
		hidden = false },
	trans_missing_chapter = {
		message = '&lt;code&gt;&amp;#124;trans_chapter=&lt;/code&gt; requires &lt;code&gt;&amp;#124;chapter=&lt;/code&gt;',
		anchor = 'trans_missing_chapter',
		category = 'Pages with citations using translated terms without the original',
		hidden = false },
	trans_missing_title = {
		message = '&lt;code&gt;&amp;#124;trans_title=&lt;/code&gt; requires &lt;code&gt;&amp;#124;title=&lt;/code&gt;',
		anchor = 'trans_missing_title',
		category = 'Pages with citations using translated terms without the original',
		hidden = false },
	wikilink_in_url = {
		message = 'Wikilink embedded in URL title',
		anchor = 'wikilink_in_url',
		category = 'Pages with citations having wikilinks embedded in URL titles',
		hidden = false },
}

citation_config.id_handlers = {
    ['ARXIV'] = {
        parameters = {'arxiv', 'ARXIV'}, 
        link = 'arXiv',
        label = 'arXiv',
        mode = 'external',
        prefix = '//arxiv.org/abs/', -- protocol relative tested 2013-09-04
        encode = false,
        COinS = 'info:arxiv',
        separator = ':',
    },
    ['ASIN'] = {
        parameters = { 'asin', 'ASIN' },       
        link = 'Amazon Standard Identification Number',
        label = 'ASIN',
        mode = 'manual',
        COinS = 'info:asin',
        separator = '&amp;nbsp;',
        encode = false;
    },
    ['BIBCODE'] = {
        parameters = {'bibcode', 'BIBCODE'}, 
        link = 'Bibcode',
        label = 'Bibcode',
        mode = 'external',
        prefix = 'http://adsabs.harvard.edu/abs/',
        encode = false,
        COinS = 'info:bibcode',
        separator = ':',
    },
    ['DOI'] = {
        parameters = { 'doi', 'DOI' },
        link = 'Digital object identifier',
        label = 'doi',
        mode = 'manual',
        prefix = 'http://dx.doi.org/',
        COinS = 'info:doi',
        separator = ':',
        encode = true,
    },
    ['ISBN'] = {
        parameters = {'isbn', 'ISBN', 'isbn13', 'ISBN13'}, 
        link = 'International Standard Book Number',
        label = 'ISBN',
        mode = 'manual',
        prefix = 'Special:BookSources/',
        COinS = 'rft.isbn',
        separator = '&amp;nbsp;',
    },
    ['ISSN'] = {
        parameters = {'issn', 'ISSN'}, 
        link = 'International Standard Serial Number',
        label = 'ISSN',
        mode = 'manual',
        prefix = '//www.worldcat.org/issn/',
        COinS = 'rft.issn',
        encode = false,
        separator = '&amp;nbsp;',
    },
    ['JFM'] = {
        parameters = {'jfm', 'JFM'}, 
        link = 'Jahrbuch über die Fortschritte der Mathematik',
        label = 'JFM',
        mode = 'external',
        prefix = 'http://www.zentralblatt-math.org/zmath/en/search/?format=complete&amp;q=an:',
        COinS = 'rft.jfm',
        encode = true,
        separator = '&amp;nbsp;',
    },
    ['JSTOR'] = {
        parameters = {'jstor', 'JSTOR'}, 
        link = 'JSTOR',
        label = 'JSTOR',
        mode = 'external',
        prefix = '//www.jstor.org/stable/', -- protocol relative tested 2013-09-04
        COinS = 'rft.jstor',
        encode = true,
        separator = '&amp;nbsp;',
    },
    ['LCCN'] = {
        parameters = {'LCCN', 'lccn'}, 
        link = 'Library of Congress Control Number',
        label = 'LCCN',
        mode = 'manual',
        prefix = 'http://lccn.loc.gov/',
        COinS = 'rft.lccn',
        encode = false,
        separator = '&amp;nbsp;',
    },
    ['MR'] = {
        parameters = {'MR', 'mr'}, 
        link = 'Mathematical Reviews',
        label = 'MR',
        mode = 'external',
        prefix = '//www.ams.org/mathscinet-getitem?mr=', -- protocol relative tested 2013-09-04
        COinS = 'rft.mr',
        encode = true,
        separator = '&amp;nbsp;',
    },
    ['OCLC'] = {
        parameters = {'OCLC', 'oclc'}, 
        link = 'OCLC',
        label = 'OCLC',
        mode = 'external',
        prefix = '//www.worldcat.org/oclc/',
        COinS = 'info:oclcnum',
        encode = true,
        separator = '&amp;nbsp;',
    },
    ['OL'] = {
        parameters = { 'ol', 'OL' },
        link = 'Open Library',
        label = 'OL',
        mode = 'manual',
        COinS = 'info:olnum',
        separator = '&amp;nbsp;',
        endode = true,
    },
    ['OSTI'] = {
        parameters = {'OSTI', 'osti'}, 
        link = 'Office of Scientific and Technical Information',
        label = 'OSTI',
        mode = 'external',
        prefix = '//www.osti.gov/energycitations/product.biblio.jsp?osti_id=', -- protocol relative tested 2013-09-04
        COinS = 'info:osti',
        encode = true,
        separator = '&amp;nbsp;',
    },
    ['PMC'] = {
        parameters = {'PMC', 'pmc'}, 
        link = 'PubMed Central',
        label = 'PMC',
        mode = 'manual',		-- changed to support unlinking of PMC identifier when article is embargoed
        prefix = '//www.ncbi.nlm.nih.gov/pmc/articles/PMC', 
        suffix = &quot; &quot;,
        COinS = 'info:pmc',
        encode = true,
        separator = '&amp;nbsp;',
    },
    ['PMID'] = {
        parameters = {'PMID', 'pmid'}, 
        link = 'PubMed Identifier',
        label = 'PMID',
        mode = 'manual',		-- changed from external manual to support PMID validation
        prefix = '//www.ncbi.nlm.nih.gov/pubmed/',
        COinS = 'info:pmid',
        encode = false,
        separator = '&amp;nbsp;',
    },
    ['RFC'] = {
        parameters = {'RFC', 'rfc'}, 
        link = 'Request for Comments',
        label = 'RFC',
        mode = 'external',
        prefix = '//tools.ietf.org/html/rfc',
        COinS = 'info:rfc',
        encode = false,
        separator = '&amp;nbsp;',
    },
    ['SSRN'] = {
        parameters = {'SSRN', 'ssrn'}, 
        link = 'Social Science Research Network',
        label = 'SSRN',
        mode = 'external',
        prefix = '//ssrn.com/abstract=', -- protocol relative tested 2013-09-04
        COinS = 'info:ssrn',
        encode = true,
        separator = '&amp;nbsp;',
    },
    ['ZBL'] = {
        parameters = {'ZBL', 'zbl'}, 
        link = 'Zentralblatt MATH',
        label = 'Zbl',
        mode = 'external',
        prefix = 'http://www.zentralblatt-math.org/zmath/en/search/?format=complete&amp;q=an:',
        COinS = 'info:zbl',
        encode = true,
        separator = '&amp;nbsp;',
    }
}

--iso639-1 language codes and names.
citation_config.iso639_1 = {
    [&quot;aa&quot;]  = &quot;Afar&quot;,
    [&quot;ab&quot;]  = &quot;Abkhazian&quot;,
    [&quot;ae&quot;]  = &quot;Avestan&quot;,
    [&quot;af&quot;]  = &quot;Afrikaans&quot;,
    [&quot;ak&quot;]  = &quot;Akan&quot;,
    [&quot;am&quot;]  = &quot;Amharic&quot;,
    [&quot;an&quot;]  = &quot;Aragonese&quot;,
    [&quot;ar&quot;]  = &quot;Arabic&quot;,
    [&quot;as&quot;]  = &quot;Assamese&quot;,
    [&quot;av&quot;]  = &quot;Avaric&quot;,
    [&quot;ay&quot;]  = &quot;Aymara&quot;,
    [&quot;az&quot;]  = &quot;Azerbaijani&quot;,
    [&quot;ba&quot;]  = &quot;Bashkir&quot;,
    [&quot;be&quot;]  = &quot;Belarusian&quot;,
    [&quot;bg&quot;]  = &quot;Bulgarian&quot;,
    [&quot;bh&quot;]  = &quot;Bihari languages&quot;,
    [&quot;bi&quot;]  = &quot;Bislama&quot;,
    [&quot;bm&quot;]  = &quot;Bambara&quot;,
    [&quot;bn&quot;]  = &quot;Bengali&quot;,
    [&quot;bo&quot;]  = &quot;Tibetan&quot;,
    [&quot;br&quot;]  = &quot;Breton&quot;,
    [&quot;bs&quot;]  = &quot;Bosnian&quot;,
    [&quot;ca&quot;]  = &quot;Catalan&quot;,
--  [&quot;ca&quot;]  = &quot;Valencian&quot;,
    [&quot;ce&quot;]  = &quot;Chechen&quot;,
    [&quot;ch&quot;]  = &quot;Chamorro&quot;,
    [&quot;co&quot;]  = &quot;Corsican&quot;,
    [&quot;cr&quot;]  = &quot;Cree&quot;,
    [&quot;cs&quot;]  = &quot;Czech&quot;,
    [&quot;cu&quot;]  = &quot;Church Slavic&quot;,
--  [&quot;cu&quot;]  = &quot;Old Slavonic&quot;,
--  [&quot;cu&quot;]  = &quot;Church Slavonic&quot;,
--  [&quot;cu&quot;]  = &quot;Old Bulgarian&quot;,
--  [&quot;cu&quot;]  = &quot;Old Church Slavonic&quot;,
    [&quot;cv&quot;]  = &quot;Chuvash&quot;,
    [&quot;cy&quot;]  = &quot;Welsh&quot;,
    [&quot;da&quot;]  = &quot;Danish&quot;,
    [&quot;de&quot;]  = &quot;German&quot;,
    [&quot;dv&quot;]  = &quot;Divehi&quot;,
    [&quot;dv&quot;]  = &quot;Dhivehi&quot;,
    [&quot;dv&quot;]  = &quot;Maldivian&quot;,
    [&quot;dz&quot;]  = &quot;Dzongkha&quot;,
    [&quot;ee&quot;]  = &quot;Ewe&quot;,
    [&quot;el&quot;]  = &quot;Modern Greek&quot;,
    [&quot;en&quot;]  = &quot;English&quot;,
    [&quot;eo&quot;]  = &quot;Esperanto&quot;,
    [&quot;es&quot;]  = &quot;Spanish&quot;,
--  [&quot;es&quot;]  = &quot;Castilian&quot;,
    [&quot;et&quot;]  = &quot;Estonian&quot;,
    [&quot;eu&quot;]  = &quot;Basque&quot;,
    [&quot;fa&quot;]  = &quot;Persian&quot;,
    [&quot;ff&quot;]  = &quot;Fulah&quot;,
    [&quot;fi&quot;]  = &quot;Finnish&quot;,
    [&quot;fj&quot;]  = &quot;Fijian&quot;,
    [&quot;fo&quot;]  = &quot;Faroese&quot;,
    [&quot;fr&quot;]  = &quot;French&quot;,
    [&quot;fy&quot;]  = &quot;Western Frisian&quot;,
    [&quot;ga&quot;]  = &quot;Irish&quot;,
--  [&quot;gd&quot;]  = &quot;Gaelic&quot;,
    [&quot;gd&quot;]  = &quot;Scottish Gaelic&quot;,
    [&quot;gl&quot;]  = &quot;Galician&quot;,
    [&quot;gn&quot;]  = &quot;Guarani&quot;,
    [&quot;gu&quot;]  = &quot;Gujarati&quot;,
    [&quot;gv&quot;]  = &quot;Manx&quot;,
    [&quot;ha&quot;]  = &quot;Hausa&quot;,
    [&quot;he&quot;]  = &quot;Hebrew&quot;,
    [&quot;hi&quot;]  = &quot;Hindi&quot;,
    [&quot;ho&quot;]  = &quot;Hiri Motu&quot;,
    [&quot;hr&quot;]  = &quot;Croatian&quot;,
--  [&quot;ht&quot;]  = &quot;Haitian&quot;,
    [&quot;ht&quot;]  = &quot;Haitian Creole&quot;,
    [&quot;hu&quot;]  = &quot;Hungarian&quot;,
    [&quot;hy&quot;]  = &quot;Armenian&quot;,
    [&quot;hz&quot;]  = &quot;Herero&quot;,
    [&quot;ia&quot;]  = &quot;Interlingua&quot;,
    [&quot;id&quot;]  = &quot;Indonesian&quot;,
    [&quot;ie&quot;]  = &quot;Interlingue&quot;,
    [&quot;ie&quot;]  = &quot;Occidental&quot;,
    [&quot;ig&quot;]  = &quot;Igbo&quot;,
--  [&quot;ii&quot;]  = &quot;Sichuan Yi&quot;,
    [&quot;ii&quot;]  = &quot;Nuosu&quot;,
    [&quot;ik&quot;]  = &quot;Inupiaq&quot;,
    [&quot;io&quot;]  = &quot;Ido&quot;,
    [&quot;is&quot;]  = &quot;Icelandic&quot;,
    [&quot;it&quot;]  = &quot;Italian&quot;,
    [&quot;iu&quot;]  = &quot;Inuktitut&quot;,
    [&quot;ja&quot;]  = &quot;Japanese&quot;,
    [&quot;jv&quot;]  = &quot;Javanese&quot;,
    [&quot;ka&quot;]  = &quot;Georgian&quot;,
    [&quot;kg&quot;]  = &quot;Kongo&quot;,
--  [&quot;ki&quot;]  = &quot;Kikuyu&quot;,
    [&quot;ki&quot;]  = &quot;Gikuyu&quot;,
--  [&quot;kj&quot;]  = &quot;Kuanyama&quot;,
    [&quot;kj&quot;]  = &quot;Kwanyama&quot;,
    [&quot;kk&quot;]  = &quot;Kazakh&quot;,
--  [&quot;kl&quot;]  = &quot;Kalaallisut&quot;,
    [&quot;kl&quot;]  = &quot;Greenlandic&quot;,
    [&quot;km&quot;]  = &quot;Central Khmer&quot;,
    [&quot;kn&quot;]  = &quot;Kannada&quot;,
    [&quot;ko&quot;]  = &quot;Korean&quot;,
    [&quot;kr&quot;]  = &quot;Kanuri&quot;,
    [&quot;ks&quot;]  = &quot;Kashmiri&quot;,
    [&quot;ku&quot;]  = &quot;Kurdish&quot;,
    [&quot;kv&quot;]  = &quot;Komi&quot;,
    [&quot;kw&quot;]  = &quot;Cornish&quot;,
--  [&quot;ky&quot;]  = &quot;Kirghiz&quot;,
    [&quot;ky&quot;]  = &quot;Kyrgyz&quot;,
    [&quot;la&quot;]  = &quot;Latin&quot;,
    [&quot;lb&quot;]  = &quot;Luxembourgish&quot;,
--  [&quot;lb&quot;]  = &quot;Letzeburgesch&quot;,
    [&quot;lg&quot;]  = &quot;Ganda&quot;,
--  [&quot;li&quot;]  = &quot;Limburgan&quot;,
--  [&quot;li&quot;]  = &quot;Limburger&quot;,
    [&quot;li&quot;]  = &quot;Limburgish&quot;,
    [&quot;ln&quot;]  = &quot;Lingala&quot;,
    [&quot;lo&quot;]  = &quot;Lao&quot;,
    [&quot;lt&quot;]  = &quot;Lithuanian&quot;,
    [&quot;lu&quot;]  = &quot;Luba-Katanga&quot;,
    [&quot;lv&quot;]  = &quot;Latvian&quot;,
    [&quot;mg&quot;]  = &quot;Malagasy&quot;,
    [&quot;mh&quot;]  = &quot;Marshallese&quot;,
    [&quot;mi&quot;]  = &quot;Maori&quot;,
    [&quot;mk&quot;]  = &quot;Macedonian&quot;,
    [&quot;ml&quot;]  = &quot;Malayalam&quot;,
    [&quot;mn&quot;]  = &quot;Mongolian&quot;,
    [&quot;mr&quot;]  = &quot;Marathi&quot;,
    [&quot;ms&quot;]  = &quot;Malay&quot;,
    [&quot;mt&quot;]  = &quot;Maltese&quot;,
    [&quot;my&quot;]  = &quot;Burmese&quot;,
    [&quot;na&quot;]  = &quot;Nauru&quot;,
    [&quot;nb&quot;]  = &quot;Norwegian Bokmål&quot;,
    [&quot;nd&quot;]  = &quot;North Ndebele&quot;,
    [&quot;ne&quot;]  = &quot;Nepali&quot;,
    [&quot;ng&quot;]  = &quot;Ndonga&quot;,
    [&quot;nl&quot;]  = &quot;Dutch&quot;,
--  [&quot;nl&quot;]  = &quot;Flemish&quot;,
    [&quot;nn&quot;]  = &quot;Norwegian Nynorsk&quot;,
    [&quot;no&quot;]  = &quot;Norwegian&quot;,
    [&quot;nr&quot;]  = &quot;South Ndebele&quot;,
    [&quot;nv&quot;]  = &quot;Navajo&quot;,
--  [&quot;nv&quot;]  = &quot;Navaho&quot;,
--  [&quot;ny&quot;]  = &quot;Chichewa&quot;,
--  [&quot;ny&quot;]  = &quot;Chewa&quot;,
    [&quot;ny&quot;]  = &quot;Nyanja&quot;,
    [&quot;oc&quot;]  = &quot;Occitan&quot;,
    [&quot;oj&quot;]  = &quot;Ojibwa&quot;,
    [&quot;om&quot;]  = &quot;Oromo&quot;,
    [&quot;or&quot;]  = &quot;Oriya&quot;,
    [&quot;os&quot;]  = &quot;Ossetian&quot;,
    [&quot;os&quot;]  = &quot;Ossetic&quot;,
--  [&quot;pa&quot;]  = &quot;Panjabi&quot;,
    [&quot;pa&quot;]  = &quot;Punjabi&quot;,
    [&quot;pi&quot;]  = &quot;Pali&quot;,
    [&quot;pl&quot;]  = &quot;Polish&quot;,
--  [&quot;ps&quot;]  = &quot;Pushto&quot;,
    [&quot;ps&quot;]  = &quot;Pashto&quot;,
    [&quot;pt&quot;]  = &quot;Portuguese&quot;,
    [&quot;qu&quot;]  = &quot;Quechua&quot;,
    [&quot;rm&quot;]  = &quot;Romansh&quot;,
    [&quot;rn&quot;]  = &quot;Rundi&quot;,
    [&quot;ro&quot;]  = &quot;Romanian&quot;,
--  [&quot;ro&quot;]  = &quot;Moldavian&quot;,
--  [&quot;ro&quot;]  = &quot;Moldovan&quot;,
    [&quot;ru&quot;]  = &quot;Russian&quot;,
    [&quot;rw&quot;]  = &quot;Kinyarwanda&quot;,
    [&quot;sa&quot;]  = &quot;Sanskrit&quot;,
    [&quot;sc&quot;]  = &quot;Sardinian&quot;,
    [&quot;sd&quot;]  = &quot;Sindhi&quot;,
    [&quot;se&quot;]  = &quot;Northern Sami&quot;,
    [&quot;sg&quot;]  = &quot;Sango&quot;,
    [&quot;si&quot;]  = &quot;Sinhala&quot;,
--  [&quot;si&quot;]  = &quot;Sinhalese&quot;,
    [&quot;sk&quot;]  = &quot;Slovak&quot;,
    [&quot;sl&quot;]  = &quot;Slovenian&quot;,
    [&quot;sm&quot;]  = &quot;Samoan&quot;,
    [&quot;sn&quot;]  = &quot;Shona&quot;,
    [&quot;so&quot;]  = &quot;Somali&quot;,
    [&quot;sq&quot;]  = &quot;Albanian&quot;,
    [&quot;sr&quot;]  = &quot;Serbian&quot;,
    [&quot;ss&quot;]  = &quot;Swati&quot;,
    [&quot;st&quot;]  = &quot;Southern Sotho&quot;,
    [&quot;su&quot;]  = &quot;Sundanese&quot;,
    [&quot;sv&quot;]  = &quot;Swedish&quot;,
    [&quot;sw&quot;]  = &quot;Swahili&quot;,
    [&quot;ta&quot;]  = &quot;Tamil&quot;,
    [&quot;te&quot;]  = &quot;Telugu&quot;,
    [&quot;tg&quot;]  = &quot;Tajik&quot;,
    [&quot;th&quot;]  = &quot;Thai&quot;,
    [&quot;ti&quot;]  = &quot;Tigrinya&quot;,
    [&quot;tk&quot;]  = &quot;Turkmen&quot;,
    [&quot;tl&quot;]  = &quot;Tagalog&quot;,
    [&quot;tn&quot;]  = &quot;Tswana&quot;,
    [&quot;to&quot;]  = &quot;Tonga (Tonga Islands)&quot;,
    [&quot;tr&quot;]  = &quot;Turkish&quot;,
    [&quot;ts&quot;]  = &quot;Tsonga&quot;,
    [&quot;tt&quot;]  = &quot;Tatar&quot;,
    [&quot;tw&quot;]  = &quot;Twi&quot;,
    [&quot;ty&quot;]  = &quot;Tahitian&quot;,
--  [&quot;ug&quot;]  = &quot;Uighur&quot;,
    [&quot;ug&quot;]  = &quot;Uyghur&quot;,
    [&quot;uk&quot;]  = &quot;Ukrainian&quot;,
    [&quot;ur&quot;]  = &quot;Urdu&quot;,
    [&quot;uz&quot;]  = &quot;Uzbek&quot;,
    [&quot;ve&quot;]  = &quot;Venda&quot;,
    [&quot;vi&quot;]  = &quot;Vietnamese&quot;,
    [&quot;vo&quot;]  = &quot;Volapük&quot;,
    [&quot;wa&quot;]  = &quot;Walloon&quot;,
    [&quot;wo&quot;]  = &quot;Wolof&quot;,
    [&quot;xh&quot;]  = &quot;Xhosa&quot;,
    [&quot;yi&quot;]  = &quot;Yiddish&quot;,
    [&quot;yo&quot;]  = &quot;Yoruba&quot;,
    [&quot;za&quot;]  = &quot;Zhuang&quot;,
--  [&quot;za&quot;]  = &quot;Chuang&quot;,
    [&quot;zh&quot;]  = &quot;Chinese&quot;,
    [&quot;zu&quot;]  = &quot;Zulu&quot;,
}
return citation_config;</text>
      <sha1>g3exjxd6p1xz7h03m38jsltzor7w9qv</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Date validation</title>
    <ns>828</ns>
    <id>42164542</id>
    <revision>
      <id>601950529</id>
      <parentid>598992652</parentid>
      <timestamp>2014-03-30T12:22:02Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Synch from sandbox;</comment>
      <text xml:space="preserve" bytes="17659">
local p = {}

-- returns a number according to the month in a date: 1 for January, etc.  Capitalization and spelling must be correct. If not a valid month, returns 0
function get_month_number (month)
local long_months = {['January']=1, ['February']=2, ['March']=3, ['April']=4, ['May']=5, ['June']=6, ['July']=7, ['August']=8, ['September']=9, ['October']=10, ['November']=11, ['December']=12};
local short_months = {['Jan']=1, ['Feb']=2, ['Mar']=3, ['Apr']=4, ['May']=5, ['Jun']=6, ['Jul']=7, ['Aug']=8, ['Sep']=9, ['Oct']=10, ['Nov']=11, ['Dec']=12};
local temp;
	temp=long_months[month];
	if temp then return temp; end				-- if month is the long-form name
	temp=short_months[month];
	if temp then return temp; end				-- if month is the short-form name
	return 0;									-- misspelled, improper case, or not a month name
end

-- returns a number according to the sequence of seasons in a year: 1 for Winter, etc.  Capitalization and spelling must be correct. If not a valid season, returns 0
function get_season_number (season)
local season_list = {['Winter']=1, ['Spring']=2, ['Summer']=3, ['Fall']=4, ['Autumn']=4}
local temp;
	temp=season_list[season];
	if temp then return temp; end				-- if season is a valid name return its number
	return 0;									-- misspelled, improper case, or not a season name
end

--returns true if month or season is valid (properly spelled, capitalized, abbreviated)
function is_valid_month_or_season (month_season)
	if 0 == get_month_number (month_season) then		-- if month text isn't one of the twelve months, might be a season
		if 0 == get_season_number (month_season) then	-- not a month, is it a season?
			return false;								-- return false not a month or one of the five seasons
		end
	end
	return true;
end


-- Function gets current year from the server and compares it to year from a citation parameter.  Years more than one year in the future are not acceptable.
function is_valid_year(year)
	if not is_set(year_limit) then
		year_limit = tonumber(os.date(&quot;%Y&quot;))+1;	-- global variable so we only have to fetch it once (os.date(&quot;Y&quot;) no longer works?)
	end
	return tonumber(year) &lt;= year_limit;			-- false if year is in the future more than one year
end

--[[
Returns true if day is less than or equal to the number of days in month and year is no farther into the future than next year; else returns false.

Assumes Julian calendar prior to year 1582 and Gregorian calendar thereafter. Accounts for Julian calendar leap years before 1582 and Gregorian leap years after 1582.
Where the two calendars overlap (1582 to approximately 1923) dates are assumed to be Gregorian.
]]
function is_valid_date (year, month, day)
local days_in_month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
local month_length;
	if not is_valid_year(year) then	-- no farther into the future than next year
		return false;
	end
	
	if (2==month) then							-- if February
		month_length = 28;						-- then 28 days unless
		if 1582 &gt; tonumber(year) then			-- Julian calendar
			if 0==(year%4) then
				month_length = 29;
			end
		else									-- Gregorian calendar
			if (0==(year%4) and (0~=(year%100) or 0==(year%400))) then	-- is a leap year?
				month_length = 29;				-- if leap year then 29 days in February
			end
		end
	else
		month_length=days_in_month[month];
	end

	if tonumber (day) &gt; month_length then
		return false;
	end
	return true;
end

--[[
Check a pair of months or seasons to see if both are valid members of a month or season pair.

Month pairs are expected to be left to right, earliest to latest in time.  Similarly, seasons are also left to right, earliest to latest in time.  There is
an oddity with seasons.  Winter is assigned a value of 1, spring 2, ..., fall and autumn 4.  Because winter can follow fall/autumn at the end of a calender year, a special test
is made to see if |date=Fall-Winter yyyy (4-1) is the date.
]]

function is_valid_month_season_range(range_start, range_end)
	local range_start_number = get_month_number (range_start);
	
	if 0 == range_start_number then								-- is this a month range?
		local range_start_number = get_season_number (range_start);		-- not a month; is it a season? get start season number
		local range_end_number = get_season_number (range_end);			-- get end season number

		if 0 ~= range_start_number then							-- is start of range a season?
			if range_start_number &lt; range_end_number then		-- range_start is a season
				return true;									-- return true when range_end is also a season and follows start season; else false
			end
			if 4 == range_start_number and 1 == range_end_number then	-- special case when range is Fall-Winter or Autumn-Winter
				return true;
			end
		end
		return false;		-- range_start is not a month or a season; or range_start is a season and range_end is not; or improper season sequence
	end

	local range_end_number = get_month_number (range_end);		-- get end month number
	if range_start_number &lt; range_end_number then				-- range_start is a month; does range_start precede range_end?
		return true;											-- if yes, return true
	end
	return false;												-- range_start month number is greater than or equal to range end number; or range end isn't a month
end

--[[
Check date format to see that it is one of the formats approved by WP:DATESNO or WP:DATERANGE. Exception: only allowed range separator is endash.
Additionally, check the date to see that it is a real date: no 31 in 30-day months; no 29 February when not a leap year.  Months, both long-form and three
character abbreviations, and seasons must be spelled correctly. Future years beyond next year are not allowed.

If the date fails the fomat tests, this function returns false and does not return values for anchor_year and COinS_date.  When this happens, the date parameter is
used in the COinS metadata and the CITEREF identifier gets its year from the year parameter if present otherwise CITEREF does not get a date value.

Inputs:
	date_string - date string from date-holding parameters (date, year, accessdate, embargo, archivedate, etc)

Returns:
	false if date string is not a real date; else
	true, anchor_year, COinS_date
		anchor_year can be used in CITEREF anchors
		COinS_date is date_string without anchor_year disambiguator if any
]]
function check_date (date_string)
	local year;			-- assume that year2, months, and days are not used;
	local year2=0;		-- second year in a year range
	local month=0;
	local month2=0;		-- second month in a month range
	local day=0;
	local day2=0;		-- second day in a day range
	local anchor_year;
	local coins_date;

	if date_string:match(&quot;^%d%d%d%d%-%d%d%-%d%d$&quot;) then										-- year-initial numerical year month day format
		year, month, day=string.match(date_string, &quot;(%d%d%d%d)%-(%d%d)%-(%d%d)&quot;);
		month=tonumber(month);
		if 12 &lt; month or 1 &gt; month or 1583 &gt; tonumber(year) then return false; end			-- month number not valid or not Gregorian calendar
		anchor_year = year;

	elseif date_string:match(&quot;^%a+ +[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then						-- month-initial: month day, year
		month, day, anchor_year, year=string.match(date_string, &quot;(%a+)%s*(%d%d?),%s*((%d%d%d%d)%a?)&quot;);
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
				
	elseif date_string:match(&quot;^%a+ +[1-9]%d?–[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then				-- month-initial day range: month day–day, year; days are separated by endash
		month, day, day2, anchor_year, year=string.match(date_string, &quot;(%a+) +(%d%d?)–(%d%d?), +((%d%d%d%d)%a?)&quot;);
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months

	elseif date_string:match(&quot;^[1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then						-- day-initial: day month year
		day, month, anchor_year, year=string.match(date_string, &quot;(%d%d*)%s*(%a+)%s*((%d%d%d%d)%a?)&quot;);
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months

	elseif date_string:match(&quot;^[1-9]%d?–[1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then				-- day-range-initial: day–day month year; days are separated by endash
		day, day2, month, anchor_year, year=string.match(date_string, &quot;(%d%d?)–(%d%d?) +(%a+) +((%d%d%d%d)%a?)&quot;);
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months

	elseif date_string:match(&quot;^[1-9]%d? +%a+ – [1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then		-- day initial month-day-range: day month - day month year; uses spaced endash
		day, month, day2, month2, anchor_year, year=date_string:match(&quot;(%d%d?) +(%a+) – (%d%d?) +(%a+) +((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end	-- date range order is left to right: earlier to later;
		month = get_month_number (month);
		month2 = get_month_number (month2);

	elseif date_string:match(&quot;^%a+ +[1-9]%d? – %a+ +[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then		-- month initial month-day-range: month day – month day, year;  uses spaced endash
		month, day, month2, day2, anchor_year, year=date_string:match(&quot;(%a+) +(%d%d?) – (%a+) +(%d%d?), +((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end
		month = get_month_number (month);
		month2 = get_month_number (month2);

	elseif date_string:match(&quot;^Winter +[1-9]%d%d%d–[1-9]%d%d%d%a?$&quot;) then					-- special case Winter year-year; year separated with unspaced endash
		year, anchor_year, year2=date_string:match(&quot;Winter +(%d%d%d%d)–((%d%d%d%d)%a?)&quot;);
		anchor_year=year..'–'..anchor_year;													-- assemble anchor_year from both years
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year

	elseif date_string:match(&quot;^%a+ +[1-9]%d%d%d% – %a+ +[1-9]%d%d%d%a?$&quot;) then				-- month/season year - month/season year; separated by spaced endash
		month, year, month2, anchor_year, year2=date_string:match(&quot;(%a+) +(%d%d%d%d) – (%a+) +((%d%d%d%d)%a?)&quot;);
		anchor_year=year..'–'..anchor_year;													-- assemble anchor_year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end							-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		if not((0 ~= get_month_number(month) and 0 ~= get_month_number(month2)) or 			-- both must be month year or season year, not mixed
			(0 ~= get_season_number(month) and 0 ~= get_season_number(month2))) then return false; end

	elseif date_string:match (&quot;^%a+–%a+ +[1-9]%d%d%d%a?$&quot;) then								-- month/season range year; months separated by endash 
		month, month2, anchor_year, year=date_string:match (&quot;(%a+)–(%a+)%s*((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or (not is_valid_year(year)) then
			return false;
		end
		
	elseif date_string:match(&quot;^%a+ +%d%d%d%d%a?$&quot;) then							-- month/season year
		month, anchor_year, year=date_string:match(&quot;(%a+)%s*((%d%d%d%d)%a?)&quot;);
		if not is_valid_year(year) then return false; end
		if not is_valid_month_or_season (month) then return false; end

	elseif date_string:match(&quot;^[1-9]%d%d%d?–[1-9]%d%d%d?%a?$&quot;) then				-- Year range: YYY-YYY or YYY-YYYY or YYYY–YYYY; separated by unspaced endash; 100-9999
		year, anchor_year, year2=date_string:match(&quot;(%d%d%d%d?)–((%d%d%d%d?)%a?)&quot;);
		anchor_year=year..'–'..anchor_year;										-- assemble anchor year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif date_string:match(&quot;^[1-9]%d%d%d–%d%d%a?$&quot;) then						-- Year range: YYYY–YY; separated by unspaced endash
		local century;
		year, century, anchor_year, year2=date_string:match(&quot;((%d%d)%d%d)–((%d%d)%a?)&quot;);
		anchor_year=year..'–'..anchor_year;										-- assemble anchor year from both years
		if 13 &gt; tonumber(year2) then return false; end							-- don't allow 2003-05 which might be May 2003
		year2 = century..year2;													-- add the century to year2 for comparisons
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif date_string:match(&quot;^[1-9]%d%d%d?%a?$&quot;) then							-- year; here accept either YYY or YYYY
		anchor_year, year=date_string:match(&quot;((%d%d%d%d?)%a?)&quot;);
		if false == is_valid_year(year) then
			return false;
		end

	else
		return false;											-- date format not one of the MOS:DATE approved formats
	end

	local result=true;											-- check whole dates for validity; assume true because not all dates will go through this test
	if 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 == day2 then		-- YMD (simple whole date)
		result=is_valid_date(year,month,day);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 ~= day2 then	-- YMD-d (day range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-md (day month range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month2,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 ~= year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-ymd (day month year range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year2,month2,day2);
	end
	
	if false == result then return false; end
																-- if here, then date_string is valid; get coins_date from date_string (leave CITEREF disambiguator) ...
	coins_date=date_string:match(&quot;^(.+%d)%a?$&quot;);				-- last character of valid disambiguatable date is always a digit
	coins_date= mw.ustring.gsub(coins_date, &quot;–&quot;, &quot;-&quot; );			-- ... and replace any ndash with a hyphen
	
	return true, anchor_year, coins_date;						-- format is good and date string represents a real date
end	

--[[
Cycle the date-holding parameters in passed table date_parameters_list through check_date() to check compliance with MOS:DATE. For all valid dates, check_date() returns
true. The |date= parameter test is unique, it is the only date holding parameter from which values for anchor_year (used in CITEREF identifiers) and COinS_date (used in
the COinS metadata) are derived.  The |date= parameter is the only date-holding parameter that is allowed to contain the no-date keywords &quot;n.d.&quot; or &quot;nd&quot; (without quotes).

Unlike most error messages created in this module, only one error message is created by this function. Because all of the date holding parameters are processed serially,
a single error message is created as the dates are tested.
]]

function p.dates(date_parameters_list)
	local anchor_year;		-- will return as nil if the date being tested is not |date=
	local COinS_date;		-- will return as nil if the date being tested is not |date=
	local error_message =&quot;&quot;;
	local good_date=false;
	
	for k, v in pairs(date_parameters_list) do										-- for each date-holding parameter in the list
		if is_set(v) then															-- if the parameter has a value
			if v:match(&quot;^c%. [1-9]%d%d%d?%a?$&quot;) then								-- special case for c. year or with or without CITEREF disambiguator - only |date= and |year=
				local year = v:match(&quot;c%. ([1-9]%d%d%d?)%a?&quot;);						-- get the year portion so it can be tested
				if 'date'==k then
					anchor_year, COinS_date = v:match(&quot;((c%. [1-9]%d%d%d?)%a?)&quot;);	-- anchor year and COinS_date only from |date= parameter
					good_date = is_valid_year(year);
				elseif 'year'==k then
					good_date = is_valid_year(year);
				end
			elseif 'date'==k then													-- if the parameter is |date=
				if v:match(&quot;n%.d%.%a?&quot;) then										-- if |date=n.d. with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((n%.d%.)%a?)&quot;);	--&quot;n.d.&quot;; no error when date parameter is set to no date
				elseif v:match(&quot;nd%a?$&quot;) then										-- if |date=nd with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((nd)%a?)&quot;);	--&quot;nd&quot;;	no error when date parameter is set to no date
				else
					good_date, anchor_year, COinS_date = check_date (v);			-- go test the date
				end
			else																	-- any other date-holding parameter
				good_date = check_date (v);											-- go test the date
			end
			if false==good_date then												-- assemble one error message so we don't add the tracking category multiple times
				if is_set(error_message) then										-- once we've added the first portion of the error message ...
					error_message=error_message .. &quot;, &quot;;							-- ... add a comma space separator
				end
				error_message=error_message .. &quot;&amp;#124;&quot; .. k .. &quot;=&quot;;				-- add the failed parameter
			end
		end
	end

	return anchor_year, COinS_date, error_message;		-- and done
end

return p;</text>
      <sha1>jegwhfcwt416y3s3k7d602df7yqkbtr</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Whitelist</title>
    <ns>828</ns>
    <id>39013723</id>
    <revision>
      <id>601950653</id>
      <parentid>595573172</parentid>
      <timestamp>2014-03-30T12:23:27Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Synch from sandbox;</comment>
      <text xml:space="preserve" bytes="7825">--[[
Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items now can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
]]
whitelist = {

basic_arguments = {
    ['accessdate'] = true,
    ['agency'] = true,
    ['airdate'] = true,
    ['albumlink'] = false,			-- deprecated; set to nil after 1 October 2014; a unique alias of titlelink used by old cite AV media notes
    ['albumtype'] = nil,			-- controled inappropriate functionality in the old cite AV media notes
    ['archivedate'] = true,
    ['archive-date'] = true,
    ['archiveurl'] = true,
    ['archive-url'] = true,
    ['article'] = true,
    ['artist'] = false,				-- deprecated; set to nil after 1 October 2014; a unique alias of others used by old cite AV media notes
    ['arxiv'] = true,
    ['ARXIV'] = true,
    ['asin'] = true,
    ['ASIN'] = true,
    ['asin-tld'] = true,
    ['ASIN-TLD'] = true,
    ['at'] = true,
    ['author'] = true,
    ['Author'] = true,
    ['author-first'] = true,
    ['authorformat'] = true,
    ['author-format'] = true,
    ['author-last'] = true,
    ['authorlink'] = true,
    ['author-link'] = true,
    ['authormask'] = true,
    ['author-mask'] = true,
    ['author-name-separator'] = true,
    ['authors'] = true,
    ['author-separator'] = true,
    ['bibcode'] = true,
    ['BIBCODE'] = true,
    ['booktitle'] = true,
	['callsign']=true,					-- cite interview
    ['cartography'] = true,
    ['chapter'] = true,
    ['chapterlink'] = true,
    ['chapterurl'] = true,
    ['chapter-url'] = true,
	['city']=true,						-- cite interview
    ['coauthor'] = false,
    ['coauthors'] = false,
    ['cointerviewers'] = false,			-- cite interview
    ['conference'] = true,
    ['conferenceurl'] = true,
    ['conference-url'] = true,
    ['contribution'] = true,
    ['contributionurl'] = true,
    ['contribution-url'] = true,
    ['date'] = true,
    ['day'] = false,
    ['deadurl'] = true,
    ['degree'] = true,
    ['department'] = true,
    ['dictionary'] = true,
    ['director'] = false,				-- deprecated; set to nil after 1 October 2014; a unique alias of author used by old cite DVD-notes
    ['displayauthors'] = true,
    ['display-authors'] = true,
    ['displayeditors'] = true,
    ['display-editors'] = true,
    ['docket'] = true,
    ['doi'] = true,
    ['DOI'] = true,
    ['DoiBroken'] = true,
    ['doi_brokendate'] = true,
    ['doi_inactivedate'] = true,
    ['edition'] = true,
    ['editor'] = true,
    ['Editor'] = true,
    ['editor-first'] = true,
    ['editorformat'] = true,
    ['editor-format'] = true,
    ['EditorGiven'] = true,
    ['editor-last'] = true,
    ['editorlink'] = true,
    ['editor-link'] = true,
    ['editormask'] = true,
    ['editor-mask'] = true,
    ['editor-name-separator'] = true,
    ['editors'] = true,
    ['editor-separator'] = true,
    ['EditorSurname'] = true,
    ['embargo'] = true,
    ['Embargo'] = true,
    ['encyclopaedia'] = true,
    ['encyclopedia'] = true,
    ['entry'] = true,
    ['episodelink'] = true,
    ['event'] = true,
    ['eventurl'] = true,
    ['first'] = true,
    ['format'] = true,
    ['given'] = true,
    ['host'] = true,
    ['id'] = true,
    ['ID'] = true,
    ['ignoreisbnerror'] = true,
    ['ignore-isbn-error'] = true,
    ['in'] = true,
    ['inset'] = true,
    ['institution'] = true,
	['interviewer'] = true,					--cite interview
    ['isbn'] = true,
    ['ISBN'] = true,
    ['isbn13'] = true,
    ['ISBN13'] = true,
    ['issn'] = true,
    ['ISSN'] = true,
    ['issue'] = true,
    ['jfm'] = true,
    ['JFM'] = true,
    ['journal'] = true,
    ['jstor'] = true,
    ['JSTOR'] = true,
    ['language'] = true,
    ['last'] = true,
    ['lastauthoramp'] = true,
    ['laydate'] = true,
    ['laysource'] = true,
    ['laysummary'] = true,
    ['layurl'] = true,
    ['lccn'] = true,
    ['LCCN'] = true,
    ['location'] = true,
    ['magazine'] = true,
    ['medium'] = true,
    ['minutes'] = true,
    ['month'] = false,
    ['mr'] = true,
    ['MR'] = true,
    ['name-separator'] = true,
    ['network'] = true,
    ['newspaper'] = true,
    ['nocat'] = true,
    ['nopp'] = true,
    ['notestitle'] = false,					-- deprecated; set to nil after 1 October 2014; a unique alias of chapter used by old cite AV media notes
    ['notracking'] = true,
    ['no-tracking'] = true,
    ['number'] = true,
    ['oclc'] = true,
    ['OCLC'] = true,
    ['ol'] = true,
    ['OL'] = true,
    ['origyear'] = true,
    ['osti'] = true,
    ['OSTI'] = true,
    ['others'] = true,
    ['p'] = true,
    ['page'] = true,
    ['pages'] = true,
    ['people'] = true,
    ['periodical'] = true,
    ['place'] = true,
    ['pmc'] = true,
    ['PMC'] = true,
    ['pmid'] = true,
    ['PMID'] = true,
    ['postscript'] = true,
    ['pp'] = true,
    ['PPPrefix'] = true,
    ['PPrefix'] = true,
	['program']=true,				-- cite interview
    ['publicationdate'] = true,
    ['publication-date'] = true,
    ['publicationplace'] = true,
    ['publication-place'] = true,
    ['publisher'] = true,
    ['publisherid'] = false,			-- deprecated; set to nil after 1 October 2014; a unique alias of others used by old cite AV media notes and old cite DVD-notes
    ['quotation'] = true,
    ['quote'] = true,
    ['ref'] = true,
    ['Ref'] = true,
    ['registration'] = true,
    ['rfc'] = true,
    ['RFC'] = true,
    ['scale'] = true,
    ['season'] = true,
    ['section'] = true,
    ['sectionurl'] = true,
    ['separator'] = true,
    ['series'] = true,
    ['serieslink'] = true,
    ['seriesno'] = true,
    ['seriesnumber'] = true,
    ['series-separator'] = true,
    ['ssrn'] = true,
    ['SSRN'] = true,
    ['station'] = true,
    ['subject'] = true,
    ['subjectlink'] = true,
    ['subscription'] = true,
    ['surname'] = true,
    ['template doc demo'] = true,
    ['time'] = true,
    ['timecaption'] = true,
    ['title'] = true,
    ['titlelink'] = true,
    ['titleyear'] = false,			-- deprecated; set to nil after 1 October 2014; a unique alias of origyear used by old cite DVD-notes
    ['trans_chapter'] = true,
    ['trans-chapter'] = true,
    ['transcript'] = true,
    ['transcripturl'] = true,
    ['transcript-url'] = true,
    ['trans_title'] = true,
    ['trans-title'] = true,
    ['type'] = true,
    ['url'] = true,
    ['URL'] = true,
    ['version'] = true,
    ['via'] = true,
    ['volume'] = true,
    ['website'] = true,
    ['work'] = true,
    ['year'] = true,
    ['zbl'] = true,
    ['ZBL'] = true,
},

numbered_arguments = {
    ['author#'] = true,
    ['Author#'] = true,
    ['author-first#'] = true,
    ['author#-first'] = true,
    ['author-last#'] = true,
    ['author#-last'] = true,
    ['author-link#'] = true,
    ['author#link'] = true,
    ['author#-link'] = true,
    ['authorlink#'] = true,
    ['author-mask#'] = true,
    ['author#mask'] = true,
    ['author#-mask'] = true,
    ['authormask#'] = true,
    ['authors#'] = true,
    ['editor#'] = true,
    ['Editor#'] = true,
    ['editor-first#'] = true,
    ['editor#-first'] = true,
    ['EditorGiven#'] = true,
    ['editor-last#'] = true,
    ['editor#-last'] = true,
    ['editor-link#'] = true,
    ['editor#link'] = true,
    ['editor#-link'] = true,
    ['editorlink#'] = true,
    ['editor-mask#'] = true,
    ['editor#mask'] = true,
    ['editor#-mask'] = true,
    ['editormask#'] = true,
    ['editors#'] = true,
    ['EditorSurname#'] = true,
    ['first#'] = true,
    ['given#'] = true,
    ['last#'] = true,
    ['subject#'] = true,
    ['subjectlink#'] = true,
    ['surname#'] = true,
},
};

return whitelist;</text>
      <sha1>ldmr4vlsj7vuemb2tn270w979hxwp7o</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:HtmlBuilder</title>
    <ns>828</ns>
    <id>38663961</id>
    <revision>
      <id>573509786</id>
      <parentid>558894130</parentid>
      <timestamp>2013-09-18T15:22:39Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>don't add attributes with no values, plus a couple of minor tweaks</comment>
      <text xml:space="preserve" bytes="4278">-- Module for building complex HTML (e.g. infoboxes, navboxes) using a fluent interface.

local HtmlBuilder = {}

local metatable = {}

metatable.__index = function(t, key)
    local ret = rawget(t, key)
    if ret then
        return ret
    end
    
    ret = metatable[key]
    if type(ret) == 'function' then
        return function(...) 
            return ret(t, ...) 
        end 
    else
        return ret
    end
end

metatable.__tostring = function(t)
    local ret = {}
    t._build(ret)
    return table.concat(ret)
end

metatable._build = function(t, ret)
    if t.tagName then 
        table.insert(ret, '&lt;' .. t.tagName)
        for i, attr in ipairs(t.attributes) do
            table.insert(ret, ' ' .. attr.name .. '=&quot;' .. attr.val .. '&quot;') 
        end
        if #t.styles &gt; 0 then
            table.insert(ret, ' style=&quot;')
            for i, prop in ipairs(t.styles) do
                if type(prop) == 'string' then -- added with cssText()
                    table.insert(ret, prop .. ';')
                else -- added with css()
                    table.insert(ret, prop.name .. ':' .. prop.val .. ';')
                end
            end
            table.insert(ret, '&quot;')
        end
        if t.selfClosing then
            table.insert(ret, ' /')
        end
        table.insert(ret, '&gt;') 
    end
    for i, node in ipairs(t.nodes) do
        if node then
            if type(node) == 'table' then
                node._build(ret)
            else
                table.insert(ret, tostring(node))
            end
        end
    end
    if t.tagName and not t.unclosed and not t.selfClosing then
        table.insert(ret, '&lt;/' .. t.tagName .. '&gt;')
    end
end

metatable.node = function(t, builder)
    if builder then
        table.insert(t.nodes, builder)
    end
    return t
end

metatable.wikitext = function(t, ...) 
    local vals = {...}
    for i = 1, #vals do
        if vals[i] then
            table.insert(t.nodes, vals[i])
        end
    end
    return t
end

metatable.newline = function(t)
    table.insert(t.nodes, '\n')
    return t
end

metatable.tag = function(t, tagName, args)
    args = args or {}
    args.parent = t
    local builder = HtmlBuilder.create(tagName, args)
    table.insert(t.nodes, builder)
    return builder
end

local function getAttr(t, name)
    for i, attr in ipairs(t.attributes) do
        if attr.name == name then
            return attr
        end
    end
end

metatable.attr = function(t, name, val)
    if type(val) == 'string' or type(val) == 'number' then
        -- if caller sets the style attribute explicitly, then replace all styles previously added with css() and cssText()
        if name == 'style' then
            t.styles = {val}
            return t
        end
        
        local attr = getAttr(t, name)
        if attr then
            attr.val = val
        else
            table.insert(t.attributes, {name = name, val = val})
        end
    end
    
    return t
end

metatable.addClass = function(t, class)
    if class then
        local attr = getAttr(t, 'class')
        if attr then
            attr.val = attr.val .. ' ' .. class
        else
            t.attr('class', class)
        end
    end
    
    return t
end

metatable.css = function(t, name, val)
    if type(val) == 'string' or type(val) == 'number' then
        for i, prop in ipairs(t.styles) do
            if prop.name == name then
                prop.val = val
                return t
            end
        end
        
        table.insert(t.styles, {name = name, val = val})
    end
    
    return t
end

metatable.cssText = function(t, css)
    if css then
        table.insert(t.styles, css)
    end
    return t
end

metatable.done = function(t)
    return t.parent or t
end

metatable.allDone = function(t)
    while t.parent do
        t = t.parent
    end
    return t
end

function HtmlBuilder.create(tagName, args)
    args = args or {}
    local builder = {}
    setmetatable(builder, metatable)
    builder.nodes = {}
    builder.attributes = {}
    builder.styles = {}
    builder.tagName = tagName
    builder.parent = args.parent
    builder.unclosed = args.unclosed or false
    builder.selfClosing = args.selfClosing or false
    return builder
end

return HtmlBuilder</text>
      <sha1>ait58gp3hn4i3oyevj1ucebrzvyok1o</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Message box</title>
    <ns>828</ns>
    <id>40574910</id>
    <revision>
      <id>603256010</id>
      <parentid>596626111</parentid>
      <timestamp>2014-04-08T04:39:12Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>Allow passing attributes per protected edit request by [[User:Jackmcbarn]]. Also remove undocumented &quot;hidden&quot; parameter and format the module so it mostly fits within 80 chars.</comment>
      <text xml:space="preserve" bytes="17898">-- This is a meta-module for producing message box templates, including
-- {{mbox}}, {{ambox}}, {{imbox}}, {{tmbox}}, {{ombox}}, {{cmbox}} and {{fmbox}}.

-- Require necessary modules.
local getArgs = require('Module:Arguments').getArgs
local htmlBuilder = require('Module:HtmlBuilder')
local categoryHandler = require('Module:Category handler').main
local yesno = require('Module:Yesno')

-- Load the configuration page.
local cfgTables = mw.loadData('Module:Message box/configuration')

-- Get a language object for formatDate and ucfirst.
local lang = mw.language.getContentLanguage()

-- Set aliases for often-used functions to reduce table lookups.
local format = mw.ustring.format
local tinsert = table.insert
local tconcat = table.concat
local trim = mw.text.trim

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getTitleObject(page, ...)
	if type(page) == 'string' then
		-- Get the title object, passing the function through pcall 
		-- in case we are over the expensive function count limit.
		local success, title = pcall(mw.title.new, page, ...)
		if success then
			return title
		end
	end
end

local function union(t1, t2)
	-- Returns the union of two arrays.
	local vals = {}
	for i, v in ipairs(t1) do
		vals[v] = true
	end
	for i, v in ipairs(t2) do
		vals[v] = true
	end
	local ret = {}
	for k in pairs(vals) do
		tinsert(ret, k)
	end
	table.sort(ret)
	return ret
end

local function getArgNums(args, prefix)
	local nums = {}
	for k, v in pairs(args) do
		local num = mw.ustring.match(tostring(k), '^' .. prefix .. '([1-9]%d*)$')
		if num then
			tinsert(nums, tonumber(num))
		end
	end
	table.sort(nums)
	return nums
end

--------------------------------------------------------------------------------
-- Box class definition
--------------------------------------------------------------------------------

local box = {}
box.__index = box

function box.new()
	local obj = {}
	setmetatable(obj, box)
	return obj
end

function box.getNamespaceId(ns)
	if not ns then return end
	if type(ns) == 'string' then
		ns = lang:ucfirst(mw.ustring.lower(ns))
		if ns == 'Main' then
			ns = 0
		end
	end
	local nsTable = mw.site.namespaces[ns]
	if nsTable then
		return nsTable.id
	end
end

function box.getMboxType(nsid)
	-- Gets the mbox type from a namespace number.
	if nsid == 0 then
		return 'ambox' -- main namespace
	elseif nsid == 6 then
		return 'imbox' -- file namespace
	elseif nsid == 14 then
		return 'cmbox' -- category namespace
	else
		local nsTable = mw.site.namespaces[nsid]
		if nsTable and nsTable.isTalk then
			return 'tmbox' -- any talk namespace
		else
			return 'ombox' -- other namespaces or invalid input
		end
	end
end

function box:addCat(ns, cat, sort)
	if type(cat) ~= 'string' then return end
	local nsVals = {'main', 'template', 'all'}
	local tname
	for i, val in ipairs(nsVals) do
		if ns == val then
			tname = ns .. 'Cats'
		end
	end
	if not tname then
		for i, val in ipairs(nsVals) do
			nsVals[i] = format('&quot;%s&quot;', val)
		end
		error(
			'invalid ns parameter passed to box:addCat; valid values are '
			.. mw.text.listToText(nsVals, nil, ' or ')
		)
	end
	self[tname] = self[tname] or {}
	if type(sort) == 'string' then
		tinsert(self[tname], format('[[Category:%s|%s]]', cat, sort))
	else
		tinsert(self[tname], format('[[Category:%s]]', cat))
	end
end

function box:addClass(class)
	if type(class) ~= 'string' then return end
	self.classes = self.classes or {}
	tinsert(self.classes, class)
end

function box:addAttr(attr, val)
	if type(attr) ~= 'string' or type(val) ~= 'string' then return end
	self.attrs = self.attrs or {}
	tinsert(self.attrs, attr)
end

function box:setTitle(args)
	-- Get the title object and the namespace.
	self.pageTitle = getTitleObject(args.page ~= '' and args.page)
	self.title = self.pageTitle or mw.title.getCurrentTitle()
	self.demospace = args.demospace ~= '' and args.demospace or nil
	self.nsid = box.getNamespaceId(self.demospace) or self.title.namespace
end

function box:getConfig(boxType)
	-- Get the box config data from the data page.
	if boxType == 'mbox' then
		boxType = box.getMboxType(self.nsid)
	end
	local cfg = cfgTables[boxType]
	if not cfg then
		local boxTypes = {}
		for k, v in pairs(dataTables) do
			tinsert(boxTypes, format('&quot;%s&quot;', k))
		end
		tinsert(boxTypes, '&quot;mbox&quot;')
		error(format(
			'invalid message box type &quot;%s&quot;; valid types are %s',
			tostring(boxType),
			mw.text.listToText(boxTypes)
		), 2)
	end
	return cfg
end

function box:removeBlankArgs(cfg, args)
	-- Only allow blank arguments for the parameter names listed in
	-- cfg.allowBlankParams.
	local newArgs = {}
	for k, v in pairs(args) do
		if v ~= '' then
			newArgs[k] = v
		end
	end
	for i, param in ipairs(cfg.allowBlankParams or {}) do
		newArgs[param] = args[param]
	end
	return newArgs
end

function box:setBoxParameters(cfg, args)
	-- Get type data.
	self.type = args.type
	local typeData = cfg.types[self.type]
	self.invalidTypeError = cfg.showInvalidTypeError
		and self.type
		and not typeData
		and true
		or false
	typeData = typeData or cfg.types[cfg.default]
	self.typeClass = typeData.class
	self.typeImage = typeData.image

	-- Find if the box has been wrongly substituted.
	if cfg.substCheck and args.subst == 'SUBST' then
		self.isSubstituted = true
	end

	-- Find whether we are using a small message box.
	if cfg.allowSmall and (
		cfg.smallParam and args.small == cfg.smallParam
		or not cfg.smallParam and yesno(args.small)
	)
	then
		self.isSmall = true
	else
		self.isSmall = false
	end

	-- Add attributes, classes and styles.
	if cfg.allowId then
		self.id = args.id
	end
	self:addClass(
		cfg.usePlainlinksParam and yesno(args.plainlinks or true) and 'plainlinks'
	)
	for _, class in ipairs(cfg.classes or {}) do
		self:addClass(class)
	end
	if self.isSmall then
		self:addClass(cfg.smallClass or 'mbox-small')
	end
	self:addClass(self.typeClass)
	self:addClass(args.class)
	self.style = args.style
	self.attrs = args.attrs

	-- Set text style.
	self.textstyle = args.textstyle

	-- Find if we are on the template page or not. This functionality is only
	-- used if useCollapsibleTextFields is set, or if both cfg.templateCategory
	-- and cfg.templateCategoryRequireName are set.
	self.useCollapsibleTextFields = cfg.useCollapsibleTextFields
	if self.useCollapsibleTextFields
		or cfg.templateCategory
		and cfg.templateCategoryRequireName
	then
		self.name = args.name
		if self.name then
			local templateName = mw.ustring.match(
				self.name,
				'^[tT][eE][mM][pP][lL][aA][tT][eE][%s_]*:[%s_]*(.*)$'
			) or self.name
			templateName = 'Template:' .. templateName
			self.templateTitle = getTitleObject(templateName)
		end
		self.isTemplatePage = self.templateTitle
			and mw.title.equals(self.title, self.templateTitle)
			or false
	end

	-- Process data for collapsible text fields. At the moment these are only
	-- used in {{ambox}}.
	if self.useCollapsibleTextFields then
		-- Get the self.issue value.
		if self.isSmall and args.smalltext then
			self.issue = args.smalltext
		else
			local sect
			if args.sect == '' then
				sect = 'This ' .. (cfg.sectionDefault or 'page')
			elseif type(args.sect) == 'string' then
				sect = 'This ' .. args.sect
			end
			local issue = args.issue
			issue = type(issue) == 'string' and issue ~= '' and issue or nil
			local text = args.text
			text = type(text) == 'string' and text or nil
			local issues = {}
			tinsert(issues, sect)
			tinsert(issues, issue)
			tinsert(issues, text)
			self.issue = tconcat(issues, ' ')
		end

		-- Get the self.talk value.
		local talk = args.talk
		-- Show talk links on the template page or template subpages if the talk
		-- parameter is blank.
		if talk == ''
			and self.templateTitle 
			and (
				mw.title.equals(self.templateTitle, self.title)
				or self.title:isSubpageOf(self.templateTitle)
			)
		then
			talk = '#'
		elseif talk == '' then
			talk = nil
		end
		if talk then
			-- If the talk value is a talk page, make a link to that page. Else
			-- assume that it's a section heading, and make a link to the talk
			-- page of the current page with that section heading.
			local talkTitle = getTitleObject(talk)
			local talkArgIsTalkPage = true
			if not talkTitle or not talkTitle.isTalkPage then
				talkArgIsTalkPage = false
				talkTitle = getTitleObject(
					self.title.text,
					mw.site.namespaces[self.title.namespace].talk.id
				)
			end
			if talkTitle and talkTitle.exists then
				local talkText = 'Relevant discussion may be found on'
				if talkArgIsTalkPage then
					talkText = format(
						'%s [[%s|%s]].',
						talkText,
						talk,
						talkTitle.prefixedText
					)
				else
					talkText = format(
						'%s the [[%s#%s|talk page]].',
						talkText,
						talkTitle.prefixedText,
						talk
					)
				end
				self.talk = talkText
			end
		end

		-- Get other values.
		self.fix = args.fix ~= '' and args.fix or nil
		local date
		if args.date and args.date ~= '' then
			date = args.date
		elseif args.date == '' and self.isTemplatePage then
			date = lang:formatDate('F Y')
		end
		if date then
			self.date = format(&quot; &lt;small&gt;''(%s)''&lt;/small&gt;&quot;, date)
		end
		self.info = args.info
	end

	-- Set the non-collapsible text field. At the moment this is used by all box
	-- types other than ambox, and also by ambox when small=yes.
	if self.isSmall then
		self.text = args.smalltext or args.text
	else
		self.text = args.text
	end

	-- Set the below row.
	self.below = cfg.below and args.below

	-- General image settings.
	self.imageCellDiv = not self.isSmall and cfg.imageCellDiv and true or false
	self.imageEmptyCell = cfg.imageEmptyCell
	if cfg.imageEmptyCellStyle then
		self.imageEmptyCellStyle = 'border:none;padding:0px;width:1px'
	end

	-- Left image settings.
	local imageLeft = self.isSmall and args.smallimage or args.image
	if cfg.imageCheckBlank and imageLeft ~= 'blank' and imageLeft ~= 'none'
		or not cfg.imageCheckBlank and imageLeft ~= 'none'
	then
		self.imageLeft = imageLeft
		if not imageLeft then
			local imageSize = self.isSmall
				and (cfg.imageSmallSize or '30x30px')
				or '40x40px'
			self.imageLeft = format('[[File:%s|%s|link=|alt=]]', self.typeImage
				or 'Imbox notice.png', imageSize)
		end
	end

	-- Right image settings.
	local imageRight = self.isSmall and args.smallimageright or args.imageright
	if not (cfg.imageRightNone and imageRight == 'none') then
		self.imageRight = imageRight
	end

	-- Add mainspace categories. At the moment these are only used in {{ambox}}.
	if cfg.allowMainspaceCategories then
		if args.cat then
			args.cat1 = args.cat
		end
		self.catNums = getArgNums(args, 'cat')
		if args.category then
			args.category1 = args.category
		end
		self.categoryNums = getArgNums(args, 'category')
		if args.all then
			args.all1 = args.all
		end
		self.allNums = getArgNums(args, 'all')
		self.categoryParamNums = union(self.catNums, self.categoryNums)
		self.categoryParamNums = union(self.categoryParamNums, self.allNums)
		-- The following is roughly equivalent to the old {{Ambox/category}}.
		local date = args.date
		date = type(date) == 'string' and date
		local preposition = 'from'
		for _, num in ipairs(self.categoryParamNums) do
			local mainCat = args['cat' .. tostring(num)]
				or args['category' .. tostring(num)]
			local allCat = args['all' .. tostring(num)]
			mainCat = type(mainCat) == 'string' and mainCat
			allCat = type(allCat) == 'string' and allCat
			if mainCat and date and date ~= '' then
				local catTitle = format('%s %s %s', mainCat, preposition, date)
				self:addCat('main', catTitle)
				catTitle = getTitleObject('Category:' .. catTitle)
				if not catTitle or not catTitle.exists then
					self:addCat(
						'main',
						'Articles with invalid date parameter in template'
					)
				end
			elseif mainCat and (not date or date == '') then
				self:addCat('main', mainCat)
			end
			if allCat then
				self:addCat('main', allCat)
			end
		end
	end

	-- Add template-namespace categories.
	if cfg.templateCategory then
		if cfg.templateCategoryRequireName then
			if self.isTemplatePage then
				self:addCat('template', cfg.templateCategory)
			end
		elseif not self.title.isSubpage then
			self:addCat('template', cfg.templateCategory)
		end
	end

	-- Add template error category.
	if cfg.templateErrorCategory then
		local templateErrorCategory = cfg.templateErrorCategory
		local templateCat, templateSort
		if not self.name and not self.title.isSubpage then
			templateCat = templateErrorCategory
		elseif self.isTemplatePage then
			local paramsToCheck = cfg.templateErrorParamsToCheck or {}
			local count = 0
			for i, param in ipairs(paramsToCheck) do
				if not args[param] then
					count = count + 1
				end
			end
			if count &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = tostring(count)
			end
			if self.categoryNums and #self.categoryNums &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = 'C'
			end
		end
		self:addCat('template', templateCat, templateSort)
	end

	-- Categories for all namespaces.
	if self.invalidTypeError then
		local allSort = (self.nsid == 0 and 'Main:' or '') .. self.title.prefixedText
		self:addCat('all', 'Wikipedia message box parameter needs fixing', allSort)
	end
	if self.isSubstituted then
		self:addCat('all', 'Pages with incorrectly substituted templates')
	end

	-- Convert category tables to strings and pass them through
	-- [[Module:Category handler]].
	self.categories = categoryHandler{
		main = tconcat(self.mainCats or {}),
		template = tconcat(self.templateCats or {}),
		all = tconcat(self.allCats or {}),
		nocat = args.nocat,
		demospace = self.demospace,
		page = self.pageTitle and self.pageTitle.prefixedText or nil
	}
end

function box:export()
	local root = htmlBuilder.create()

	-- Add the subst check error.
	if self.isSubstituted and self.name then
		root
			.tag('b')
				.addClass('error')
				.wikitext(format(
					'Template &lt;code&gt;%s[[Template:%s|%s]]%s&lt;/code&gt; has been incorrectly substituted.',
					mw.text.nowiki('{{'), self.name, self.name, mw.text.nowiki('}}')
				))
	end

	-- Create the box table.
	local boxTable = root.tag('table')
	boxTable
		.attr('id', self.id)
	for i, class in ipairs(self.classes or {}) do
		boxTable
			.addClass(class)
	end
	boxTable
		.cssText(self.style)
		.attr('role', 'presentation')
	for attr, val in pairs(self.attrs or {}) do
		boxTable
			.attr(attr, val)
	end

	-- Add the left-hand image.
	local row = boxTable.tag('tr')
	if self.imageLeft then
		local imageLeftCell = row.tag('td').addClass('mbox-image')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageLeftCell so that the image
			-- is inside it. Divs use style=&quot;width: 52px;&quot;, which limits the
			-- image width to 52px. If any images in a div are wider than that,
			-- they may overlap with the text or cause other display problems.
			imageLeftCell = imageLeftCell.tag('div').css('width', '52px') 
		end
		imageLeftCell
			.wikitext(self.imageLeft)
	elseif self.imageEmptyCell then
		-- Some message boxes define an empty cell if no image is specified, and
		-- some don't. The old template code in templates where empty cells are
		-- specified gives the following hint: &quot;No image. Cell with some width
		-- or padding necessary for text cell to have 100% width.&quot;
		row.tag('td')
			.addClass('mbox-empty-cell') 
			.cssText(self.imageEmptyCellStyle)
	end

	-- Add the text.
	local textCell = row.tag('td').addClass('mbox-text')
	if self.useCollapsibleTextFields then
		-- The message box uses advanced text parameters that allow things to be
		-- collapsible. At the moment, only ambox uses this.
		textCell
			.cssText(self.textstyle)
		local textCellSpan = textCell.tag('span')
		textCellSpan
			.addClass('mbox-text-span')
			.wikitext(self.issue)
		if not self.isSmall then
			textCellSpan
				.tag('span')
					.addClass('hide-when-compact')
					.wikitext(self.talk and ' ' .. self.talk)
					.wikitext(self.fix and ' ' .. self.fix)
		end
		textCellSpan
			.wikitext(self.date and ' ' .. self.date)
		if not self.isSmall then
			textCellSpan
				.tag('span')
				.addClass('hide-when-compact')
				.wikitext(self.info and ' ' .. self.info)
		end
	else
		-- Default text formatting - anything goes.
		textCell
			.cssText(self.textstyle)
			.wikitext(self.text)
	end

	-- Add the right-hand image.
	if self.imageRight then
		local imageRightCell = row.tag('td').addClass('mbox-imageright')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageRightCell so that the image
			-- is inside it.
			imageRightCell = imageRightCell.tag('div').css('width', '52px')
		end
		imageRightCell
			.wikitext(self.imageRight)
	end

	-- Add the below row.
	if self.below then
		boxTable.tag('tr')
			.tag('td')
				.attr('colspan', self.imageRight and '3' or '2')
				.addClass('mbox-text')
				.cssText(self.textstyle)
				.wikitext(self.below)
	end

	-- Add error message for invalid type parameters.
	if self.invalidTypeError then
		root
			.tag('div')
				.css('text-align', 'center')
				.wikitext(format(
					'This message box is using an invalid &quot;type=%s&quot; parameter and needs fixing.',
					self.type or ''
				))
	end

	-- Add categories.
	root
		.wikitext(self.categories)

	return tostring(root)
end

local function main(boxType, args)
	local outputBox = box.new()
	outputBox:setTitle(args)
	local cfg = outputBox:getConfig(boxType)
	args = outputBox:removeBlankArgs(cfg, args)
	outputBox:setBoxParameters(cfg, args)
	return outputBox:export()
end

local function makeWrapper(boxType)
	return function (frame)
		local args = getArgs(frame, {trim = false, removeBlanks = false})
		return main(boxType, args)
	end
end

local p = {
	main = main,
	mbox = makeWrapper('mbox')
}

for boxType in pairs(cfgTables) do
	p[boxType] = makeWrapper(boxType)
end

return p</text>
      <sha1>pfxm5hq7an9zemrjcn2d276uu0xlvky</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Message box/configuration</title>
    <ns>828</ns>
    <id>40627038</id>
    <revision>
      <id>592562529</id>
      <parentid>577968366</parentid>
      <timestamp>2014-01-27T01:07:32Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>allow the hidden arg to be blank, and allow tmbox to have an id attribute, per protected edit request by [[User:Technical 13]]</comment>
      <text xml:space="preserve" bytes="5405">local ambox = {
	types = {
		speedy = {
			class = 'ambox-speedy',
			image = 'Ambox speedy deletion.png'
		},
		delete = {
			class = 'ambox-delete',
			image = 'Ambox deletion.png'
		},
		content = {
			class = 'ambox-content',
			image = 'Ambox content.png'
		},
		style = {
			class = 'ambox-style',
			image = 'Edit-clear.svg'
		},
		move = {
			class = 'ambox-move',
			image = 'Ambox move.png'
		},
		protection = {
			class = 'ambox-protection',
			image = 'Ambox protection.png'
		},
		notice = {
			class = 'ambox-notice',
			image = 'Ambox notice.png'
		}
	},
	default                     = 'notice',
	allowBlankParams            = {'talk', 'sect', 'date', 'issue', 'fix', 'subst', 'hidden'},
	allowSmall                  = true,
	smallParam                  = 'left',
	smallClass                  = 'mbox-small-left',
	substCheck                  = true,
	classes                     = {'metadata', 'plainlinks', 'ambox'},
	imageEmptyCell              = true,
	imageCheckBlank             = true,
	imageSmallSize              = '20x20px',
	imageCellDiv                = true,
	useCollapsibleTextFields    = true,
	imageRightNone              = true,
	sectionDefault              = 'article',
	allowMainspaceCategories    = true,
	templateCategory            = 'Article message templates',
        templateCategoryRequireName = true,
	templateErrorCategory       = 'Article message templates with missing parameters',
	templateErrorParamsToCheck  = {'issue', 'fix', 'subst'}
}

local cmbox = {
	types = {
		speedy = {
			class = 'cmbox-speedy',
			image = 'Cmbox deletion.png'
		},
		delete = {
			class = 'cmbox-delete',
			image = 'Cmbox deletion.png'
		},
		content = {
			class = 'cmbox-content',
			image = 'Cmbox content.png'
		},
		style = {
			class = 'cmbox-style',
			image = 'Edit-clear.svg'
		},
		move = {
			class = 'cmbox-move',
			image = 'Cmbox move.png'
		},
		protection = {
			class = 'cmbox-protection',
			image = 'Cmbox protection.png'
		},
		notice = {
			class = 'cmbox-notice',
			image = 'Cmbox notice.png'
		}
	},
	default              = 'notice',
	showInvalidTypeError = true,
	classes              = {'plainlinks', 'cmbox'},
	imageEmptyCell       = true
}

local fmbox = {
	types = {
		warning = {
			class = 'fmbox-warning',
			image = 'Cmbox deletion.png'
		},
		editnotice = {
			class = 'fmbox-editnotice',
			image = 'Imbox notice.png'
		},
		system = {
			class = 'fmbox-system',
			image = 'Imbox notice.png'
		}
	},
	default              = 'system',
	showInvalidTypeError = true,
	allowId                = true,
	classes              = {'plainlinks', 'fmbox'},
	imageEmptyCell       = false,
	imageRightNone       = false
}

local imbox = {
	types = {
		speedy = {
			class = 'imbox-speedy',
			image = 'Imbox speedy deletion.png'
		},
		delete = {
			class = 'imbox-delete',
			image = 'Imbox deletion.png'
		},
		content = {
			class = 'imbox-content',
			image = 'Imbox content.png'
		},
		style = {
			class = 'imbox-style',
			image = 'Edit-clear.svg'
		},
		move = {
			class = 'imbox-move',
			image = 'Imbox move.png'
		},
		protection = {
			class = 'imbox-protection',
			image = 'Imbox protection.png'
		},
		license = {
			class = 'imbox-license',
			image = 'Imbox license.png'
		},
		featured = {
			class = 'imbox-featured',
			image = 'Imbox featured.png'
		},
		notice = {
			class = 'imbox-notice',
			image = 'Imbox notice.png'
		}
	},
	default              = 'notice',
	showInvalidTypeError = true,
	classes              = {'imbox'},
	usePlainlinksParam   = true,
	imageEmptyCell       = true,
	below                = true,
	templateCategory     = 'File message boxes'
}

local ombox = {
	types = {
		speedy = {
			class = 'ombox-speedy',
			image = 'Imbox speedy deletion.png'
		},
		delete = {
			class = 'ombox-delete',
			image = 'Imbox deletion.png'
		},
		content = {
			class = 'ombox-content',
			image = 'Imbox content.png'
		},
		style = {
			class = 'ombox-style',
			image = 'Edit-clear.svg'
		},
		move = {
			class = 'ombox-move',
			image = 'Imbox move.png'
		},
		protection = {
			class = 'ombox-protection',
			image = 'Imbox protection.png'
		},
		notice = {
			class = 'ombox-notice',
			image = 'Imbox notice.png'
		}
	},
	default              = 'notice',
	showInvalidTypeError = true,
	classes              = {'plainlinks', 'ombox'},
	allowSmall           = true,
	imageEmptyCell       = true,
	imageRightNone       = true
}

local tmbox = {
	types = {
		speedy = {
			class = 'tmbox-speedy',
			image = 'Imbox speedy deletion.png'
		},
		delete = {
			class = 'tmbox-delete',
			image = 'Imbox deletion.png'
		},
		content = {
			class = 'tmbox-content',
			image = 'Imbox content.png'
		},
		style = {
			class = 'tmbox-style',
			image = 'Edit-clear.svg '
		},
		move = {
			class = 'tmbox-move',
			image = 'Imbox move.png'
		},
		protection = {
			class = 'tmbox-protection',
			image = 'Imbox protection.png'
		},
		notice = {
			class = 'tmbox-notice',
			image = 'Imbox notice.png'
		}
	},
	default              = 'notice',
	showInvalidTypeError = true,
	classes              = {'plainlinks', 'tmbox'},
	allowId              = true,
	allowSmall           = true,
	imageRightNone       = true,
	imageEmptyCell       = true,
	imageEmptyCellStyle  = true,
	templateCategory     = 'Talk message boxes'
}

return {
	ambox = ambox,
	cmbox = cmbox,
	fmbox = fmbox,
	imbox = imbox,
	ombox = ombox,
	tmbox = tmbox
}</text>
      <sha1>hw6xn0k5hxmx22jmgmith42r5ccwspz</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect</title>
    <ns>828</ns>
    <id>39762919</id>
    <revision>
      <id>602886406</id>
      <parentid>601020017</parentid>
      <timestamp>2014-04-05T17:01:23Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>use demopage instead of page as the main &quot;page&quot; parameter</comment>
      <text xml:space="preserve" bytes="5992">--[[
--------------------------------------------------------------------------------
--                                                                            --
--                            NAMESPACE DETECT                                --
--                                                                            --
-- This module implements the {{namespace detect}} template in Lua, with a    --
-- few improvements: all namespaces and all namespace aliases are supported,  --
-- and namespace names are detected automatically for the local wiki. The     --
-- module can also use the corresponding subject namespace value if it is     --
-- used on a talk page. Parameter names can be configured for different wikis --
-- by altering the values in the &quot;cfg&quot; table in                               --
-- Module:Namespace detect/config.                                            --
--                                                                            --
--------------------------------------------------------------------------------
--]]

local data = mw.loadData('Module:Namespace detect/data')
local argKeys = data.argKeys
local cfg = data.cfg
local mappings = data.mappings

local yesno = require('Module:Yesno')
local mArguments -- Lazily initialise Module:Arguments
local mTableTools -- Lazily initilalise Module:TableTools
local ustringLower = mw.ustring.lower

local p = {}

local function fetchValue(t1, t2)
	-- Fetches a value from the table t1 for the first key in array t2 where
	-- a non-nil value of t1 exists.
	for i, key in ipairs(t2) do
		local value = t1[key]
		if value ~= nil then
			return value
		end
	end
	return nil
end

local function equalsArrayValue(t, value)
	-- Returns true if value equals a value in the array t. Otherwise
	-- returns false.
	for i, arrayValue in ipairs(t) do
		if value == arrayValue then
			return true
		end
	end
	return false
end

function p.getPageObject(page)
	-- Get the page object, passing the function through pcall in case of
	-- errors, e.g. being over the expensive function count limit.
	if page then
		local success, pageObject = pcall(mw.title.new, page)
		if success then
			return pageObject
		else
			return nil
		end
	else
		return mw.title.getCurrentTitle()
	end
end

-- Provided for backward compatibility with other modules
function p.getParamMappings()
	return mappings
end

local function getNamespace(args)
	-- This function gets the namespace name from the page object.
	local page = fetchValue(args, argKeys.demopage)
	if page == '' then
		page = nil
	end
	local demospace = fetchValue(args, argKeys.demospace)
	if demospace == '' then
		demospace = nil
	end
	local subjectns = fetchValue(args, argKeys.subjectns)
	local ret
	if demospace then
		-- Handle &quot;demospace = main&quot; properly.
		if equalsArrayValue(argKeys.main, ustringLower(demospace)) then
			ret = mw.site.namespaces[0].name
		else
			ret = demospace
		end
	else
		local pageObject = p.getPageObject(page)
		if pageObject then
			if pageObject.isTalkPage then
				-- Get the subject namespace if the option is set,
				-- otherwise use &quot;talk&quot;.
				if yesno(subjectns) then
					ret = mw.site.namespaces[pageObject.namespace].subject.name
				else
					ret = 'talk'
				end
			else
				ret = pageObject.nsText
			end
		else
			return nil -- return nil if the page object doesn't exist.
		end
	end
	ret = ret:gsub('_', ' ')
	return ustringLower(ret)
end

function p._main(args)
	-- Check the parameters stored in the mappings table for any matches.
	local namespace = getNamespace(args) or 'other' -- &quot;other&quot; avoids nil table keys
	local params = mappings[namespace] or {}
	local ret = fetchValue(args, params)
	--[[
	-- If there were no matches, return parameters for other namespaces.
	-- This happens if there was no text specified for the namespace that
	-- was detected or if the demospace parameter is not a valid
	-- namespace. Note that the parameter for the detected namespace must be
	-- completely absent for this to happen, not merely blank.
	--]]
	if ret == nil then
		ret = fetchValue(args, argKeys.other)
	end
	return ret
end

function p.main(frame)
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {removeBlanks = false})
	local ret = p._main(args)
	return ret or ''
end

function p.table(frame)
	--[[
	-- Create a wikitable of all subject namespace parameters, for
	-- documentation purposes. The talk parameter is optional, in case it
	-- needs to be excluded in the documentation.
	--]]
	
	-- Load modules and initialise variables.
	mTableTools = require('Module:TableTools')
	local namespaces = mw.site.namespaces
	local cfg = data.cfg
	local useTalk = type(frame) == 'table' 
		and type(frame.args) == 'table' 
		and yesno(frame.args.talk) -- Whether to use the talk parameter.
	
	-- Get the header names.
	local function checkValue(value, default)
		if type(value) == 'string' then
			return value
		else
			return default
		end
	end
	local nsHeader = checkValue(cfg.wikitableNamespaceHeader, 'Namespace')
	local aliasesHeader = checkValue(cfg.wikitableAliasesHeader, 'Aliases')

	-- Put the namespaces in order.
	local mappingsOrdered = {}
	for nsname, params in pairs(mappings) do
		if useTalk or nsname ~= 'talk' then
			local nsid = namespaces[nsname].id
			-- Add 1, as the array must start with 1; nsid 0 would be lost otherwise.
			nsid = nsid + 1 
			mappingsOrdered[nsid] = params
		end
	end
	mappingsOrdered = mTableTools.compressSparseArray(mappingsOrdered)

	-- Build the table.
	local ret = '{| class=&quot;wikitable&quot;'
		.. '\n|-'
		.. '\n! ' .. nsHeader
		.. '\n! ' .. aliasesHeader
	for i, params in ipairs(mappingsOrdered) do
		for j, param in ipairs(params) do
			if j == 1 then
				ret = ret .. '\n|-'
					.. '\n| &lt;code&gt;' .. param .. '&lt;/code&gt;'
					.. '\n| '
			elseif j == 2 then
				ret = ret .. '&lt;code&gt;' .. param .. '&lt;/code&gt;'
			else
				ret = ret .. ', &lt;code&gt;' .. param .. '&lt;/code&gt;'
			end
		end
	end
	ret = ret .. '\n|-'
		.. '\n|}'
	return ret
end

return p</text>
      <sha1>j7kygz1y56jpz4doq0m2c6x1td5d8ar</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/config</title>
    <ns>828</ns>
    <id>42256703</id>
    <revision>
      <id>602886681</id>
      <parentid>602823531</parentid>
      <timestamp>2014-04-05T17:03:49Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>use cfg.demopage rather than cfg.page now that the default parameter has been changed on the /data page</comment>
      <text xml:space="preserve" bytes="3545">--------------------------------------------------------------------------------
--                    Namespace detect configuration data                     --
--                                                                            --
-- This module stores configuration data for Module:Namespace detect. Here    --
-- you can localise the module to your wiki's language.                       --
--                                                                            --
-- To activate a configuration item, you need to uncomment it. This means     --
-- that you need to remove the text &quot;-- &quot; at the start of the line.           --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names. Values added     --
-- here will work in addition to the default English parameter names.         --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- cfg.foo = 'parameter name'                                                 --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- cfg.foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'}     --
--------------------------------------------------------------------------------

---- This parameter displays content for the main namespace:
-- cfg.main = 'main'

---- This parameter displays in talk namespaces:
-- cfg.talk = 'talk'

---- This parameter displays content for &quot;other&quot; namespaces (namespaces for which
---- parameters have not been specified):
-- cfg.other = 'other'

---- This parameter makes talk pages behave as though they are the corresponding
---- subject namespace. Note that this parameter is used with [[Module:Yesno]].
---- Edit that module to change the default values of &quot;yes&quot;, &quot;no&quot;, etc.
-- cfg.subjectns = 'subjectns'

---- This parameter sets a demonstration namespace:
-- cfg.demospace = 'demospace'

---- This parameter sets a specific page to compare:
cfg.demopage = 'page'

--------------------------------------------------------------------------------
--                           Table configuration                              --
-- These configuration items allow customisation of the &quot;table&quot; function,     --
-- used to generate a table of possible parameters in the module              --
-- documentation.                                                             --
--------------------------------------------------------------------------------

---- The header for the namespace column in the wikitable containing the list of
---- possible subject-space parameters.
-- cfg.wikitableNamespaceHeader = 'Namespace'

---- The header for the wikitable containing the list of possible subject-space
---- parameters.
-- cfg.wikitableAliasesHeader = 'Aliases'

--------------------------------------------------------------------------------
--                        End of configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>1o6ozz56i8q0xgyl6xa41n2v7kelhli</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/data</title>
    <ns>828</ns>
    <id>42257476</id>
    <revision>
      <id>602886511</id>
      <parentid>602823622</parentid>
      <timestamp>2014-04-05T17:02:16Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>bug fix - use the demospace parameter as both key and value in the argKeys table</comment>
      <text xml:space="preserve" bytes="2569">--------------------------------------------------------------------------------
--                          Namespace detect data                             --
-- This module holds data for [[Module:Namespace detect]] to be loaded per    --
-- page, rather than per #invoke, for performance reasons.                    --
--------------------------------------------------------------------------------

local cfg = require('Module:Namespace detect/config')

local function addKey(t, key, defaultKey)
	if key ~= defaultKey then
		t[#t + 1] = key
	end
end

-- Get a table of parameters to query for each default parameter name.
-- This allows wikis to customise parameter names in the cfg table while
-- ensuring that default parameter names will always work. The cfg table
-- values can be added as a string, or as an array of strings.

local defaultKeys = {
	'main',
	'talk',
	'other',
	'subjectns',
	'demospace',
	'demopage'
}

local argKeys = {}
for i, defaultKey in ipairs(defaultKeys) do
	argKeys[defaultKey] = {defaultKey}
end

for defaultKey, t in pairs(argKeys) do
	local cfgValue = cfg[defaultKey]
	local cfgValueType = type(cfgValue)
	if cfgValueType == 'string' then
		addKey(t, cfgValue, defaultKey)
	elseif cfgValueType == 'table' then
		for i, key in ipairs(cfgValue) do
			addKey(t, key, defaultKey)
		end
	end
	cfg[defaultKey] = nil -- Free the cfg value as we don't need it any more.
end

local function getParamMappings()
	--[[
	-- Returns a table of how parameter names map to namespace names. The keys
	-- are the actual namespace names, in lower case, and the values are the
	-- possible parameter names for that namespace, also in lower case. The
	-- table entries are structured like this:
	-- {
	--   [''] = {'main'},
	--   ['wikipedia'] = {'wikipedia', 'project', 'wp'},
	--   ...
	-- }
	--]]
	local mappings = {}
	local mainNsName = mw.site.subjectNamespaces[0].name
	mainNsName = mw.ustring.lower(mainNsName)
	mappings[mainNsName] = mw.clone(argKeys.main)
	mappings['talk'] = mw.clone(argKeys.talk)
	for nsid, ns in pairs(mw.site.subjectNamespaces) do
		if nsid ~= 0 then -- Exclude main namespace.
			local nsname = mw.ustring.lower(ns.name)
			local canonicalName = mw.ustring.lower(ns.canonicalName)
			mappings[nsname] = {nsname}
			if canonicalName ~= nsname then
				table.insert(mappings[nsname], canonicalName)
			end
			for _, alias in ipairs(ns.aliases) do
				table.insert(mappings[nsname], mw.ustring.lower(alias))
			end
		end
	end
	return mappings
end

return {
	argKeys = argKeys,
	cfg = cfg,
	mappings = getParamMappings()
}</text>
      <sha1>ojp6d3pc8mql5nufaqdg576c9so3479</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Navbar</title>
    <ns>828</ns>
    <id>38827227</id>
    <revision>
      <id>609959942</id>
      <parentid>609862555</parentid>
      <timestamp>2014-05-24T16:19:17Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>support collapsible version</comment>
      <text xml:space="preserve" bytes="3378">local p = {}

local getArgs
local HtmlBuilder = require('Module:HtmlBuilder')

local function trim(s)
	return mw.ustring.match(s, &quot;^%s*(.-)%s*$&quot;)
end

local function htmlError(s)
	local span = HtmlBuilder.create('span')

	span
		.addClass('error')
		.css('float', 'left')
		.css('white-space', 'nowrap')
		.wikitext('Error: ' .. s)

	return tostring(span)
end

local function getTitle(pageName)
	pageName = trim(pageName);
	local page_title, talk_page_title;

	if mw.ustring.sub(pageName, 1, 1) == ':' then
		page_title = mw.title.new( mw.ustring.sub(pageName, 2));
	else
		page_title = mw.title.new(pageName, 'Template');
	end

	if page_title then
		talk_page_title = page_title.talkPageTitle;
	else
		talk_page_title = nil;
	end

	return page_title, talk_page_title;
end

function p._navbar(args)
	local good, title, talk_title;
	local titleArg = 1
	
	if args.collapsible then
		titleArg = 2
		if not args.plain then
			args.mini = 1
		end
		if args.fontcolor then
			args.fontstyle = 'color:' .. args.fontcolor .. ';'
		end
		args.style = 'float:left; text-align:left; width:6em;'
	end
	
	good, title, talk_title = pcall(getTitle, args[titleArg] or (':' .. mw.getCurrentFrame():getParent():getTitle()));
	if not good then
		return htmlError(title);
	end

	if not title then
		return htmlError('Page does not exist')
	end

	local mainpage = title.fullText;
	local talkpage = talk_title and talk_title.fullText or ''
	local editurl = title:fullUrl('action=edit');

	local viewLink, talkLink, editLink = 'view', 'talk', 'edit'
	if args.mini then
		viewLink, talkLink, editLink = 'v', 't', 'e'
	end

	local div = HtmlBuilder.create().tag('div')
	div
		.addClass('plainlinks')
		.addClass('hlist')
		.addClass('navbar')
		.cssText(args.style)

	if args.mini then div.addClass('mini') end

	if not (args.mini or args.plain) then
		div
			.tag('span')
				.css('word-spacing', 0)
				.cssText(args.fontstyle)
				.wikitext(args.text or 'This box:')
				.wikitext(' ')
	end

	if args.brackets then
		div
			.tag('span')
				.css('margin-right', '-0.125em')
				.cssText(args.fontstyle)
				.wikitext('&amp;#91;')
				.newline();
	end

	local ul = div.tag('ul');

	ul
		.tag('li')
			.addClass('nv-view')
			.wikitext('[[' .. mainpage .. '|')
			.tag('span')
				.attr('title', 'View this template')
				.cssText(args.fontstyle or '')
				.wikitext(viewLink)
				.done()
			.wikitext(']]')
			.done()
		.tag('li')
			.addClass('nv-talk')
			.wikitext('[[' .. talkpage .. '|')
			.tag('span')
				.attr('title', 'Discuss this template')
				.cssText(args.fontstyle or '')
				.wikitext(talkLink)
				.done()
			.wikitext(']]');

	if not args.noedit then
		ul
			.tag('li')
				.addClass('nv-edit')
				.wikitext('[' .. editurl .. ' ')
				.tag('span')
					.attr('title', 'Edit this template')
					.cssText(args.fontstyle or '')
					.wikitext(editLink)
					.done()
				.wikitext(']');
	end

	if args.brackets then
		div
			.tag('span')
				.css('margin-left', '-0.125em')
				.cssText( args.fontstyle or '')
				.wikitext('&amp;#93;')
				.newline();
	end
	
	if args.collapsible then
		div
			.done()
		.tag('span')
			.css('font-size', '110%')
			.cssText(args.fontstyle or '')
			.wikitext(args[1])
	end

	return tostring(div.allDone())
end

function p.navbar(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	return p._navbar(getArgs(frame))
end

return p</text>
      <sha1>j7p5dh2bvjhjjc8ldrudu3mm19xz9q6</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Navbox</title>
    <ns>828</ns>
    <id>38634746</id>
    <revision>
      <id>609987973</id>
      <parentid>609962128</parentid>
      <timestamp>2014-05-24T20:37:57Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>don't require the wrapper template</comment>
      <text xml:space="preserve" bytes="12273">--
-- This module will implement {{Navbox}}
--
 
local p = {}
 
local HtmlBuilder = require('Module:HtmlBuilder')
local navbar = require('Module:Navbar')._navbar

local args
local frame
local tableRowAdded = false
local border
local listnums = {}
 
local function trim(s)
    return (mw.ustring.gsub(s, &quot;^%s*(.-)%s*$&quot;, &quot;%1&quot;))
end

local function addNewline(s)
    if s:match('^[*:;#]') or s:match('^{|') then
        return '\n' .. s ..'\n'
    else
        return s
    end
end

local function addTableRow(tbl)
    -- If any other rows have already been added, then we add a 2px gutter row.
    if tableRowAdded then
        tbl
            .tag('tr')
                .css('height', '2px')
                .tag('td')
                	.attr('colspan',2)
    end
    
    tableRowAdded = true
    
    return tbl.tag('tr')
end

local function renderNavBar(titleCell)
    -- Depending on the presence of the navbar and/or show/hide link, we may need to add a spacer div on the left
    -- or right to keep the title centered.
    local spacerSide = nil

    if args.navbar == 'off' then
        -- No navbar, and client wants no spacer, i.e. wants the title to be shifted to the left. If there's
        -- also no show/hide link, then we need a spacer on the right to achieve the left shift.
        if args.state == 'plain' then spacerSide = 'right' end
    elseif args.navbar == 'plain' or (not args.name and mw.getCurrentFrame():getParent():getTitle() == 'Template:Navbox' and (border == 'subgroup' or border == 'child' or border == 'none')) then
        -- No navbar. Need a spacer on the left to balance out the width of the show/hide link.
        if args.state ~= 'plain' then spacerSide = 'left' end
    else
        -- Will render navbar (or error message). If there's no show/hide link, need a spacer on the right
        -- to balance out the width of the navbar.
        if args.state == 'plain' then spacerSide = 'right' end

        titleCell.wikitext(navbar{ 
            args.name, 
            mini = 1, 
            fontstyle = (args.basestyle or '') .. ';' .. (args.titlestyle or '') ..  ';background:none transparent;border:none;'
        })
    end
    
    -- Render the spacer div.
    if spacerSide then
        titleCell
            .tag('span')
                .css('float', spacerSide)
                .css('width', '6em')
                .wikitext('&amp;nbsp;')
    end
end

--
--   Title row
--
local function renderTitleRow(tbl)
    if not args.title then return end
 
    local titleRow = addTableRow(tbl)
     
    if args.titlegroup then
        titleRow
            .tag('th')
                .attr('scope', 'row')
                .addClass('navbox-group')
                .addClass(args.titlegroupclass)
                .cssText(args.basestyle)
                .cssText(args.groupstyle)
                .cssText(args.titlegroupstyle)
                .wikitext(args.titlegroup)
    end
    
    local titleCell = titleRow.tag('th').attr('scope', 'col')
            
    if args.titlegroup then
        titleCell
            .css('border-left', '2px solid #fdfdfd')
            .css('width', '100%')
    end
    
    local titleColspan = 2
    if args.imageleft then titleColspan = titleColspan + 1 end
    if args.image then titleColspan = titleColspan + 1 end
    if args.titlegroup then titleColspan = titleColspan - 1 end
    
    titleCell
        .cssText(args.basestyle)
        .cssText(args.titlestyle)
        .addClass('navbox-title')
        .attr('colspan', titleColspan)
 
    renderNavBar(titleCell)

    titleCell
         .tag('div')
             .addClass(args.titleclass)
             .css('font-size', '110%')
             .wikitext(addNewline(args.title))
end

--
--   Above/Below rows
--

local function getAboveBelowColspan()
    local ret = 2
    if args.imageleft then ret = ret + 1 end
    if args.image then ret = ret + 1 end
    return ret
end

local function renderAboveRow(tbl)
    if not args.above then return end

    addTableRow(tbl)
        .tag('td')
            .addClass('navbox-abovebelow')
            .addClass(args.aboveclass)
            .cssText(args.basestyle)
            .cssText(args.abovestyle)
            .attr('colspan', getAboveBelowColspan())
            .tag('div')
                .wikitext(addNewline(args.above))
end

local function renderBelowRow(tbl)
    if not args.below then return end

    addTableRow(tbl)
        .tag('td')
            .addClass('navbox-abovebelow')
            .addClass(args.belowclass)
            .cssText(args.basestyle)
            .cssText(args.belowstyle)
            .attr('colspan', getAboveBelowColspan())
            .tag('div')
                .wikitext(addNewline(args.below))
end
 
--
--   List rows
--
local function renderListRow(tbl, listnum)
    local row = addTableRow(tbl)
    
    if listnum == 1 and args.imageleft then
        row
            .tag('td')
                .addClass('navbox-image')
                .addClass(args.imageclass)
                .css('width', '0%')
                .css('padding', '0px 2px 0px 0px')
                .cssText(args.imageleftstyle)
                .attr('rowspan', 2 * #listnums - 1)
                .tag('div')
                    .wikitext(addNewline(args.imageleft))
    end
 
    if args['group' .. listnum] then
        local groupCell = row.tag('th')
        
        groupCell
               .attr('scope', 'row')
               .addClass('navbox-group')
               .addClass(args.groupclass)
               .cssText(args.basestyle)
               
        if args.groupwidth then
            groupCell.css('width', args.groupwidth)
        end
           
        groupCell
            .cssText(args.groupstyle)
            .cssText(args['group' .. listnum .. 'style'])
            .wikitext(args['group' .. listnum])
    end
    
    local listCell = row.tag('td')

    if args['group' .. listnum] then
        listCell
            .css('text-align', 'left')
            .css('border-left-width', '2px')
            .css('border-left-style', 'solid')
    else
        listCell.attr('colspan', 2)
    end
    
    if not args.groupwidth then 
        listCell.css('width', '100%')
    end
    
    local isOdd = (listnum % 2) == 1
    local rowstyle = args.evenstyle
    if isOdd then rowstyle = args.oddstyle end
 
    local evenOdd
    if args.evenodd == 'swap' then
        if isOdd then evenOdd = 'even' else evenOdd = 'odd' end
    else
        if isOdd then evenOdd = args.evenodd or 'odd' else evenOdd = args.evenodd or 'even' end
    end

    listCell
        .css('padding', '0px')
        .cssText(args.liststyle)
        .cssText(rowstyle)
        .cssText(args['list' .. listnum .. 'style'])
        .addClass('navbox-list')
        .addClass('navbox-' .. evenOdd)
        .addClass(args.listclass)
        .tag('div')
            .css('padding', (listnum == 1 and args.list1padding) or args.listpadding or '0em 0.25em')
            .wikitext(addNewline(args['list' .. listnum]))

    if listnum == 1 and args.image then
        row
            .tag('td')
                .addClass('navbox-image')
                .addClass(args.imageclass)
                .css('width', '0%')
                .css('padding', '0px 0px 0px 2px')
                .cssText(args.imagestyle)
                .attr('rowspan', 2 * #listnums - 1)
                .tag('div')
                    .wikitext(addNewline(args.image))
    end
end


--
--   Tracking categories
--

local function needsHorizontalLists()
    if border == 'child' or border == 'subgroup'  or args.tracking == 'no' then return false end
    
    local listClasses = {'plainlist', 'hlist', 'hlist hnum', 'hlist hwrap', 'hlist vcard', 'vcard hlist', 'hlist vevent'}
    for i, cls in ipairs(listClasses) do
        if args.listclass == cls or args.bodyclass == cls then
            return false
        end
    end

    return true
end

local function hasBackgroundColors()
    return args.titlestyle or args.groupstyle
end

local function getTrackingCategories()
    local cats = {}
    if needsHorizontalLists() then table.insert(cats, 'Navigational boxes without horizontal lists') end
    if hasBackgroundColors() then table.insert(cats, 'Navboxes using background colours') end
    return cats
end

local function renderTrackingCategories(builder)
    local frame = mw.getCurrentFrame()
    
    if not frame then return end
    
    local s = frame:preprocess('{{#ifeq:{{NAMESPACE}}|{{ns:10}}|1|0}}{{SUBPAGENAME}}')
    if mw.ustring.sub(s, 1, 1) == '0' then return end -- not in template space
    local subpage = mw.ustring.lower(mw.ustring.sub(s, 2))
    if subpage == 'doc' or subpage == 'sandbox' or subpage == 'testcases' then return end
    
    for i, cat in ipairs(getTrackingCategories()) do
        builder.wikitext('[[Category:' .. cat .. ']]') 
    end
end

--
--   Main navbox tables
--
local function renderMainTable()
    local tbl = HtmlBuilder.create('table')
        .attr('cellspacing', 0)
        .addClass('nowraplinks')
        .addClass(args.bodyclass)
             
    if args.title and (args.state ~= 'plain' and args.state ~= 'off') then
        tbl
            .addClass('collapsible')
            .addClass(args.state or 'autocollapse')
    end
 
    tbl.css('border-spacing', 0)
    if border == 'subgroup' or border == 'child' or border == 'none' then
        tbl
            .addClass('navbox-subgroup')
            .cssText(args.bodystyle)
            .cssText(args.style)
    else -- regular navobx - bodystyle and style will be applied to the wrapper table
        tbl
            .addClass('navbox-inner')
            .css('background', 'transparent')
            .css('color', 'inherit')
    end
    tbl.cssText(args.innerstyle)
 
    renderTitleRow(tbl)
    renderAboveRow(tbl)
    for i, listnum in ipairs(listnums) do
        renderListRow(tbl, listnum) 
    end
    renderBelowRow(tbl)
    
    return tbl
end

function p._navbox(navboxArgs)
    args = navboxArgs
    
    for k, v in pairs(args) do
        local listnum = ('' .. k):match('^list(%d+)$')
        if listnum then table.insert(listnums, tonumber(listnum)) end
    end
    table.sort(listnums)
 
    border = trim(args.border or args[1] or '')

    -- render the main body of the navbox
    local tbl = renderMainTable()

    -- render the appropriate wrapper around the navbox, depending on the border param
    local res = HtmlBuilder.create()
    if border == 'none' then
        res.node(tbl)
    elseif border == 'subgroup' or border == 'child' then
        -- We assume that this navbox is being rendered in a list cell of a parent navbox, and is
        -- therefore inside a div with padding:0em 0.25em. We start with a &lt;/div&gt; to avoid the
        -- padding being applied, and at the end add a &lt;div&gt; to balance out the parent's &lt;/div&gt;
        res
            .tag('/div', {unclosed = true})
                .done()
            .node(tbl)
            .tag('div', {unclosed = true})
    else
        res
            .tag('table')
                .attr('cellspacing', 0)
                .addClass('navbox')
                .css('border-spacing', 0)
                .cssText(args.bodystyle)
                .cssText(args.style)
                .tag('tr')
                    .tag('td')
                        .css('padding', '2px')
                        .node(tbl)
    end
 
    renderTrackingCategories(res)
 
    return tostring(res)
end
 
function p.navbox(frame)
    -- ParserFunctions considers the empty string to be false, so to preserve the previous 
    -- behavior of {{navbox}}, change any empty arguments to nil, so Lua will consider
    -- them false too.
    local args = {}
    local parentTitle = frame:getParent():getTitle()
    local frame_args = (parentTitle == 'Template:Navbox' or parentTitle == 'Template:Navbox/sandbox') and frame:getParent().args or frame.args;

    -- Out of order parsing bug.
    local temp;
    temp = frame_args.title;
    temp = frame_args.above;
    for i = 1, 20 do
        temp = frame_args[&quot;group&quot; .. tostring(i)];
        temp = frame_args[&quot;list&quot; .. tostring(i)];
    end    
    temp = frame_args.below;
    
    for k, v in pairs(frame_args) do
        if v ~= '' then
            args[k] = v
        end
    end
    return p._navbox(args)
end
 
return p</text>
      <sha1>31l17gofozy0oqtrwmgd1axmtq4rvzw</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Side box</title>
    <ns>828</ns>
    <id>42926982</id>
    <revision>
      <id>611333758</id>
      <parentid>611192531</parentid>
      <timestamp>2014-06-03T04:58:46Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Side box: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <text xml:space="preserve" bytes="2692">-- This module implements {{side box}}.

local yesno = require('Module:Yesno')

local p = {}

function p.main(frame)
	local origArgs = frame:getParent().args
	local args = {}
	for k, v in pairs(origArgs) do
		v = v:match('%s*(.-)%s*$')
		if v ~= '' then
			args[k] = v
		end
	end
	return p._main(args)
end

function p._main(args)
	local data = p.makeData(args)
	return p.renderSidebox(data)
end

function p.makeData(args)
	local data = {}

	-- Main table classes
	data.classes = {}
	if yesno(args.metadata) ~= false then
		table.insert(data.classes, 'metadata')
	end
	if args.position and args.position:lower() == 'left' then
		table.insert(data.classes, 'mbox-small-left')
	else
		table.insert(data.classes, 'mbox-small')
	end
	table.insert(data.classes, args.class)
	
	-- Image
	if args.image and args.image ~= 'none' then
		data.image = args.image
	end

	-- Copy over data that doesn't need adjusting
	local argsToCopy = {
		-- Styles
		'style',
		'textstyle',

		-- Above row
		'above',
		'abovestyle',

		-- Body row
		'text',
		'imageright',

		-- Below row
		'below',
	}
	for i, key in ipairs(argsToCopy) do
		data[key] = args[key]
	end

	return data
end

function p.renderSidebox(data)
	-- Renders the sidebox HTML.

	-- Table root
	local root = mw.html.create('table')
	for i, class in ipairs(data.classes or {}) do
		root:addClass(class)
	end
	root:css{border = '1px solid #aaa', ['background-color'] = '#f9f9f9'}
	if data.style then
		root:cssText(data.style)
	end

	-- The &quot;above&quot; row
	if data.above then
		local aboveCell = root:newline():tag('tr'):tag('td')
		aboveCell
			:attr('colspan', data.imageright and 3 or 2)
			:addClass('mbox-text')
		if data.textstyle then
			aboveCell:cssText(data.textstyle)
		end
		if data.abovestyle then
			aboveCell:cssText(data.abovestyle)
		end
		aboveCell
			:newline()
			:wikitext(data.above)
	end

	-- The body row
	local bodyRow = root:newline():tag('tr'):newline()
	if data.image then
		bodyRow:tag('td')
			:addClass('mbox-image')
			:wikitext(data.image)
	else
		bodyRow:tag('td'):css('width', '1px')
	end
	local textCell = bodyRow:newline():tag('td')
	textCell:addClass('mbox-text plainlist')
	if data.textstyle then
		textCell:cssText(data.textstyle)
	end
	textCell:wikitext(data.text)
	if data.imageright then
		bodyRow:newline():tag('td')
			:addClass('mbox-imageright')
			:wikitext(data.imageright)
	end

	-- The below row
	if data.below then
		local belowCell = root:newline():tag('tr'):tag('td')
		belowCell
			:attr('colspan', data.imageright and 3 or 2)
			:addClass('mbox-text')
		if data.textstyle then
			belowCell:cssText(data.textstyle)
		end
		belowCell:wikitext(data.below)
	end

	return tostring(root)
end

return p</text>
      <sha1>jfmbvohofft3khrv2rsbyzmhn8vt45d</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Unsubst</title>
    <ns>828</ns>
    <id>40945493</id>
    <revision>
      <id>601903475</id>
      <parentid>581707228</parentid>
      <timestamp>2014-03-30T01:52:54Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>Deprecate the $N parameter; the template name is now detected automatically. The $N check is still present until all transclusions have been updated. Code courtesy of [[User:Anomie]], [[User:Jackmcbarn]] and myself.</comment>
      <text xml:space="preserve" bytes="1644">local p = {}

local specialParams = {
	['$N'] = 'template name', -- Deprecated, but keeping until it is removed from transcluding templates
	['$B'] = 'template content',
}

p[''] = function ( frame )
	if not frame:getParent() then
		error( '{{#invoke:Unsubst|}} makes no sense without a parent frame' )
	end
	if not frame.args['$B'] then
		error( '{{#invoke:Unsubst|}} requires parameter $B (template content)' )
	end
	
	if mw.isSubsting() then
		---- substing
		-- Combine passed args with passed defaults
		local args = {}
		for k, v in pairs( frame.args ) do
			if not specialParams[k] then
				if v == '__DATE__' then
					v = mw.getContentLanguage():formatDate( 'F Y' )
				end
				args[k] = v
			end
		end
		for k, v in pairs( frame:getParent().args ) do
			args[k] = v
		end

		-- Build an equivalent template invocation
		-- First, find the title to use
		local titleobj = mw.title.new(frame:getParent():getTitle())
		local title
		if titleobj.namespace == 10 then -- NS_TEMPLATE
			title = titleobj.text
		elseif titleobj.namespace == 0 then -- NS_MAIN
			title = ':' .. titleobj.text
		else
			title = titleobj.prefixedText
		end

		-- Build the invocation body with numbered args first, then named
		local ret = '{{' .. title
		for k, v in ipairs( args ) do
			if string.find( v, '=', 1, true ) then
				-- likely something like 1=foo=bar, we need to do it as a named arg
				break
			end
			ret = ret .. '|' .. v
			args[k] = nil
		end
		for k, v in pairs( args ) do
			ret = ret .. '|' .. k .. '=' .. v
		end
		
		return ret .. '}}'
	else
		---- Not substing
		-- Just return the &quot;body&quot;
		return frame.args['$B']
	end
end

return p</text>
      <sha1>h6neey00tvti84s76xnvhsxv95fz8uh</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
  <page>
    <title>Module:Yesno</title>
    <ns>828</ns>
    <id>38665046</id>
    <revision>
      <id>604718900</id>
      <parentid>582180209</parentid>
      <timestamp>2014-04-18T10:35:42Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>use the Lua string.lower function instead of mw.ustring.lower; this makes the function around 25x faster</comment>
      <text xml:space="preserve" bytes="678">-- Function allowing for consistent treatment of boolean-like wikitext input.
-- It works similarly to the template {{yesno}}.

return function (val, default)
	-- If your wiki uses non-ascii characters for any of &quot;yes&quot;, &quot;no&quot;, etc., you
	-- should replace &quot;val:lower()&quot; with &quot;mw.ustring.lower(val)&quot; in the
	-- following line.
	val = type(val) == 'string' and val:lower() or val
	if val == nil then
		return nil
	elseif val == true 
		or val == 'yes'
		or val == 'y'
		or val == 'true'
		or tonumber(val) == 1
	then
		return true
	elseif val == false
		or val == 'no'
		or val == 'n'
		or val == 'false'
		or tonumber(val) == 0
	then
		return false
	else
		return default
	end
end</text>
      <sha1>ew4l88ll7bbgr20npia5rfyblzqhgyg</sha1>
      <model>Scribunto</model>
      <format>text/plain</format>
    </revision>
  </page>
</mediawiki>
